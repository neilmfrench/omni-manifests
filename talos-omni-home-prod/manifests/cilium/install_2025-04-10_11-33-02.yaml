apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-distributed-lru: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-mode-annotation: "false"
  bpf-lb-sock: "false"
  bpf-lb-source-range-all-types: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: production
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  default-lb-service-ipam: lbipam
  devices: enp2s0
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  enable-endpoint-routes: "true"
  enable-experimental-lb: "false"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-internal-traffic-policy: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-lb-ipam: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-node-selector-labels: "false"
  enable-non-default-deny-policies: "true"
  enable-policy: default
  enable-policy-secrets-sync: "true"
  enable-runtime-device-detection: "true"
  enable-sctp: "false"
  enable-source-ip-verification: "true"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  envoy-access-log-buffer-size: "4096"
  envoy-base-id: "0"
  envoy-keep-cap-netbindservice: "false"
  external-envoy-proxy: "true"
  health-check-icmp-failure-threshold: "3"
  http-retry-count: "3"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-metrics-server-enable-tls: "false"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  iptables-random-fully: "false"
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  policy-secrets-namespace: cilium-secrets
  policy-secrets-only-from-secrets-namespace: "true"
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-concurrent-retries: "128"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  tunnel-source-port-range: 0-0
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {"admin":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}},"applicationLogConfig":{"logFormat":{"textFormat":"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"}},"bootstrapExtensions":[{"name":"envoy.bootstrap.internal_listener","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"}}],"dynamicResources":{"cdsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"},"ldsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"}},"node":{"cluster":"ingress-cluster","id":"host~127.0.0.1~no-id~localdomain"},"overloadManager":{"resourceMonitors":[{"name":"envoy.resource_monitors.global_downstream_max_connections","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig","max_active_downstream_connections":"50000"}}]},"staticResources":{"clusters":[{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"xds-grpc-cilium","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/xds.sock"}}}}]}]},"name":"xds-grpc-cilium","type":"STATIC","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","explicitHttpConfig":{"http2ProtocolOptions":{}}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"/envoy-admin","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}}}]}]},"name":"/envoy-admin","type":"STATIC"}],"listeners":[{"address":{"socketAddress":{"address":"0.0.0.0","portValue":9964}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtualHosts":[{"domains":["*"],"name":"prometheus_metrics_route","routes":[{"match":{"prefix":"/metrics"},"name":"prometheus_metrics_route","route":{"cluster":"/envoy-admin","prefixRewrite":"/stats/prometheus"}}]}]},"statPrefix":"envoy-prometheus-metrics-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-prometheus-metrics-listener"},{"address":{"socketAddress":{"address":"127.0.0.1","portValue":9878}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtual_hosts":[{"domains":["*"],"name":"health","routes":[{"match":{"prefix":"/healthz"},"name":"health","route":{"cluster":"/envoy-admin","prefixRewrite":"/ready"}}]}]},"statPrefix":"envoy-health-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-health-listener"}]}}
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-dev-sj
      role: remote
    - name: remote-dev-phx
      role: remote
    - name: remote-staging-rpi
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: production\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        location /api {\n            proxy_http_version
    1.1;\n            proxy_pass_request_headers on;\n            proxy_pass http://127.0.0.1:8090;\n
    \       }\n        location / {\n            # double `/index.html` is required
    here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n
    \       # Liveness probe\n        location /healthz {\n            access_log
    off;\n            add_header Content-Type text/plain;\n            return 200
    'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  dev-phx: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LmtleQpjZXJ0LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9sb2NhbC1ldGNkLWNsaWVudC5jcnQ=
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LmtleQpjZXJ0LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9sb2NhbC1ldGNkLWNsaWVudC5jcnQ=
  staging-rpi: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LmtleQpjZXJ0LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9sb2NhbC1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  dev-phx: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1waHgubWVzaC5uZWlsZnJlbi5jaDoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1zai5tZXNoLm5laWxmcmVuLmNoOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
  staging-rpi: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1ycGkubWVzaC5uZWlsZnJlbi5jaDoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-kvstoremesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHVENDQWdHZ0F3SUJBZ0lRQ0pEWVJTM0dMMXYzRkgzM0xxODNGVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TkRFd01UZ3pNekExV2hjTk1qZ3dOREE1TVRnegpNekExV2pBYk1Sa3dGd1lEVlFRREV4QmhaRzFwYmkxd2NtOWtkV04wYVc5dU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1tcFV3eFRqbTYrUkhLcUw1KzhjNzQ3bmlJK0pmcFBOVGQ0dFpGbGkKL3JqZmRTV2Y1dmxzV2ZkTmxyLy9Yd2p5ZXJzRHU3SXR0clMxQ2ptbnFnOTBkZW1sbDlIWlVoR0Q5ODBrWndBawpDK2Q2OGZaa2lNc0Rjck53QStXL00zeHg2OGFlcUNyWlM2ejZhbUhhcVVoRkpuWE9nMU9QcVQyR296MnMvM2RwCjUveWVydzdnWHhZYjZZYXE1M2V1UW5ReEZ1Zklhc3dTbzZVRVFSUXhXSUVCV1pnQzJkYXFCQmZpNkFoclNoSGsKbHYxdXg4T0cyTE5zQ0NsSTl3L1BmUlNGOUp3SmdaRm1VaHkxdlh1WEpHZ05VZEdPdCtnVG01V2d6WVlRSzRwVgp3eWR3S0ZRTjE0cmZrQ09QbTE4Rzhzamw0b05HRGt5SysrbjYvN3BTU0hPMUx3SURBUUFCbzJBd1hqQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWQKRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTlwVmpkbHlXVmRob0RWdXJuRDl0bE16L0NpWXdEUVlKS29aSQpodmNOQVFFTEJRQURnZ0VCQUV5dGRYVGF0czRlNnBvamxrLzRtS3lVeG9peThCam4ranBXRURLRXVSYjJIRGFsCktobTFnaFFzV28wY0pDZytWcE0yc3ZudFQyUksyUlQ2bjVXdE0zL3JrZk9rcG4xVnNTTlE5T2VPUDllZ3U4K3cKeVRKcVAvNktpUFp6SEZ3QVh2ODhqL21TeUt6T0hHa2NkZzRrOFd2Uys2VzhOTis4Um1MMm1vQWdCeVJLNDZ6cQpkNmo5UC9ZRVpyb3MwODI5aUwrcDl1UWY3Tm9NdURQTVhmU3Q4U2FHMnRnZ0hUSUtDWnZ0dTNYSm5CcjVvaVY3CkRlWHVjcGp4NitnLy8vaGRSZUhxcjNOMmoyN0dFOHFUaTVMZjJ2V1prajEzejJhNFF5MnRMakFSaDgxWUNzUlUKSFZrUDhKM1FPOE8yN1RibDhiUngwZkFmV2NSaVN0S05OMm8rQnRzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbW1wVXd4VGptNitSSEtxTDUrOGM3NDduaUkrSmZwUE5UZDR0WkZsaS9yamZkU1dmCjV2bHNXZmRObHIvL1h3anllcnNEdTdJdHRyUzFDam1ucWc5MGRlbWxsOUhaVWhHRDk4MGtad0FrQytkNjhmWmsKaU1zRGNyTndBK1cvTTN4eDY4YWVxQ3JaUzZ6NmFtSGFxVWhGSm5YT2cxT1BxVDJHb3oycy8zZHA1L3llcnc3ZwpYeFliNllhcTUzZXVRblF4RnVmSWFzd1NvNlVFUVJReFdJRUJXWmdDMmRhcUJCZmk2QWhyU2hIa2x2MXV4OE9HCjJMTnNDQ2xJOXcvUGZSU0Y5SndKZ1pGbVVoeTF2WHVYSkdnTlVkR090K2dUbTVXZ3pZWVFLNHBWd3lkd0tGUU4KMTRyZmtDT1BtMThHOHNqbDRvTkdEa3lLKytuNi83cFNTSE8xTHdJREFRQUJBb0lCQUYyekdDd29pTlQzL0Q1QQozeFNtYkJDUnpyMTNIQi9LNEZIWCtBTmtta1duT1RHRTJ6cjFMMktJUm5Tcm5QSzJJeTJHUGdXdllUMzArY1p5CnBlTHo3ZDkvSUJTNEtmODYwYkdVc2ZvdWc3RVZqZTAxYmx2emxPd05Kbk8yL2dib0JOamxkWERtVDJVMFdlQWoKOE9PNER2My9qb2p5TThLbXF3UnpjSDYwbjNjOVNsOUZIcjNiMk9mb2UxV2NIME5sYTMxdXRLZnQ3eFJ6Q2dTdQpwYWhWNEtBWW4zcVErSkxQbEhQM0VMOUJRTnBCbmJuS2x5SXZUSjROQ05sc3hnUFNxaWxOMHRZU0diOTRpeko0Cm40SUtDVXlXMC9PY3NNSnFDNllVZjhVMWFMSUJQWFRBanJ3L3I2Tm9oa0llMTFDcVJyUU0xSGJuTEFvRWFCenMKZXBYWHMwRUNnWUVBeFJmUlQ5Y0tXTlkxQTZTY3lVWm9HY0hkeTY2RjJOcVEwK1FpWjEwUGdxNWc2SzBGWTZjdQpoNURtdUtDd1JVZGtJVzFUSWdJK29va3hBMFMyOHRjQzRPbzM4MDRsWkZMSnoxNGk2RG8yaUJaT0V5WFV2VEl0CjkxMDNyTEFRak82Yk5XSFJScFAydXJKbUk2SS91VEJwVyt5K1hTRHE0ellrbnhIdTRaN2JUTzBDZ1lFQXlKRWQKaTVHQlNqeEFZV1BFSnZVZHd5bzZ2am1OMExaNVpNcGYreXVGTm0zZlRMbnJ4c2E5aVVFZWVZSkg3SHdoR3JWSAoyOFRham1SOUpWMkxTR0ZRVk9JUlRUcFhxcithN2V4Z2NtTC8ycTE2dVhUUjlTTHZ5UTdlcG5pY0pjb0hrb3JKCkFBazlweFloUkZxR1pSZGpKZHQ3YXYwckREMGtYRWZqU1lJdkl3c0NnWUJJRVhsOEZFbTRTanVBWllUZkpGdVUKYjR0R216NWVHUzIwRFV0M09GUWZtTnZldU1XcnRzb1EwQzlOZTVSNUFLM2dlelZXempOUkE1RmtmSS9aSkQzdApPRGZWUTlId2FVVmFDallCYktmY0F5dnhYSGY1NW90Z1ZEbXpiMzNkeXJIK1J4SmJHR2V6eE9BTVQ1dTFmN3BHCjNyNk5GeWhNaE5QSFJxdHUzTU9iMFFLQmdFc2VudlJCUVMxdXQ2WkNXWnRGdnluenpTQ21LY2w4THFkamJPT0QKLzFiTmZBOGVxNEk5dVl1SXlrTTBXbi9tVmZmTTRlY2NLY2VmTjRnaEt5T20zeEdMd25Nc1lOMWcra1FXZm1FWgpWejZ1THdMN0VCQkNUNUQ4Y3NQaTlJanF6RDlFbjlmVm5qUFFoQkUzM3BKS1dpWTV1Rlh3RUlsNjlQMWpKMnZHCnlLVFZBb0dBYTQ3bHJHU054S0lGN0NhWmZyOGVoYVU1Q2haRFFIT0kwRGNwWmhTR05kQU5xY3kzTDRHRTRsc2UKSm1nZ21QazBVa29tV1NrWk5jajMwbzRvUkM0SW5VR2ZGMU94UGhiQjJaR0N6M1ZsRTdpSjY3YWJ5aHZmL0d3OAo4N1l6bUEzU1Z0R0ZTQTdmK0QyTFZPQWZhSWZUaWxXWDBTVjdZZlczRGU4cHBGVUNKMXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQUtxbGphaU1EU1RURmhNMXM5UHZKRUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURReE1ERTRNek13TlZvWERUSTRNRFF3T1RFNApNek13TlZvd0d6RVpNQmNHQTFVRUF4TVFiRzlqWVd3dGNISnZaSFZqZEdsdmJqQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFQRmdxVlh6UTNNR1ZxdWNGMEJWbjRZOHNjZjREZzhTSE5hSExsTkkKQ1pGemFsMWdDNFJQTERUUmtkalVVRUlZd1VmSEJ0WFJPY2s1ckxkYVkzK0o1MEd2YjRUaEhpNUtFT00vREZNYgoxdzQvZ3grQ1Bjd1dSUlVHUFhwbHROa254d0hxTlBROGU2ZXZRWWRtYXFyRHROR0xsSllyUnh5clR2MmlQc2JhCmVob2hlVzgrUlBpZDRiMk8yQTgzTzdrZ1BYNzlVNmttQXVxcEgrK0lBZk1VRDl4WnpJRnJmM0NwSjNYWCtxdm4KeEY5L2l1UTNkMU1IWXRXWDJyK3NNc09IWVlaVVYvSTRHdzdkcE0rd0M3cVkvNGtPOE5kSGRlaGlMMlNGRWtIeQo4cGFnWTFGMW1ZU1hjMWs5eWtBcnNsbWpNZUVCZFFuT0tiYnJHS2VvSUtBTmNkVUNBd0VBQWFOZ01GNHdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYVZZM1pjbGxYWWFBMWJxNXcvYlpUTS93b21NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBQlpzR2hIQTAvVU5zMDhobnNFZFJjZ3Z4Vmg4blZiOFgxUVdtbVhjWEZMK0NtCldWM0EzYWtUckExTS9pMEhGK0F5d1VuUmFhRzlXL29QcUNySFZIOEY4Tldueko2Y3RMQzE5Vm82bXpoM3FuTGEKaVQ3dVJXTU8rN0RPTFRsQmNVWUhBNUJNbkxkS2NFdVNScUhCSVBkOTNYbzYwa0E3STR3RHlOOGk3YzlvTXZTKwppYXNCSlZqQllWbjFiS2VsR0VEdGJ5TnVoZFN0MjFEdHhPaTYzeXVkZEpBTGhwcGkxVVNRN1ZWZUdJRXpVTmwrCkNKWVVXWEJkOE05NFZ0RFNCeTNGS0lEWDNPSmhKQjVRYUhCNzZ3TXRDTDNqaVhJaDliOG9MYXZqbDY5M2tQNzgKcmp3VXkyT0YreUVGcDNSc2pTVGxaZXc3QTdrQWRiRUQxOGYyUCtnZwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOFdDcFZmTkRjd1pXcTV3WFFGV2Zoanl4eC9nT0R4SWMxb2N1VTBnSmtYTnFYV0FMCmhFOHNOTkdSMk5SUVFoakJSOGNHMWRFNXlUbXN0MXBqZjRublFhOXZoT0VlTGtvUTR6OE1VeHZYRGorREg0STkKekJaRkZRWTllbVcwMlNmSEFlbzA5RHg3cDY5QmgyWnFxc08wMFl1VWxpdEhIS3RPL2FJK3h0cDZHaUY1Yno1RQorSjNodlk3WUR6Yzd1U0E5ZnYxVHFTWUM2cWtmNzRnQjh4UVAzRm5NZ1d0L2NLa25kZGY2cStmRVgzK0s1RGQzClV3ZGkxWmZhdjZ3eXc0ZGhobFJYOGpnYkR0Mmt6N0FMdXBqL2lRN3cxMGQxNkdJdlpJVVNRZkx5bHFCalVYV1oKaEpkeldUM0tRQ3V5V2FNeDRRRjFDYzRwdHVzWXA2Z2dvQTF4MVFJREFRQUJBb0lCQVFDK1ZYaHgzQmNOdHF2VgpPb3BqSXFGZUdySWRldzZxOTU5aDBzckd4UUUyZm9vYkEwZFJsNVRHT1pNR0piVDd5Y1Z2TWhQRHV1NFVMTFJ6CkNJVjQ1bWRDdG5IN21BQlNnL2o1R0poQldLeW1BWk1GMzQrWFJPQklpZGtra05xZ2VldEZLVWVFWjhVaUh1SlAKUUlWUURtNmc1YTNQRkdWSXlCVExqNHB0QjQ1TTF4eDFQTFFsOVQzWmxrN2xoQ0pTc3FpMlZ0UkNwRDFuWC9vegpKQW5sd1FCUnpEWlB4ZzhoQUxZbUtxTzdxNXNrdVdMeUhpWERnUXlSOXQ0UC9LV05wa3F2UFdWOGxvNXAyY0dSCnp1TFhEYnFVTUVrdUxSdFdHRm5Kc1lXeVJtcVZ0c2QzbjFDaFdxNUszOUZnMERZTGhhbUEvclExL0VCeVNHdUQKV3V3NWtDTkJBb0dCQVB3emJuT01yK00vT2ZxcWllc1BELy9CUzRTSG9HRzFCVENGY3hEQThCUTdNQnY4TE05TApEQjA2SkFacmRPUDIvSFRGcS9zZGJvV1E2bzJaS256WWxlQm9yZmJIWk1KT3h3bE5hT3AxZWQzSGx0dFNUVEptCnZWYkNGNllZRjhGTFFuNXRQbzhSQWlybytISGtxQWZualk5dlQ5QkNUUlBlRmZTOGNDUGM2N1F0QW9HQkFQVUQKZmVWY3RIRS9mTWVlRU9xQkFIc3p3N3FUVTdjcW5jdHZTRFZYT0VyK25pSERhYUgwUVVwd2ZIajdKaVliSEt5VwpTQk03TGxHVHpSTVpIajNXV3puR01pdThkelk3QjVtM3daejhQVHVRc0szSkhDM3pueFNrM2p0OUt2a3lqVGRtCk1BdDlERmZiV2NObElHc0hib0o2c0Z3UWtkM1R5NWNwL1pDY0NQVkpBb0dCQU5xWUtZLzF6UzRHeTFZOUlyV2UKcEp0bEN2T2dLcDhGcTYzV3ZWazBJZU1uT2hmSGgzOVU2UGNjUWNWZXRqNHhBYmlrN09BSExwaU9kdjZzVjJ0Rwp2d0YzT2ZHLytkR0JQbnNOb1hZMnhKNDZOTU44bm5TbElFOW1nK0R1MlFndEYwRkZwd2VTRW5MbTR4QzB3LysxCjc3ajNIaExBcE5ZbmxKaEFER0xKUlhNeEFvR0FmSmRQOThoU2dad1ZLYlQ1U1NaY1Jrb21aOFB2T0I5VnFsTm0KVnFtSm1La3RaR0hvWDFERHVzVEVwd2lmZDVVbDJhVjU5VDJNNmpMTWY3K3dIeVhYc2VOVk0rUmNncGsxM2pjUgpIM0VzK2hNenBNdTFwckJSM3IrUHVwU0Z1NzYzRE1yTDk2dVpFVHdid3o2elkzbWQrbi9GR3F2YVlRRUljRkFMCi92TTVvdkVDZ1lBTDlWWC9UUUtpR1NTb3V6eG9qMzMycUpONzU5MDNWdHZ5eVF1RkllQlg1bjd2N0hoNjdJRk4KMlJwMWVQeThxT3BvVVBTTG1tR2NQa0R6eVI2amUvTkNia1dEOWRHV09QN2Y0c1kwMnMxenUxNFJJMkl5cVMvZQpLdU5GbWtLZnpteUVxZWR1NVJEa09FamdULzVjNE5kdTFUdlgrVFhRZklxNHQ4cDRvQm5VZGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-local-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRRi9IazBGY3VGWVZFMmtYeGJodUZtakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TkRFd01UZ3pNekEwV2hjTk1qZ3dOREE1TVRnegpNekEwV2pBY01Sb3dHQVlEVlFRREV4RnlaVzF2ZEdVdGNISnZaSFZqZEdsdmJqQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFML1FoRi9NZElhcUtKNEppUUE4TDl3VUVqUUNtTU8rN25jaFprNjMKQ2NDQ3hYS2N4U3AySFNDNVYzeWdwNDdDVDB5RllpKy9LTGhSNEZLVHhDVHJ5eFRmaE8rSnNnSFJGejdNN2VFeQpBMkZRUXZrUDQ4KzdiOVFpSXZSa0RMb0lPSzZSVW1LUXRMLzhGWmdWOG1kMG9BQlE3VHBzcC9Ed2tROElLZmd3CktaL0R5WkRiYjM1ZkQ0NzhVMGRlRHNzdGFGS1FBWVM0Q3AyWEJ3RlVHcUdadUhEeHYrck5lMlRUZ2JvWEVHb1oKejlJbzVLNTBGamxxZmFEWmVZZVJwdTh4UTBIbWdFNG1RdkNqYlQ0L2lJQlBhZzlvTk1va1BRQjRVcnRYQVlrUwpTeUZpT2tsZE44eEx5RWVJT3pwVHFRSUtXQ2UwTWF0RVZGOXNRVlVCS1pyM0cvVUNBd0VBQWFOZ01GNHdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYVZZM1pjbGxYWWFBMWJxNXcvYlpUTS93b21NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFCZ3JZNGJDNUdvb3NReTNuNnJvYnJoZldVWU5BUUxydHZFWDJEQ0l6STY3QzBOCitKNUdTM0VaSno5eWNER3RUUWdOYmUraGtVa1ZxaFdzdlFXREp5aTIzdXBGalJWeWVZaWZEVkpFMllPeTU2aGUKN0RydElPbkZpaUhreVlJZHQwRk9mRDJUYUR6K3VrblVYdlFxRVNyWWJkUE9nMzFSbVAvVGUwTW4xTlZ3Z1J3KwpBclZlczBoNE80ckE4YkNEbzhLUzFsdDBOdjhIb2MyVlBMVGM4NEw1cVFsRnpQc04zZENlelAxSURZRGQzSUpvClN5WkRUaXFCUHlybzlDb0ZrQzhZN3NSb05nU2dxVEhYdHV4MDYwV1dEMGxCZU0yUkpNSFR5VjNRb0ZKblVtM2MKeEpxZHc1cjkxWGJHTTJ6d2VLZjMxTEZxazVhTE1Uem43NFJtQmNadwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjlDRVg4eDBocW9vbmdtSkFEd3YzQlFTTkFLWXc3N3VkeUZtVHJjSndJTEZjcHpGCktuWWRJTGxYZktDbmpzSlBUSVZpTDc4b3VGSGdVcFBFSk92TEZOK0U3NG15QWRFWFBzenQ0VElEWVZCQytRL2oKejd0djFDSWk5R1FNdWdnNHJwRlNZcEMwdi93Vm1CWHlaM1NnQUZEdE9teW44UENSRHdncCtEQXBuOFBKa050dgpmbDhQanZ4VFIxNE95eTFvVXBBQmhMZ0tuWmNIQVZRYW9abTRjUEcvNnMxN1pOT0J1aGNRYWhuUDBpamtyblFXCk9XcDlvTmw1aDVHbTd6RkRRZWFBVGlaQzhLTnRQaitJZ0U5cUQyZzB5aVE5QUhoU3UxY0JpUkpMSVdJNlNWMDMKekV2SVI0ZzdPbE9wQWdwWUo3UXhxMFJVWDJ4QlZRRXBtdmNiOVFJREFRQUJBb0lCQVFDWCtrakg5cURsQ2ZGQQp0bUZjVkZPL1ZnL09NYmlFYjhWVmtwc1RCeWVzNW5BM0RVdVRCeDZ4RE9qcWtBZnlyclpSOU9VRTI3c1J2NTJ6CkQrMDdLN0F1aTZNeWY3RVFpM0NWaTUxMjdqK0xYU0tUWUNtcUwrSzgrNGNpaUJzbFV0cEdSbEkyVWwxRU9DR0wKN09leFhOQmhMNzJtcXV5dGxJMzZrUWRmNUJrMndYU1hrL0Ric0pzMng5UU9vTkJYQXNReDhyaWpPekkwSGV5cQpFQkZWRndSRmRqazJWYWtDd2phOUtzeDhRbWhqUGY2bmZZOTNsdGhpdUJtcklxVjFsaHYrQ0VXTS94Vm85NjYwCjA0UHNid1NLUEtKbUVHYXFwOXpqUkZwM1p4S3N4MFhEQ0RaNldlT1hKRG9RT3U4VUtBTmRYS0R6VTRhWFBoMEcKanB1QklUTEJBb0dCQU9WM0dVN0I2WGlQRmlKVmNYK3lGRGF1ZFh4dmUvdlVhemlSMStkTWJFZHlFanlZUXBxYgpDWGIwWmVaNGI3OGVVRlQrdUZsUDVKTFhXeXYvRXo5UGpRVVk2RmZqU2NheHd5SGJPam9mTlpFSUsxeEtYWkkwCmYvVFNuMGxRL2lCNDBhZG11SWF3cjlmOUJaZ2ZuTEhqVFdtaEFqR0F6QUk1ZzRUaHZGT2d4dnE1QW9HQkFOWCsKMWw1aVJWYnBVdmJ4OVk1NlMyOTdDQW42a0VsSG95Rm90U1ZsQXVETVFpR1lhdFh3b2QvSTdhLzM0YmFEWEl6Ygo3MzFFMWpWdzBYM0laK3V1RHkyNDljZGVBcVJxYnQxUXBtMkNGcWg2K3draXoyM2xJWG5vQ29ITlNRNW81ZFVHCnBKc0NKZmkrK3M2Zi9XdDBmSlluQXhsZzdPc0J1b2VzM1RIMFU5MGRBb0dBUjFiU3VHaVRCRmMvNDJhN0JaOUEKcDR0dm5VTXZ3YWhWdVYybVNSTzZhaS90dVljQTFmNHpZQmMxZ3dTWWdVdVVZQWhkR2U4N3VlZFlRZ0pvWW51Qgo5VDY4Slc3VlpmK29FZU9OWTdxR05kUGJYek1EaWt2bUtDQS9RMVQ1M1BDVEJiOXF5UDB2ZmkvOHlFR3p2cDVUClYrNmx0dXc3QU1vT3VJWlJ2Wkl6cW9rQ2dZQk5iZHpnMzh2WkM2bUNRc0FuNG1Zakd6QW9kQ242NmRuRHYrQXoKZko0UytyVSs5S2hMYXJzWGZ0dEozWFlsRk5qSyt0Vm56UjE0enE1dVJiSWNXNm1RVUtsVmp0V0Q2aUxkSDA1bwp0elk5bGVuNVAwZ3dxa1IzbUpjY3FrdXgxQkM5Q0o5TW12VmtVSzN0VDRSaGVnK09RT1ZsTEdYdERuNFFrMktoCnJaY2VuUUtCZ1FDczYzcHVXQjkrNmR6K2hjUW5qTkFoTFpTQndWZzJTWThoNVN6a29jNWUzRDhCbGlqTy9WSnkKVHNvRjlENmx6TTd0WEFZaERKT0xaSDkzeHBqNTN6K3h6UTk2ekJKdGVCTzlYOGVhSDNUdHJyQ1J5TGpKOFkzMApJQjc1LzM5R0dCUVpkRXFkNEQ1L3I3UTQzbm52SlMvUVdQL09FdC9VYnB5SHVMa3NBbk5uZFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2ekNDQXFlZ0F3SUJBZ0lSQU42Qy9tYUJac25MblhYcXhRc0lva293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURReE1ERTRNek13TkZvWERUSTRNRFF3T1RFNApNek13TkZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1Ndm9ueEJWaVplcFlzVVpEck0KSm1kQURLZFVTT0VSK2RvcFNRMHFKYUhQMWJybHBMeGxqUzZNR3NKRWZaOWhWNU9yZXUwVis4T0ZFcU5PbnphaAo4a1hEaXdjbUxUbzRoVDNsYzNWMEcremEzRVd6dGJXb0oxdFJRSmV2bzJsWXdPd0FXZGlzeWlpaFNCZFA3WVhtCmgyaGx6MzBpSEtLaEV0Y3U2eTBvTnV2eVpSTkk1cVZJNWhBaldubXBHN3ZBdzgxcHJqTkZRZFNqd1VkMStKY0gKSm9NYmsyYlB1RmVRelVWVVRjcXVMbHpiSTNaZjFCQTVDMDlGUWJidm02b0FtVU9mZkJCdGpoeXVDVE1hNHI2SApXckZ6OHRQc2Y4YXlYSXJ3K2ZIRjh3QkZOcCt1bElPV0Iwazc2dFVSa09zMXpYUUJlNTdMTmd4MEFQS3Vibk4rCkxhRUNBd0VBQWFPQjlUQ0I4akFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTlwVmpkbHlXVmRobwpEVnVybkQ5dGxNei9DaVl3Z1pFR0ExVWRFUVNCaVRDQmhvSWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5CkxtTnBiR2wxYlM1cGI0SVFLaTV0WlhOb0xtTnBiR2wxYlM1cGI0SWxZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnkKZG1WeUxtdDFZbVV0YzNsemRHVnRMbk4yWTRJU0tpNXRaWE5vTG01bGFXeG1jbVZ1TG1Ob2h3Ui9BQUFCaHhBQQpBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWNFV2VSZXo0aXRYRlFpbk9MCnVGMlpXWHY1WTBPSnBYMGx4WHBZeFZRSG1zajBDK05ybHpic1pleGdJZkZWSmhwVVRBTFdvY3hvTnVTekY4WnMKelp6dDhqRWx2bGd3TmlNamlVRHZwQjJoQnBTa3dzek1vNlo0SSswTE5Rc1BEUjQzeG50Yjl3cjRJalNzSXBVaApzQmx6a2FIanFEdkVWSlZrWVhtblBBREovQnpGazJWdXlQaU13ZC80eXcyZS9RaHB3U2QycnhtdU5OWGNqVUZjCjZPZ0JwU24xeVIyMWszaE1KbFBTKzlJRW1JSkEzeis3bStFYU1oVnVnY2VjVThCeUpMWVFGUjdDc2tBaEp5L2sKaFprTGJUdmZLTUVOVURjUUdFdGVDdU9XRUF0ZzNuYjVwY21QUmx1WVd0Sk05aktuTURvSzB0eFhINlFpSTQwWQp3Si9ECi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3kraWZFRldKbDZsaXhSa09zd21aMEFNcDFSSTRSSDUyaWxKRFNvbG9jL1Z1dVdrCnZHV05Mb3dhd2tSOW4yRlhrNnQ2N1JYN3c0VVNvMDZmTnFIeVJjT0xCeVl0T2ppRlBlVnpkWFFiN05yY1JiTzEKdGFnblcxRkFsNitqYVZqQTdBQloyS3pLS0tGSUYwL3RoZWFIYUdYUGZTSWNvcUVTMXk3ckxTZzI2L0psRTBqbQpwVWptRUNOYWVha2J1OEREeldtdU0wVkIxS1BCUjNYNGx3Y21neHVUWnMrNFY1RE5SVlJOeXE0dVhOc2pkbC9VCkVEa0xUMFZCdHUrYnFnQ1pRNTk4RUcyT0hLNEpNeHJpdm9kYXNYUHkwK3gveHJKY2l2RDU4Y1h6QUVVMm42NlUKZzVZSFNUdnExUkdRNnpYTmRBRjduc3MyREhRQThxNXVjMzR0b1FJREFRQUJBb0lCQUY2dWljUjZzVDYxcE5vZApqeTFTZ01LUE9GUW5ONTh1YUNRaTZOUGhBUlpJU21aNkpYcGFUSzBxdTRSSFV5VHdSRnBXMGErV2ZXVnY5UVdSCkN2eW1mRzdKRjNUbFdRVW9DOEpsdnFkWUpuK3oveXcwcTgydC8wRjEzYjUzTGU3WlplUlZtei9YT2MyUnh2WEEKQ1BsdVJYc29BQW0wZFcyU2N5QTlHMG54ZXdyaTFxWldsK3FUd1VUcnZnanFCS2J4ZGxVenJkV1psVHh4L05qVwppa2tpUUp3ajFhM3R5RzBsZ1V2b2hnd0hIeHgzVTVBU05HbCthMVNKenNVVHhpMDAvRHR3VnlwVTVqQXJ6TTgvCjVCUTBJeEdHNlViVDNZT2hEaUgzcm44TFFsLzFVNVY1M3I0M3FreXd5OEZCc0R6TFRhaXNObjdJQ1Rvc3hMQzAKSUJNUnluMENnWUVBMm8wOU9IcDczOHhzVm82Q3RENVdGbkJNRHgyWTYrVmZZdjhSN3JJZmMzaHpPQkNjNnQwUgpPcks3TjdxUWw4VlZ4MEo2Z0dEb1BBUGhIVWlJMU11T01SK1RieGE1RklnVHAvcTdjNDFiYTNGc1pHZng3ZGRxClc3VnUvWDNWd2pybmx5aDkzMXA5b0N2TTdQekkxcldQS3FJV0pKU01DSWJ6KzdoYTlRYkxoTzhDZ1lFQTVLRjIKZHJjMVl5ZGVvM0YxYzdiTWJ2ZUdLdjhJczBPVGJ6SFRCTHd0eEY0ZWc1SENmNUg2OFZrdEtGcWY5M2ZJT29vbwpOVFZMeTExNzk2cjE3UDEweFU1UGZvMUVxeVRFeXYyWmJTMmNVb3FTa2VEaW5GLzdGQ2o1Y1ZCMzhpREtDZVgzClZNZEF4anEyUnhFUlFkUFU2eTVJbUlIMTNlK2VBRllMYWRkZEZtOENnWUJiRmhaMzNZU1hSNm0zZ1htMENXN3oKdHlYYi91Zm5HUmZpT0pDT3ZTb2loQWJ4VE9zNWI1MW9xMmtmMXQvQWdYdzRxZHBJZXhzUE9FYXdYN1MzaTRiZApybDFTSlZSSjNGVGs0N2tRZGMrdVBmMkE4MWwvV1JKNDJtdEJ0eHBKOHlibWR2ZlBDUFhtdFpxWkF0bnBzbzNTCnBPODVtN2VwTGlXdHVhNGZCUS81ZlFLQmdGWGluYWpNKy80cWJPL0RFRmNPcFU5T0pwV0NScGRvM0RxYUllWVcKZHE3Y21HUGVYbzBqbm53SmZ1QTQ0dnpJZjJ3V09ESjh1ZU5FVSt4ZXlaRmtTUGhSaWFWRmxqVWdVOWpaV1VoZApLT3NNNlRCcHBWY082emZRaUp2Ym1hTllVKzFSK1E1YzUyVlA2dWRaYnYwbWdVWnpsWXZNempxMzU4ZkNpdmtRCmtRUjdBb0dCQUl3WDNPdTI2QWpyNEdkTmRPcjFYMFpqUGRkWFdqRGV6MEVEK3B0MUF2dXBQMFVSVjRCbFFDUGEKTWh5d3RlbDdCRHgzVVpQbXRoMGZQTGdMdE1SbHpHNC9qNWdDcTVlTUdFc0RIdGhoL1pWYk1qYnZyTVhkVzQ0dgo2WmtKa3BDek1waHR3WjRyOG9vUEUvQ3NaSlNNNDNJMTRzYnorekViempIQTY0MHVVRGNyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1lMmVaM2hNOU9TeGRLNklPaHArOWN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURReE1ERTRNek13TkZvWERUSTJNRFF4TURFNApNek13TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVyU1RIOWU4cGxLaUUzOTI0YW5BUERrRGJRTTEKeXdQMUtYMDZBT3ZUS2NRS3V5dFhCM0JDaGZ5SHFYUjdva2gxQU9uOSt1M0NDVVQyODdrNDJoU2VTMVRMOGEzcwpPWHRmU1c3SE1xb2duOFVXUEdQK0FxUkpObERycFB6ckd2ODRRdVlHdVpkdXA4VGNTQlhueG9yeVZub3pQL1RNCnFDSkVYeDZZMFRHQmpTWVFqc2h4T3ZCNnpCZkdOTzFUU3ZQL3UvMXJZRjlML2ozNUtmd3QzNGU4Y1hlUkVoSFoKU2lVck5lZTV3UjZIcmJQVGhydkYrL0ZTNVp1OTR3Mk5DTmVjWms0MFR5RHpxR0pkZ2dUNENmUm9oY2YzRzFyeAptWkFiNU1sa1YreGp5aGFUdHNIN1RUS0RzUi9BUG1RcTZ3VDl2YzVBbFpBenZyUGhYMjRrTmFMaGxRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSkV5ZGRSSzdxOGNzZytvS3dpY3UrbWVodVBld1Y2SUJWYUp5S3RzSWhVcnRjanoKL252bGEza0doUDgzOGxMRGxtZ1U4TDlMck5ReTBRK2hET0xaZWxHTURGRnJEdCtURDFlcDhRaHNPVGJkSytycAo3MDZTN2drQi91RjR2MmVHUzdYTDFTakR1UDJaUDNjVmh6N2FpSGc2MG1qckpXT2s1aWpZNmc5cXFHMVVwb1pyCnhrUkVUTHVBYVJJVHE1VUpLZDBWdGpmeGVWSnk4bkRqL2tYa3BXM0JPcmQ4emNuSlBnNm1yYUU4ZWVqak8vbVMKYXhoUmJodi9YUU9tVFNjcDFTNFd1S3krWnVReE1xaWJVQk8yZFVxMllXRk01V2FCWkE1ZldlQjRUaVZZM1d3cQp2Z3dTTnFEcHRpV1FHUkZYZGZVeXRkcjV0SGVrTkFGWlpBOENKR0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXJTVEg5ZThwbEtpRTM5MjRhbkFQRGtEYlFNMXl3UDFLWDA2QU92VEtjUUt1eXRYCkIzQkNoZnlIcVhSN29raDFBT245K3UzQ0NVVDI4N2s0MmhTZVMxVEw4YTNzT1h0ZlNXN0hNcW9nbjhVV1BHUCsKQXFSSk5sRHJwUHpyR3Y4NFF1WUd1WmR1cDhUY1NCWG54b3J5Vm5velAvVE1xQ0pFWHg2WTBUR0JqU1lRanNoeApPdkI2ekJmR05PMVRTdlAvdS8xcllGOUwvajM1S2Z3dDM0ZThjWGVSRWhIWlNpVXJOZWU1d1I2SHJiUFRocnZGCisvRlM1WnU5NHcyTkNOZWNaazQwVHlEenFHSmRnZ1Q0Q2ZSb2hjZjNHMXJ4bVpBYjVNbGtWK3hqeWhhVHRzSDcKVFRLRHNSL0FQbVFxNndUOXZjNUFsWkF6dnJQaFgyNGtOYUxobFFJREFRQUJBb0lCQUNCOXZrRERYWHdnVXo1TApaMWZjSDYwYlN1SlV0YTdQMElGWTNwZzhjZklKd01oVHdZQjA0ODdIWktCenVmUkM0Y0czOXRBTlFrQTB0VGt5CjJaYnlFWjRRY3JGclQvbXM0NmMyMVFtWEc3aFNKdzE1WlVIMmJ4czV0OWh0ZjBpaWM1c0l4dERUYnBsWm8vQVQKaDlOQWFPM3R0QytFSFgyQkFSOEFoeDJZblBBQURMSml5Yi83bEhNWTFSQ2JrTk5FUkpGZ3RKdUVuVVBKTUZmNgoraTAxNlBQVUl6SXhZOEg3VXE4dUFIQ2d3ZkVzMVZ5MWJBVmFVVjg2RzlRSDdTb1RXRUxiTjZrdXRRTzBMYkVPCnE4cEZIcnhQZXBicUw3SmFmMzFDT2VHaXc4aFE4SXl2VDJoV0kyQjhHWXcweVlVWUdESHY0MUNUOFZkbERQQ0kKRzY5OEgwRUNnWUVBMzl6QzdMemxBZE5tNXBraHF5Ny9Bb25SL3FUZi83U0FZVk5BL0tEQWp3UGoxN2lDNDN1WApKMzV1L1lZU1VGSU84UThwODh3R1hBNzkwekU0YlR2T1VnSTFwWmM5b3QyV0dwOUUxUWRnc3R1SVBvSXp5ZnBRCjBkMnpXRWJoTk9yWDlFQ1BkWm9IOVRpVWtqTEVoaGNZMUpBMFMwNUg0RUY0VUJIWGV2bnIvaEVDZ1lFQTFZSSsKdFNrOFBSZU1XWWJvQk9JdG1qRjlkMTN2cFlhSmxRZDZOUEhVaDRMSmFqM2VkMUJLNHBqY3B2dDVza3hBUHU4QwozZDFEVWFxUkFraFhKcmJlMEl4SldCajF2VlZQUlh2MTkyWHk0YjFweWFZS3lwZXRydjhmdzJONWM4MkVya2poCnBXeW1jYTVFOTVWMWMzTFoxcE0yd3lVNXlHSEZwbEo3RWRlVjkwVUNnWUVBemNrdGN0eU9GQ2lXZmtLa2ZhMTkKQklOWEJDUGlPamhlajVrdHMwMisxWGs0K0hRSDlrQUZpbXVpY2ZIT1lnR2M5S0lBNmJsUzIwdDRyNnllZDJPegozUlZrNVd6clh3MGRVQ202NTYyWmliRmZSRDhDaHBoUnRTcDlGQmhNTEEzNktQRTBMMkpDRUgxTHJqMTNCT0MwCmxhcGVPQitrMlJTMkdiemMvWkpEQzFFQ2dZQVV5UFVwMWJYVGpMTlJFOTBLZktwTDFIMk9YVXF6Sm9IR1RGQU4KVDIyTk02SkFBWDNpeDZKQ3BQYjJHbzBpV21IMnZuWGMrMmxPVGZpSDdGcnZuZVhiRDQwa1VtbTU0TkF5eDNxTwpkeEpKLzVLSTJ1MDZBOElZd3lWb2RBcWl4Mk1mUkdFVEpaeWVmSVNpUlo2RmVxelNRc3FWL00yL1FDVnBwNlhyCmVyMVNzUUtCZ0ErZmtFYzA3VVp0Sjh6NGh4M3RVTmUyall3YnVkTWJ6eXBEYXp2ZkhFMG41YUVEbytDUkNPVUIKcTRMQ0MzZVIzMzV1RC82Q3Y2dnpWbExsQXJrMGVrS09xbUNNT1U4Y216dHZIeWVXZ1dQWkpqK2ZHVGNOZks4TwpydW9yaGNlUXY3SWt6TmRwUHkvQkpGeVJTdDVzOUhlUzhEeGhhcjZiYWdESzM5ekV5cUkrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lSQU5QNUtYRUI3dFZuVGV1akpUdDBGWFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURReE1ERTRNek13TkZvWERUSTJNRFF4TURFNApNek13TkZvd0xURXJNQ2tHQTFVRUF3d2lLaTV3Y205a2RXTjBhVzl1TG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbjQwVE9LVUR2L1VJSkcKc1QvaXZKTVRVNW82Sng5RENTdmlOeW11bzRtSWZtRGFhMGZpSk9jTVl0TE1tekR2UWNCbklpTmJQanlDSlpXVgpTckhNbUdNWUhrVit0UnhxaFlnRTNkeGdFZ21KZ3ZEbTBvYlZnNkF2NjFzY2MySm1PMVlKRUpSQ2V4RG1Fb1A1CnkxTEZxQ1pCZjNKRm53K3NueUJWc01SR0lZOU5tYWlhUFpjUnpWU09MRXZBWlFIblRMdGV0STBCSisvdWhnUUIKRlIxYWQ4U1l4bmRheTRTb2JBRExCWXpmS0t4ZmlCK2huUllVV2l0V0kvancvdHVBdTM2MW9CS0hrVjZsZGhFOAp6LzhlMWZVbUtjTFJzaE5HQkFENlB5YTgvY0RUKzB3T3dJUzNEby9xMmxYWVMrcGhkNEN5TXFIa0h6R1pWdWkyCk5HTnR2TU1DQXdFQUFhT0JrRENCalRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5VwpWZGhvRFZ1cm5EOXRsTXovQ2lZd0xRWURWUjBSQkNZd0pJSWlLaTV3Y205a2RXTjBhVzl1TG1oMVltSnNaUzFuCmNuQmpMbU5wYkdsMWJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBcXU5UmE2RjJDVTJnTERuS3QyUXQKcXBxemEzQ1hXNjc5SEZZdFdNMjBoc3dMNXdOWkhVWlRCUWFmem5qcXdCNzJrLy9QejJmKzBndTF4emh5cE5jTApzVHNsbmpaNUJkK3VTakc1MjRJY2ZubERyL21RK3RUVTRNUnlNZFhpMk9XN0lqVmE1Zkw1NjJFRTBoREhETTlDCkMyN1ZQUzFSRk1nUlJObVl1SXpUMXBWeE5PcjU5bEdzQjJLcFNOWTdIMk96MVRmVmRUaEh0UEtUWEQvQzZBNHIKcUJKeXZzVHlGelZTZmhqUjdNZXZZR1RmMS9QaWc1MWdMUFUyejlvcU9CcDRhYUtTbk9HV0lUbWh1T1laYkR0cApZazBralJUdDExZnFRWVdPTW43ajROVkR0ckFwNGVsNEU3NUV3L2ZXVUVYQXVjbWlNYUhrYzJjWlR4QkZTY0RhCjhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWZqUk00cFFPLzlRZ2theFArSzhreE5UbWpvbkgwTUpLK0kzS2E2amlZaCtZTnByClIrSWs1d3hpMHN5Yk1POUJ3R2NpSTFzK1BJSWxsWlZLc2N5WVl4Z2VSWDYxSEdxRmlBVGQzR0FTQ1ltQzhPYlMKaHRXRG9DL3JXeHh6WW1ZN1Zna1FsRUo3RU9ZU2cvbkxVc1dvSmtGL2NrV2ZENnlmSUZXd3hFWWhqMDJacUpvOQpseEhOVkk0c1M4QmxBZWRNdTE2MGpRRW43KzZHQkFFVkhWcDN4SmpHZDFyTGhLaHNBTXNGak44b3JGK0lINkdkCkZoUmFLMVlqK1BEKzI0QzdmcldnRW9lUlhxVjJFVHpQL3g3VjlTWXB3dEd5RTBZRUFQby9Kcno5d05QN1RBN0EKaExjT2orcmFWZGhMNm1GM2dMSXlvZVFmTVpsVzZMWTBZMjI4d3dJREFRQUJBb0lCQUc1cDJkc2QzWEVocnEwSwpSNlpFZWUxZ1poeUZOa0VMVGVDdUdFNDVENE5TZEtZUVIrMlB5SlVjOTNkc1h4OTRqYk1zQ0VxeG00dlZRWGRFCkFlcjZLK2Q1cEU5aVlTa1QzVi9hYzlhcGUwd0tScUc4aVhYZ1FwdlNsNHVxb3A3alQ0dFBLbmE3MmRFNHAvbVAKVHpZL2dBdm1pMEpQTDViZ3lFRXNYeHpJL3BmVFdiT2Z4V3FmZTJXRUpnamtPUEF0Nytnb3YwRnpUV0xJWHQyNwo5WnQvZDVyLzdKRVI0MGNDTldsZkhTWEpsQjVzbHZHbU9UYjdQYlVwOURuOEdhK2MyUkplWnRuOTRNKzF2dlF2Ckd6c2tFSXRUcmFuOFNjR2kyMXlaK1RkclJ1SXUyeUJJbGZpTUxETGZxTE9obml2UDhTT000QXV2U1M1b2V6NzYKNWVvOWpWRUNnWUVBMi8ydStDZDJZNTZYdlE3VVdyYmhNMkdxMlpLdjlMLzBRUUwrQ05vcFV6RW9CWnY1c1UzbgpZYVM0VW9HR1hIZ29pNTVUMUZna0lHUHVZTzBud0Zra0VuYnpIYk52RzJuMHhJY1g2T2pPKzcvWnhtRE5ZYm5kCnNMN0pFTUNJcUY5NGV1QjhsRzU3cUthNzk4bW1KSEVtc2hTVWUwcWhGMmwzQWVwSU1HQlJaWWNDZ1lFQTJHbWgKTWQzWCsxRWxDQysxaWR6ZUgycDJWOGtadDhrb2ZCa2pxTDl0bVdobTM4WG15b3ZHWkt0eExLMGRFbEFVZWI4dQpVUHBWVGlpcyt1RFZtaXg0OGxyaXpqY0NmbXRqMTlUZkREU3pIMm5DbVNvSEJyYmh5UklnMDRzVnJBdlVGQU1zCk95aTdabGFWbmVDeXVsY1J0YzV6TW1qSHdWVXlPdGFTVFJaZGZlVUNnWUVBcUVSU0lOMk9ZSVJkNiszNzM2Y2kKZWZxcWcrRC9WV1c5bmp4N3NxbXNFa1gzSnRNM0diZE0xQkw2S2FHSTlCRzBjWmFZNkVMQzMwT1FnZkxrQk93cAoreldnbjRjdjVQZ1drSHdFZmRJVS85cXU2RjRDdWsxQWxJQlpxc2Fad0svRnA3Y3RreHN1MnNFdDVVb0lHcmV4CnNXU3NiZUdYZGlEbE5rSE5GYk9XanVFQ2dZQnBWQmZoWm1ETmI3UC9aUUVOUlZOU3BRVk9PcEZxMHR3Q2NsWFoKdHJuSUZYa2tablNxbGhjTVBpa0tIb05zdTA4TDVsSExsZHRZL0JFYzFic0FtNjZOL2xBdkg3VDJCSnlHbXBPbwpwQ21lRzJKY0c0bHA2aTdBSnpPVTRqZTlFZEM1b01XeFVXVE1MVTRLbGlkRzdFT3hZZmJOVFJRVDg3eEx5TTFSCitaV3RSUUtCZ0QyckZ3N3ppeXBkUDJadG5DYnZ2ZENNTnEvNWw1U0JEYzh2d2VzVSs3TnlWQXFBblhVNjdFWVYKWHk4eXZtYTJkZnJPWENHRmJJaEZnemt1ajNudGZFY0RwUmg1d2RoNEZIdk0reUVOekZvUjQwbUU1QXRINXZsNQpIQ1h3eGNGajgyMm5PM0JxSlBHTmhLLzFyM3J5RnJQc091dksxZHhRQVRYbjMxTHcwVW1nCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  loadBalancerIP: 172.16.20.25
  ports:
  - port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 6c7ff9e2fa0f892d9be12b891507ba70a11b0b2a68d730a8191c787c00ab0daa
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.17.2@sha256:81f2d7198366e8dec2903a3a8361e4c68d47d19c68a0d42f0b7b6e3f0523f249
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.17.2@sha256:981250ebdc6e66e190992eaf75cfca169113a8f08d5c3793fe15822176980398
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.17.2@sha256:981250ebdc6e66e190992eaf75cfca169113a8f08d5c3793fe15822176980398
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9880
          name: apiserv-health
          protocol: TCP
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      - args:
        - kvstoremesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=100
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --kvstore-opt=etcd.maxInflight=10
        - --clustermesh-config=/var/lib/cilium/clustermesh
        - --max-connected-clusters=255
        - --health-port=9881
        - --prometheus-serve-addr=:9964
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.17.2@sha256:981250ebdc6e66e190992eaf75cfca169113a8f08d5c3793fe15822176980398
        imagePullPolicy: IfNotPresent
        name: kvstoremesh
        ports:
        - containerPort: 9881
          name: kvmesh-health
          protocol: TCP
        - containerPort: 9964
          name: kvmesh-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: kvmesh-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/clustermesh
          name: kvstoremesh-secrets
          readOnly: true
      hostAliases: null
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.17.2@sha256:981250ebdc6e66e190992eaf75cfca169113a8f08d5c3793fe15822176980398
        imagePullPolicy: IfNotPresent
        name: etcd-init
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir:
          medium: ""
        name: etcd-data-dir
      - name: kvstoremesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-kvstoremesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 986615602e2c2d7145316f186a09276e8b7b4d0e319f93cd2a08d1c13f771563
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.17.2@sha256:42a8db5c256c516cacb5b8937c321b2373ad7a6b0a1e5a5120d5028433d586cc
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.2@sha256:3c4c9932b5d8368619cb922a497ff2ebc8def5f41c18e410bcc84025fcd385b1
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
          name: cilium-netns
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.2@sha256:3c4c9932b5d8368619cb922a497ff2ebc8def5f41c18e410bcc84025fcd385b1
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.17.2@sha256:3c4c9932b5d8368619cb922a497ff2ebc8def5f41c18e410bcc84025fcd385b1
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.2@sha256:3c4c9932b5d8368619cb922a497ff2ebc8def5f41c18e410bcc84025fcd385b1
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.17.2@sha256:3c4c9932b5d8368619cb922a497ff2ebc8def5f41c18e410bcc84025fcd385b1
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        name: cilium-netns
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        command:
        - /usr/bin/cilium-envoy-starter
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium-envoy:v1.31.5-1741765102-efed3defcc70ab5b263a0fc44c93d316b846a211@sha256:377c78c13d2731f3720f931721ee309159e782d882251709cb0fac3b42c03f4b
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/artifacts
          name: envoy-artifacts
          readOnly: true
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - hostPath:
          path: /var/run/cilium/envoy/artifacts
          type: DirectoryOrCreate
        name: envoy-artifacts
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
