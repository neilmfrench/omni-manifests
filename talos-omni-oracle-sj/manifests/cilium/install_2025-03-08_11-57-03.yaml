apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode-annotation: "false"
  bpf-lb-sock: "false"
  bpf-lb-source-range-all-types: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "10"
  cluster-name: dev-sj
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  default-lb-service-ipam: lbipam
  devices: eth0
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-experimental-lb: "false"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-host-legacy-routing: "false"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ingress-controller: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  enable-internal-traffic-policy: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-lb-ipam: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-node-selector-labels: "false"
  enable-non-default-deny-policies: "true"
  enable-policy: default
  enable-policy-secrets-sync: "true"
  enable-runtime-device-detection: "true"
  enable-sctp: "false"
  enable-source-ip-verification: "true"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  envoy-access-log-buffer-size: "4096"
  envoy-base-id: "0"
  envoy-config-retry-interval: 15s
  envoy-keep-cap-netbindservice: "false"
  external-envoy-proxy: "true"
  health-check-icmp-failure-threshold: "3"
  http-retry-count: "3"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-metrics-server-enable-tls: "false"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: shared
  ingress-default-secret-name: neilfren-ch-production-tls
  ingress-default-secret-namespace: networking
  ingress-hostnetwork-enabled: "true"
  ingress-hostnetwork-nodelabelselector: ""
  ingress-hostnetwork-shared-listener-port: "8080"
  ingress-lb-annotation-prefixes: lbipam.cilium.io nodeipam.cilium.io service.beta.kubernetes.io
    service.kubernetes.io cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipam-multi-pool-pre-allocation: null
  iptables-random-fully: "false"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  mtu: "1450"
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  policy-secrets-namespace: cilium-secrets
  policy-secrets-only-from-secrets-namespace: "true"
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-concurrent-retries: "128"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {"admin":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}},"applicationLogConfig":{"logFormat":{"textFormat":"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"}},"bootstrapExtensions":[{"name":"envoy.bootstrap.internal_listener","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"}}],"dynamicResources":{"cdsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"},"ldsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"}},"node":{"cluster":"ingress-cluster","id":"host~127.0.0.1~no-id~localdomain"},"overloadManager":{"resourceMonitors":[{"name":"envoy.resource_monitors.global_downstream_max_connections","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig","max_active_downstream_connections":"50000"}}]},"staticResources":{"clusters":[{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"xds-grpc-cilium","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/xds.sock"}}}}]}]},"name":"xds-grpc-cilium","type":"STATIC","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","explicitHttpConfig":{"http2ProtocolOptions":{}}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"/envoy-admin","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}}}]}]},"name":"/envoy-admin","type":"STATIC"}],"listeners":[{"address":{"socketAddress":{"address":"0.0.0.0","portValue":9964}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtualHosts":[{"domains":["*"],"name":"prometheus_metrics_route","routes":[{"match":{"prefix":"/metrics"},"name":"prometheus_metrics_route","route":{"cluster":"/envoy-admin","prefixRewrite":"/stats/prometheus"}}]}]},"statPrefix":"envoy-prometheus-metrics-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-prometheus-metrics-listener"},{"address":{"socketAddress":{"address":"127.0.0.1","portValue":9878}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtual_hosts":[{"domains":["*"],"name":"health","routes":[{"match":{"prefix":"/healthz"},"name":"health","route":{"cluster":"/envoy-admin","prefixRewrite":"/ready"}}]}]},"statPrefix":"envoy-health-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-health-listener"}]}}
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-staging-rpi
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: dev-sj\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        location /api {\n            proxy_http_version
    1.1;\n            proxy_pass_request_headers on;\n            proxy_pass http://127.0.0.1:8090;\n
    \       }\n        location / {\n            # double `/index.html` is required
    here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n
    \       # Liveness probe\n        location /healthz {\n            access_log
    off;\n            add_header Content-Type text/plain;\n            return 200
    'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  staging-rpi: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2xvY2FsLWV0Y2QtY2xpZW50LmtleQpjZXJ0LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9sb2NhbC1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  staging-rpi: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1ycGkubWVzaC5uZWlsZnJlbi5jaDoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-kvstoremesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRU0lrQlBOcFZQMWJhQUpnU282bzBkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TXpBNE1UazFOekEyV2hjTk1qZ3dNekEzTVRrMQpOekEyV2pBWE1SVXdFd1lEVlFRREV3eGhaRzFwYmkxa1pYWXRjMm93Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUN4OVQxM2ZsMEZRTHdkSFQ0aXBGaG1WQXFWQVNhMkRoQTBCbzJ0UXVtRnY1NXMKcXRIa1ZydjJTbDRjR0pranRoWURUZ2NzcHIxY3d0V1ZoOUpqNWRIUzV1aExFQ1BtZmV3ODk3b1ZmS3lUN2FWTAppQ2YxYklyaXpYMWVzM0N3SkM2WnptbHZxcFhzaTJGcFhzR1NDcDVHcDFsNWRKdU5MUEhwNnFmWmtWUmprK0I1CjN5KzQwZU1mTGpYUS9pQk01TFNlN29FNVFpbndBaTdXdjlMRHNmRllidklaWDlsMm9rbU9jY1ZOemJJQmZXSUgKOGo5SUREek1tVC9yazA4QTAzZkIwa1NsZkZ6c1JRTmVFQmliRTJWaWIvV0tIUWN1aS9HTHZXdGUyZU5QVDZJcwpSMmllUEZxeUdPeElCcTJjMTdvdXYxT1dTNmlhYzcvUWQvSFl4clJMQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCCi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQybFdOMlhKWlYyR2dOVzZ1Y1AyMlV6UDhLSmpBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFCcVl6MkdadXNodXpCWC9mNkVpc1ZCaVlTaDRGWlM4ZEM3dnFHUFBoV0tZemxkdmtrajYrCjZOMGt6ODM4VldoWVcyb25hN2FRaGh3M25CNWJxZGlqK3BnRUdRdUFhRjlCMGZ5b0NUdmVXSTlDR3lheEswYlYKUUtWYVppNGlDY29mNXpDcWVpL0xEQnVPZElyL1ZHalpOSWdHemdycG5hZ1ZIQ0c5cXI1MmVMV1FRZDE2SE55dApOSUlJVkdpbkpGTWgwdlo4U292K2hxbUNUWFV5UyswV2tuT0dONUd4Mmh5bGZKQjM2SSs4Q3hHQ3FadlVWdmVuClBnT1NQNEUvRnNEMUVOT3FtQnRxV3dPRUJCaTZvT0RaT0oyckRWRWM1NlBxS051SFkrSGZmUldJMnl6NmRwa0kKVEx3SENmY2xPSkpqODJmNjhKcVI0VHBSRHFscSs4b2NTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2ZVOWQzNWRCVUM4SFIwK0lxUllabFFLbFFFbXRnNFFOQWFOclVMcGhiK2ViS3JSCjVGYTc5a3BlSEJpWkk3WVdBMDRITEthOVhNTFZsWWZTWStYUjB1Ym9TeEFqNW4zc1BQZTZGWHlzaysybFM0Z24KOVd5SzRzMTlYck53c0NRdW1jNXBiNnFWN0l0aGFWN0JrZ3FlUnFkWmVYU2JqU3p4NmVxbjJaRlVZNVBnZWQ4dgp1TkhqSHk0MTBQNGdUT1MwbnU2Qk9VSXA4QUl1MXIvU3c3SHhXRzd5R1YvWmRxSkpqbkhGVGMyeUFYMWlCL0kvClNBdzh6SmsvNjVOUEFOTjN3ZEpFcFh4YzdFVURYaEFZbXhObFltLzFpaDBITG92eGk3MXJYdG5qVDAraUxFZG8Kbmp4YXNoanNTQWF0bk5lNkxyOVRsa3VvbW5PLzBIZngyTWEwU3dJREFRQUJBb0lCQUZVbUlOa1NMM1FaKzJoNgoyNFk3Mk1odG9mcVY2RzNuNEx6ai9kcFBUK2xkUEhLR2NaT3VKSlcrRTdXaDEzU001WStEUUUrUElNQkh3V2FnCjdIdzhOTitTK01jaDIrdW5pT2ZMS05DckxQQkRIM282bGRRS3NaRy8vU0xZL1N4cXc1bDRlRjZqNHNTaUZHUVUKb000K0ltbHdIWkhOeDdnUEwxbGJuQ0N3Tnc3Rm9HNnpuRitTa3hxT2dmNTJDZVdQZVlZL1N0VnlXNHBHY2paeQpJWGk1RVNYclhBUVg2bzV3bG91Qk1FR0piN2VMeUpld0xSam1BbGRSVytYazU2My9RbTg3WkpHY29SSUFRUElrCjhpcWxnblA4dThDdHExcTdoL0I5USsyenZKQy9nTjNFc01SWjRpaGN1Zk1DZEdIVi96UkpJWExVM2xpbC9MWUoKTjdWc1lmRUNnWUVBeWpXY25VdVR0SDYzK0VMRkR0ejUvK2c3STFOUkpUcmY0OEg2NDhRS0dzNFMrMjlOMmRNRQpMT2tVNHcrWWhKNEhKRlU4KzUyYUMrcE9NWExNRk1od0ZvdFZNUHEzSDZaRXFZMTNQQkcwVXF0MEZyYllpZDg1CmRjRTRKMktZZ0RUMWVDSnVpQStNNmQrMnhoTWRwMHB5eUFpcWN2QnQyUGxKZnBGaE1TUEhydmNDZ1lFQTRVd2MKL2xOME5GMW9YN1IyT25CaERqMXlDQWFGaHFNZjhDbDBHTEU2MmtGT04xdlFGREZRdGc4ZVlqN0lIWDVvRFJ5TgpyZ3dvVk1zMVhSUXRjUVpKbkg2RytSUGNlL2RYTks3RWE3L0MyN1lYcmFyeGNuczhjOEg4M0pNd3NycUNRR1dZCmJZbVY5eTNzeEkyNm5FRnRSK0h0Y3RobHoyTjZEWTJiMTBRNGpFMENnWUJ3SFhPZG54YmhYOVUvR0Q1TWRHZEUKNVkxTWs5aU5ET3l3U3BDQ0V1TUxZN0VRcWZEL1VrbWhZUWFNc3N2ODArWGYxa2IrdDY1KzVzVytFd2xtaUkvbApZQkczRzN2SFY1Z0Fib2hxek9JdmFCTHd1U2Fzb3hFbjRoN3hiM0Jndlh4UXhMNkdRQ0VBVjJMdXhoQ04vZkJRClNzVysvdUhaQ0xjZ0x4azFkc0l6bHdLQmdRQzh4bXJReXhwbU9oSVhodjA5Y0NaU3FUZWY4OTd6OWtEdm1ieFcKYUVJWTJIbHlOekw5aUdqSmM1ZVEyR3dURW5TYTc5N2pBL3JUT2NYSDdQMDZZL3RQN2xDbjZYVm9SZEpES1dFWgpxMzdaWEJVeEJqZnpKY0Y4ZVFHbnpJa1VhT1Iwa3V3S2RDczlCclVKNkh1QksrMG1PdThidUtodUFqc2xtZzhICmEzazZUUUtCZ0doTXUydWNCRHE0R01ZbWZXMEN2V0ZiekM3VUZ1ZWZKSjYrRjF6N2VsSEh0YTdTM2N0V2FpNVQKZkszMVorbG9sN3Q0c21hZHp5eXNrMVlaSE5meTdBaFN4SkI5SnI3bVZVQWJCVStpaWNBS24zWDBUVmJWRDN0eQo1d2E4OHNlU2JDSHYyOGwrUjIyM0Y3V1VyS0N6N0IwaVVlT0s3eUVocFJucll3cGJ5VHJsCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRV3lGTEtZbStSTmRhc3FVazhtKzZOVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TXpBNE1UazFOekEyV2hjTk1qZ3dNekEzTVRrMQpOekEyV2pBWE1SVXdFd1lEVlFRREV3eHNiMk5oYkMxa1pYWXRjMm93Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUROaVpBNXhxMlZBazEyUld4Y0JObFR6bmcwN0lEQ2JIczhQcTRCNjhYeVE5eFYKUmQ4ZmFsUWdBMTFkY3lyblR4QlJGUnRKd2xhM3dCVFEwSG1TSHVLY3IzWENxakJkeis0SzFza3VaQmRZSllaeApxN3FpRitWUngzeVFHd2VrZTRUdHkzaVJVZGtkT3ljNjJrc2lzQVJaVlluQy9GeUs4VlRzK1dPRUZJckJvUW51CkpZVzhKekR5NEg1Uy94UXFvVXhEV3BCbHdlOFNEdDVyeE5saUdNclNTTk85MHZUamxWK0pWSzBVdU0xMDMwbEkKU1MxTnRCS3pDZkwxWGtXaENGS1Z2aGRtNjNtd0RqcDgrZWl4T3F0YTlYWHkweHQ2cmpsT3RuUUx4NExpRWE0YwpTQzlnMStNdzlkZStrVUFKTGNpL1dwSk1OTmk2eGNaRStCSzE1TEZ0QWdNQkFBR2pZREJlTUE0R0ExVWREd0VCCi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQybFdOMlhKWlYyR2dOVzZ1Y1AyMlV6UDhLSmpBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFLL1pRc2EwT1pJQ01EUmlRVERTSndxaVdqQzlzQS9rNUg1RXQ0Z1dVY3UwbjdQcU4xQ2wwClVUb05iTUtzRkpSY2U5WW1XYThYbFRQTmhrMThNNnFqV21kdUhYLzRwM2VjNUFhOHNvcmtNei9MaWREM3JIY24KOEFMN0hhM2tSZGx2MTI2VW1lUTg2a3NXOThvbWlVaGNQZW02R2s5dGpPdlplWktSMUQ0THZWYlhWMHVxcmdZMgorendRdnQ0Y0Y3Rkk2R3gxaVdkdE9paGtQL1V1SHVhdkxCVjlCT0hINmIvYWIyZ3ROeTk1SkJWSHp0OVYzd29NClFKQWVVSFV5QWhWTlg1S0ZRdmcvK293UHQ1MmpQRDlya1JZcUE5VnJuVlR3YnAzQjdHbU9qcWgyeXFOd0lnTUsKUldDdUdoTUxHZVNrdkMzTzJid1NIaHlPRldaNVpIcFlBUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelltUU9jYXRsUUpOZGtWc1hBVFpVODU0Tk95QXdteDdQRDZ1QWV2RjhrUGNWVVhmCkgycFVJQU5kWFhNcTUwOFFVUlViU2NKV3Q4QVUwTkI1a2g3aW5LOTF3cW93WGMvdUN0YkpMbVFYV0NXR2NhdTYKb2hmbFVjZDhrQnNIcEh1RTdjdDRrVkhaSFRzbk90cExJckFFV1ZXSnd2eGNpdkZVN1BsamhCU0t3YUVKN2lXRgp2Q2N3OHVCK1V2OFVLcUZNUTFxUVpjSHZFZzdlYThUWlloakswa2pUdmRMMDQ1VmZpVlN0RkxqTmROOUpTRWt0ClRiUVNzd255OVY1Rm9RaFNsYjRYWnV0NXNBNDZmUG5vc1Rxcld2VjE4dE1iZXE0NVRyWjBDOGVDNGhHdUhFZ3YKWU5mak1QWFh2cEZBQ1MzSXYxcVNURFRZdXNYR1JQZ1N0ZVN4YlFJREFRQUJBb0lCQUZzVFNjVlFORHFDK3JBZApzeFpUVDduREU2RGY2MjQ3ZzUvK1pqeVRyUExjL3hVS0VRUnFxVHhHUVdqWFQzdVBuVHRRanZid0ZsejEwRU4zCkhXZVNKL2dtQjVocXNXUGdieXArWWtjY012dnNKTmJac2FtQnpTdWZxYUp4VjhHYXVoeGt2TmduM0gwSGFTcTYKNy9BKzdxNW5LTlF0M3hQeVBCK0Zvb00wVndmVStCRkdRTFlYUVQ1QTJ6OE4vL0ZuTWNwMWYyNFJORVcrL0VIdgpjb2poWW1Yb2xwb2xLcUtRNUZvMTRGVTBPVTdhTUwvNHBrdHF5VytHYm4zRFphSmc5Z0JOMXcwY1pNL2JJdXZCCjZMdUZaTnJHQWVYNzZVdEg2dy83ZUMvT0xVUkpaeVlFUExqRXZhU05yM0lJM05rL2x5Zm5nVHhQaFJaYkl1V3MKbFdUdXdFRUNnWUVBK0hyb0VtaVhLdmlCdzJRc1laZ0RoamlxTVluRk1ydXBjNjJBV1lqTzhoT1BvZkFkNUNwNQpuUThmY3Bub3BmRE9Cc2Rnc2NZMFdJdWx4cHhNVWV5R0NHS0o5RUxFWEZhSUpERzZvclRWUXFGaHRGRVVzM2F6CnNGbzZaaXdUaCtISTE1MTBWeDRNR0dNeENiQXlCcVlnRkRLNDI0bVBlNWVlME5iWFNVY3loc01DZ1lFQTA4SDEKZjhWUk1WOHpORHZrNXNQcmRsWHhsb3FZL3JXUzlSb2dmamxPaXZiRFlYUUo3dkhaUkFCazgwdGhsalhsaWV5NQo0Y0NkQmFvQWVIbnEyaC90c1pPQk9aeTNxN0x5cXkyNXpiSVV1aHVDUzhDQzVCTEhJMVRuTFlLT1dNYUpubDBvCmN0L295cFN2bk5WUTJPUnN4R3ZycnRQODhRc3NHSXN3TkZVaFJBOENnWUF6QVovVDc0NWdic1RNWkNyTUdkVlgKWHhob3ROdzdEdFM0L3p1aXBYZTlyNUJEY0xQaUcybjllSlkvQXlNRHRVdkZqblhsNkVia2lqNE1hQmN1bGZ2cAppcmpBNEZmSWtLYS9yMG1kanJ0Y1F4NTRVbENLaW1wV1lCOHV6QXR5VUVIWEtPWXgzK1FodVhMZWgwR3RwYnBlCkN3OXhXV3FQdDA4TmxaeDUyVmlnMndLQmdHTzVwSFJYNkxUbnNLV1l6MlFlUUhXcVkrd1J1WnU2eDByRzB5YWUKdG02Ylo4Z3RiY0FxQmJnUXQzb2N0Z2lYdVZJTE9qOG5Cc3YwRStTcEJnRlRxQTFJK2tLM200Z3c3amZQZ1FGdQpMSFM1SDlPdEJmZURJR1Z6UnF3WUlCR083cUMySHFaNjdKYjdEdms5UEtYb2JaRFRnbHNEV3N2cUJ3cElBcHVpCnU5ZmhBb0dCQU5HTVFrQ25YV2I3WU1ZQk5HUUt5NWNQNm9uSERxUVV0K3A0V3RMTVdZdVk4UEE3QkdUTEJIa1QKZ2JEQVJKVmZkNnlBamZxVzYrK2grVk9VeERkVUEyaE94TFJDcTlHUUFzblluNXlwOUVLZ3cwcWllZEV3bXk3ZQpFVDZIb0tVOEdVeTMyOThoK0hMaXdBTUs3S1UveTB6QTVralVhRC9IU0tQay9TdVE5QUh3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-local-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQU9ZRSt6dm80OUQveDdvMmpOeGlMS0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd09ERTVOVGN3TmxvWERUSTRNRE13TnpFNQpOVGN3Tmxvd0dERVdNQlFHQTFVRUF4TU5jbVZ0YjNSbExXUmxkaTF6YWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtXOE1UT01KOGIrQmpOM3doWkx4NUVCems5cEFJUGpUUEpydkd3OXBiQlUKTm1LMGdWb2V3Q1Jabm1pRWpEQmNKRGpNZzFONnROeFZ1RHB2dHZnVExjZ0ZMblhSMjV0aXVOM3lrdTNnZENoYQpwT2p0VUV4TWg0d1F0cGNtWHNva0hCUlBZQUpBUFRKbC9OaExWVUtheUNRYzlnOWdqaytQbjU1TUJUZ2tId1gxCjJCY0l6eXBIQU9jRGgzVmZiUEFBNk9MSjVHM2JTUGNlYzVmdElYMWpMTW9BUzJ1cVBIYXBlUkpzUkEzY2Y0WGYKdDN3Y0E2cDB2d3Z1WUFrNm0xU2QzdUFSNWVtZlRaK3RxS3QwWEQvcklTc0NDSTJhdnZ4MUZQNTdGNmxwNTNnKwp0QUg4ZEpOSkxQanlodC9qcUQvR1hFNHdiR3ROQTltYTNyRzZINWFWWnQwQ0F3RUFBYU5nTUY0d0RnWURWUjBQCkFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUIKQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRlBhVlkzWmNsbFhZYUExYnE1dy9iWlRNL3dvbU1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJoT0Y5NHRqNDI5d2VTckE3Nys3N1czWTJmZi96N05SajY4Mkh0azYvZmZHeW1mRnBiCmNxMnl3UUhCcEdEaHUrTmJhckUwNExpVG0zcTRxN3RkLzNQZHlPOEJwOFB4UkZxWXZrc1NyQktRRUZ6RG9KY1EKaGNCM2wxQ2dodXZrdDVTRUtRNnM5OGkvZ3pES1ZnRW5zNmw2Nlg2VzNPb2FaWWpPdTVYK2F2Qk52RGxady9jVAo4TUdUOTFNYWJENUxjdzZ0VStsL0RJNUN2ZURxOENmcSs3LzhySXg3d0ZaREVZNHIvTkdGcC82K1F2ZDNjK3YvCnlaVnhKQ0t5amJqeklxK3NIM1RHQ0MxWEJoU21yenJjVkVtUHZjc1VJaE9uZzMwOFlGSG04ZXVXMURCN2pCamoKTE80K0pVb21JWDM3L0cyRk51ZDY3Rm5zNFlYT1RhcUF5K1hZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGJ3eE00d254djRHTTNmQ0ZrdkhrUUhPVDJrQWcrTk04bXU4YkQybHNGUTJZclNCCldoN0FKRm1lYUlTTU1Gd2tPTXlEVTNxMDNGVzRPbSsyK0JNdHlBVXVkZEhibTJLNDNmS1M3ZUIwS0ZxazZPMVEKVEV5SGpCQzJseVpleWlRY0ZFOWdBa0E5TW1YODJFdFZRcHJJSkJ6MkQyQ09UNCtmbmt3Rk9DUWZCZlhZRndqUApLa2NBNXdPSGRWOXM4QURvNHNua2JkdEk5eDV6bCswaGZXTXN5Z0JMYTZvOGRxbDVFbXhFRGR4L2hkKzNmQndECnFuUy9DKzVnQ1RxYlZKM2U0QkhsNlo5Tm42Mm9xM1JjUCtzaEt3SUlqWnErL0hVVS9uc1hxV25uZUQ2MEFmeDAKazBrcytQS0czK09vUDhaY1RqQnNhMDBEMlpyZXNib2ZscFZtM1FJREFRQUJBb0lCQUdLSEU3VHlZSDlqYXVwVQpDdFZZYmFiZUxQbDJrZkRXUTF0bkF4aFNPZHN1NVRvZTF6dHRSb3NWb0IvQWxOcjNIQzJNSDVLVVEwc3R4cDB1CjV0WnFDSEI5N0JYdEVhSTV1Vzl4RXpwSmtxU2U1cVQyMkNMVDZFMHpibWxEVFZ6Y3hMaXFTNGhyQ2phWS9RelYKRkRYSmNLeFBiMVRLOFMrSlVibzR0VzJmdzdXMWNiMDFmU0MvK3laY01OMmFUWnY5clpEUm1XM0gzS1BZaXU1aQpQS29leFpBNVZzczc3TWQ1K09HQkc3MnZNRjhxNndDM1d1emdIQ0hYSGhLWFpTdFNjbWFIeWJId1VaZHpLRHhuCnQ1SmhSMHpUM2dGazR1UG10UVViWDRNZTdLWkx6VXRjZTFpVzdPQ3ZiRUZFb3R0VmEwZXZNY3A4bWJlY0hDS2YKYy9Jc2JyMENnWUVBenB6SjQybUVXeVNzU1pvTVdiNzZaeWU1Smo1cElIQ09GRVJmL3FCaFNram5ORStldW42aAp4TUpYNTBRUWQraEVGUU8wSWFlaE1ZYTJwcEIwL1FoQ0RMSW02OVRvQ1BwSFRVdVZqZE0rWlBFS3Q1UEl0b3Q4Ck9NZzdjQjFxUEFYaHg5N3M5bHZ1TDhrdFB4dnhXaHBsR20yT0kxb0h2Z1Nlb2hpLzFTY3RreE1DZ1lFQXpWb0EKZ3F4V2hXcUNJOXVoMlhDZS9zc3M5S3htQlA1TTFYbGdxTEx5RSt3ZkxMSnZ0ZHJXbGhKSisrNXNJV0lzbnp1Lwo0dUI1Zzh2T0JjeHlSd3FsM0hadU95MnFKa3cwWURuOW4zbjJMWUs5NDhVQmpvbDRZTFgwSStaeW5sdERtN2xYCkFPdHFsMTY1QWJldUJhSGNDR3crbGVGM1pIMUdSdGZQSm9yRGJFOENnWUI0SnZYQktqdXVSVVZzQ0FubXB3azMKdEFJWUczTkhTaTFWMisxM1JnMU9CZGR1dEY2NlZhbjlvb2M4Rm5qOVFqVlZnekhkNEgzOUx6cEk0dmtsclFlOApHbDVJQnlocEVDTW04QzJvckpBOFkzQzRFVmxIenhZT2IyTWhiL20zcmpQKzU4VWwvNUFrZWZtMkdhbmhuRGZ2CmhvYUNTSGo0Si9lWWpJd0NpU1lYd1FLQmdGSW8rVjFPOElzT3N5VC9vZ0RxYzJMRURhZVRObm8yK0t6TWxHVEsKdTlwR3RhNWZjaHlUZ3htbUZaM0xwYzJ4aHVMcXQvcGhENTB3dEt4VFFVRzFPK2s2SlI1ZVJkNXV6T0hYTWVkVgpsNjVieWZmUWdhL3l4b3dESUx3Z1hxbUhJRVMwNGQrSFVTMWhBNnB4UUJvV3lYOUJOOFVsNFd2K1IxamV6WTNCCkpURTNBb0dBRVJBL21aMVhPTDRFcFZJRzd3ZzFrMkdJa0MzV0wwSU9sL0lGTGxxN1Mxcy82amFybTNUdDVoYzEKOFRNRmh3U01yUVFkNTVxdXo5ZHVoL0tRZ2gwdFdnK2VQa25OUHpCVUhHQ2V2U0F1TjcyTHBUZTRTM0E1RzBmUApodkJuZ0VjdXhHRjBkTkx3bEphcFlPeUFnVWpWZHNITG5Hc2EyZHVnTldoTkNkWWl3aWs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lRTWNFZ2hBcnRITmRhTGt6ckNrdnI5VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TXpBNE1UazFOekExV2hjTk1qZ3dNekEzTVRrMQpOekExV2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd0NWQytPQ2NWUEdSV2UrSEIxbWcKUVMwTElUY1ZKalVPRGVKUjRlaGJoeTNaaWVNdGk3eDF2VkcrT3NoS1oyWFJRdkJaamQvVjZEV1Vmd1dpaTFSNwpmNmJHc1dwanA1dU5HS05Kd2o4WG1zUFZzVGFmUmRjN3owdW93dG5CU1BuQmxTSjlESEZXMkVZUFQrbVFvam1xCjVIM21XcjhzcmUzSTBIYVFqcDFnbGxoR0RCU05XQjZ0Q1R4bEtOMVhlMjdJTm14dlhpWEZ2T0lXdEZrZ3AwUkQKRTRuRXltNExPMzRlbUc5VVhpdTRTeTNXaXlJUGNEKzVYMmN4Qi91UGQ0TFpsZ0xsM285bFlwdUY4UUZoZHdBSgpGYXoyVlE0STBPR09PTU55RUN5SjdvZkEzZ29jVlJHYU8zam1Wa2Jmc3BoU2pHenhueGVFRUo2YmVGbnRqcXlJCnVRSURBUUFCbzRIMU1JSHlNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUMmxXTjJYSlpWMkdnTgpXNnVjUDIyVXpQOEtKakNCa1FZRFZSMFJCSUdKTUlHR2doOWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1ClkybHNhWFZ0TG1sdmdoQXFMbTFsYzJndVkybHNhWFZ0TG1sdmdpVmpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjIKWlhJdWEzVmlaUzF6ZVhOMFpXMHVjM1pqZ2hJcUxtMWxjMmd1Ym1WcGJHWnlaVzR1WTJpSEJIOEFBQUdIRUFBQQpBQUFBQUFBQUFBQUFBQUFBQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBdmJnd3REb21hSjBBL0tOaVBCCjlZdmtoWDRxcDd0TGNvMXJkUlI2RnYvWWJGZDFrdGVBRXRGRHp6L0xsZXljOUkyeEd1UEZEa2lCNDM4bTBOMnkKdjIvRGF1S2JHTG83c0x2aHNlbEplR2M4cFRZMGsvczkrSXFkRlRnWXdwZU1nUWNPTEU4YUc1d3hrRVl1RTV2WQpuS3VrWEN6NFBUZWlVSHFtQ0Y5cm5BSk1VYWtJWm95VERLbTFlYlI0YjdUTE9QNjYzODRHZDNWMlRPZWNvZHBvCnk4VmdUK3hBaDFTcW96bThFUFBlYSs3aWNKREM2N1RpNUFlN3BHK1RRQkNRRG1McUF6WmFRK2JpakJtVTM4UjcKREsxZzFZT1ZLYlZhbG9nd1I4Smd3U1AzNkJIa2NtWTZObXUrcktZdUVmU20xOTlRemZ0dXhKS2NPNDZvaENYbAowQzA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd0NWQytPQ2NWUEdSV2UrSEIxbWdRUzBMSVRjVkpqVU9EZUpSNGVoYmh5M1ppZU10Cmk3eDF2VkcrT3NoS1oyWFJRdkJaamQvVjZEV1Vmd1dpaTFSN2Y2YkdzV3BqcDV1TkdLTkp3ajhYbXNQVnNUYWYKUmRjN3owdW93dG5CU1BuQmxTSjlESEZXMkVZUFQrbVFvam1xNUgzbVdyOHNyZTNJMEhhUWpwMWdsbGhHREJTTgpXQjZ0Q1R4bEtOMVhlMjdJTm14dlhpWEZ2T0lXdEZrZ3AwUkRFNG5FeW00TE8zNGVtRzlVWGl1NFN5M1dpeUlQCmNEKzVYMmN4Qi91UGQ0TFpsZ0xsM285bFlwdUY4UUZoZHdBSkZhejJWUTRJME9HT09NTnlFQ3lKN29mQTNnb2MKVlJHYU8zam1Wa2Jmc3BoU2pHenhueGVFRUo2YmVGbnRqcXlJdVFJREFRQUJBb0lCQVFDdVIxM1doVXZtMC9FRgpoUGVSbUI1OTMxQXdBVmtpZlk3UTB3MTMvUncvb1R1bUVMTjRBaWs4M1k3UW5HaTRIaWJQTTFmWEVrWmZ4M0Y0ClFQRXN0U1VMSkljbDFweXJJckM0dnlxZ2tEOWx0ZWoyUXRmMkxnSG14UFkrUGVwTnVaTjNKSUFOc0NPWUtQdXMKZk9vZDZuWnhweXd2OVNTZVlZWDZad0E1Q3MvWHJJZ2crU0VKR3hoZE5NZ1RDQVVQd0FtOE5ZejRkUUpGaHQ5RQpqTFhCZUcvS0tYd2lJU2ZHOHZMclpUZlBlODZDcW8wSDhvKzJBdEsyNnJNMTdHbGVpbGVXQWhGQy9sWnlCN1FkCnR5WVc0YUx1VDNVTGlPT0owQWZycVNudGZ1ckFDVHB2WS9hbkhhK2x1Q0p3V05menlzVWJJb1puY3RlUkdKeXUKTWhFQ2piQWRBb0dCQU04MTRlekJ3WDd2OUhJWldQc2pHVGt0L0pybEVGN1hMcVJ4L0JxMTBDY296bkphb1h4QwpleWk3ZWFqQWRkVTBTZTlhNEFNazRLS2NKTDlHVWMzdkJiRXczSTNQTzY3d0xUSlFDa0JhcDBGOFJKV1Q1SGdxCkNSZkVMTEowQ25CekJqd3FpMFcyVGNnU1Rzb200aFBKMzhqeHpDVU1mamZwbkpkZFU4ZnJDaW0vQW9HQkFPMWoKVGM1M0RkbUFnc0JPdmhVU0wrZFRwclJaaEJhV3c0bHVkWStwREtRSHZGNEUyZEd0aXdaeE5naEdYRVVrSDlLZwpYYmNrRkdEZVNtTzdPd2ovYytCZGJOYWNSSjdNTUgvMGpVby9hSXdRZkI0NjFHak8xSS9pR1JDb2ZEN0dIbUd5CnlIeHptaTA3VVdVSHJUYyt4Tk1uUVRCeG81VG92TCszZ3V3d3JydUhBb0dBSmIzWnZjYjQySWNhVGlJQnpCUnoKaHEreW4vL3pBR05QVXBLVWFjVU4rZVA3M21aVm5ZMTZZMHZxZCtzK1N5d3YvMUhkRlpXRStQbFoxQ0VaeTFtcQovc0E0bS9mUUZpZ1hBMkFDemYvMUVQOXllcEFxZ0J5ZjlWMDlDdkFKNnJ0NHVrTEJoVndVUk1uWTRnYzlESCtyCnJDMG1rdVQ0cEhSL21pNWNrVUJsWkg4Q2dZRUFuZkU0VDJwKzJIdmNncjdoVVh1c1M2a29mVTRoeURXL0c2MVcKb3FMRE9rKzdVSUxCdWZSUlQ1UDdjejM5SGpPT3lNRFNHWXZ6MHcrVFJ3L0hrNUVETkFCMDdjVkRFclNnZ0VIaAp6OGlvY3FoMUxGZlFBM3U1aVpIUlEzZ1dVbDNXMFFIMnluYlAyZEJoczJxTUlQbXVVeDhIREloUFlrQUhkVGRQCjhIM2pnL2tDZ1lBOGJleDRxdlc0blBtcVVMRXNQVTVnYkVSbktHVzZvcW9ZYWhxaU8vWkF4eVVkckxIYUxTVE4KN2FVU1lKQkFHc2pKN3NSaUN4OUZUditoUHdkTXprZGdkNStWSXE5WFhXYi9jaFFlcklVc3pRdUFlNlFxQ3hkbgpRa05aSkltaGx2UGFDMU5hMkE3QXF1N1RQeE1YWCtlWUM0MDEyKzFabnM0eFFXUkhxbjNkaGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9jaEdPZkdFUVJySFVTcXFkdGZ2d293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd09ERTVOVGN3TlZvWERUSTJNRE13T0RFNQpOVGN3TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdEdUNIYmJYOUNrOXZRVEZsZmw3NjNiNm53MEwKQjU3c2w0eFFCdGhTS2MyMU1zOWJhK0srRG1KVzczVU1taDZ3YW84Z1A3blU3bHJaMWtVdzN4RHdxS0ZwYVl6dgo1QzNqNEZtSzlTRnpaMGhvMXdFL1poeW9WeEJpSDBOM0YzblZQL3dRZVUrRTZxaXEycEhVcXNaVG1FWGNOVktCCmdMdTQ4REk3dnRvSlRuWkloTTdrVkZhQWhPNk10c1d0a2FkTldLWUt5MlpySk0wOURDTTFIQTFOWXkrdVZmUmIKc2RtSUFzU09oU05OclNTR3dQTEFDQnplVW5rZktyd3ZWOFJoT3FhaDhhcXVwOTBEcWw1Y0lDL3QwOE9PWmUwcApTNFlkVmRaYmx4UVozVXdmVWExQkFUU2VNd01Qbmt3VFc0TUlUcFRSdTF4Y3hBQUlldDZYT1BXVFZRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRnBRMmxHZHRUYmp0c0w0V1N4WEMrYmg1V2t0OHdoNXN3QzFDb3YxZE93ZjZJQ2wKSVgrRGhPNDhVNk9tNitDY2Q3bEovak83Vm1Ga3hDWE5PeTBWRXJrUlI4MW4zOXAvRVozam9VTkFzOURFb3Z2SAp6MGVueERkdzUrYWlmemVnSFN3blBLSjh2V3FtZllBTFV1UGZNSDBjbWE4RlZQeXo0bTJaZFkxeVN5aGxKU2RUCnZqeEE4bUxkcnRsYXBaT0JkWTN6YnJ0bFVwTkJ1QnpMSlFLb0dKdVFTUUJ6d3hqVk1sd1pTb013aEJYQlF2VncKc2RSQlVEMmhXQVJYZGltR3B1QjA5QmFKdmU0UWtncHRacENZK3lPZXd6WDI1cGFXVnFqTlIrRkJwZjlHL2ZsSQpJc211UU93SVdRaWRuMUNEb21zSnNkR210WGdja3d6bjBCVTZmSjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd0R1Q0hiYlg5Q2s5dlFURmxmbDc2M2I2bncwTEI1N3NsNHhRQnRoU0tjMjFNczliCmErSytEbUpXNzNVTW1oNndhbzhnUDduVTdscloxa1V3M3hEd3FLRnBhWXp2NUMzajRGbUs5U0Z6WjBobzF3RS8KWmh5b1Z4QmlIME4zRjNuVlAvd1FlVStFNnFpcTJwSFVxc1pUbUVYY05WS0JnTHU0OERJN3Z0b0pUblpJaE03awpWRmFBaE82TXRzV3RrYWROV0tZS3kyWnJKTTA5RENNMUhBMU5ZeSt1VmZSYnNkbUlBc1NPaFNOTnJTU0d3UExBCkNCemVVbmtmS3J3dlY4UmhPcWFoOGFxdXA5MERxbDVjSUMvdDA4T09aZTBwUzRZZFZkWmJseFFaM1V3ZlVhMUIKQVRTZU13TVBua3dUVzRNSVRwVFJ1MXhjeEFBSWV0NlhPUFdUVlFJREFRQUJBb0lCQUY4azFQaktCOGJVSnJlSQpSaGM5dlNURTViU1ZLeEZoaW01VHgwUXNDemFmbHdDSCt4TEJ6aG1tZUtyYVB4dUU5d0kyeHRwanFzMHljRUVLClMrOE1IbUVJU3Zrd0JZZmxZclVtL0l6cE9vb3pINWpUQ0VNTkNoRFZqZ3MxUkJ0OWRKdlBzWU9wWlBzVDhrUnUKQzFsZkFmOExETHZqa3k5Wk9tYkFKaXdIRkxZZEh3ak1ZUkdzK2x6RE1aeWlvMW5NU1NkUUdFWGo0L1Y2TGphUQpGK0Q1WGxvVHBBRGdnWXJEa2VtTk1RZHpFYmoza3daaFpybzNFelZQU2xEd1RvT0dnSEhZS0hENW1udTUxSGlOCkZwOE9yakJXaGdBalNSYTdxVWZTUFA4ZnQ4OVN5S053ZlFzc3FaTUNBVjBvcFlEdVB1SnIwL1RndUNySkpGQ0gKOUhWc3RtRUNnWUVBemsyekZoWnZkUnBsc0FFcGtxdG1HcjAxKzdEZGNtaUQzSWdiU0pISlB1NDdCQmxGTWJ2OQp4SUF6UzRFaEVWblVtTkRiMHAyREk2NisxQWtsbGZEdUpQUklHZVl3OUZhYnEySXpJZjZCa25rRm90T1NvL1pGClJWaUg2WlhJeE5qTHBsaW1mNHM4SWgxUEpYM0hkSjg3NkdtWGpVa2Z5VmJzUGZobjZ0SmRVV2tDZ1lFQTdvb1QKaHhuVHFUY2N4blJtKzQ1VWpzU1A2RW94NDltS3dDL3gzcUFtSm5nbzkxTDkxSXh5OVNLbkJpRkh1N0tkeVVsbgpDRmtDb3hRSHRBNTE0K25iQXE2L1BZNldzRXFyc09TTWYxSlBnWldRbTdpS3MzaUdqanVjaGtiK0k0aDBnaHcxCmUxTkhYSTdWLzRXRHhUYWdBaHlqd0RUY2d1dGh5Z0hSZHpSRnlRMENnWUJnY2ZhZEJ0UUlYTlRaR1ZJRUhWalkKZTBnM2FCRytvSm0waVhTbjBtL1FtYkxCVWNjRlh5dGRwOGxUTFFUMmhaWmI4cGd4dUMxTWl5N3ZGVythejAybAp2UVhRQmNzeER5UXJWUGN1bHpxZjdTL3pWUkdpMFVqRkNJUlJjUkt3NCtFZzNTVEpUNkJIR29pYnNGZUViOFNqCi9HazdSY28wYUF4OVZCblFyNU9zc1FLQmdGbEtia3pnS2c3cGhtZnpJcWwvZWIrSGJLYnpQd0dmYVFUUDdhWDgKSk11NXB2d05vTjV6UklUbVY4Yy9wZTVveWcrUzNuS05meU0wV0QzYU85NzRwdmEyR3ZnYjYrUkp6ME1FQ21PTwptQnhWdEMvV1FIVTE1SWhSWUNJVGFRWThDZ0M2Tm5yWGpacmtETTc5VjNuM0hLWXR1azQwZTJhMlhZQ1VkYWc5CmRQSHhBb0dBWEd3aTNqRFJXR0FmQnRlaDY4dXhWdmZxR1c5Y3VRcEw1NWJyQ2V0OXQyYkdnZUl2MFZUT2dTb0IKZGxpcythMjA5OENKOG1WTnBWRHlYZS9pdzhVM3laZWZiNk84d1ExWXpLbGd2LzRDWnluYnRlcExKcm10WDgrcgpndk91MnBCLzFTOWVDdjJjMGh1V25ENm84K3E4OGRhbktiZUxwNnZPTklwRFlrRWRZbTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lRVUQ5cktENkJGNnQ4Vks5WmpjWDdtekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TXpBNE1UazFOekExV2hjTk1qWXdNekE0TVRrMQpOekExV2pBcE1TY3dKUVlEVlFRRERCNHFMbVJsZGkxemFpNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURpOGZQOEVEODQxVjBiSysxNXpPN2EKdVFUbm0yMDFoc2lObTljZmxIMWZZQ1hna3p6SHlUUmNsY1BzKzFZbVBrelFwRjd5MFBZcTZxdzhVbVdVckV5Twowcit0eUhwaEZkbk5GSGY4bE1DM1M2MFl5TktZS2dNM2RuOE9NbkM3aTBMOThIaGpTZmV6VWZYTzRPYVJ6VFRECnBneVBnU2NwNUdLampCL1VqcTJZV2ZPNWJTSWhGMHlPYkQvbmlmVzQzTTV1UVB3cHgvbkJnVUk3b0YzRmFzOTYKVC9ZMTRwZ1dMRnRqMElCM3dSc01YYjd0dmZOL3grakVjVGxiMXhZK3FFcDBMdklUR2M5Rlo4VS9CeHVrMzhDcQpkaWFFLzdxNmtldndqRENxVDBCemFDWW5abk1CYlppTmFHd3ZvN2NJV3hkQXFOY1B2d203UnU4b1hvUGJPMEZiCkFnTUJBQUdqZ1l3d2dZa3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRlBhVlkzWmNsbFhZYUExYgpxNXcvYlpUTS93b21NQ2tHQTFVZEVRUWlNQ0NDSGlvdVpHVjJMWE5xTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZkl1clVxK3diMTVLMGhjenlpZ2xURGhqVE1iaWFZSmwKSHlpS0xWVVN6S1BWc2k3U2JEN2tsYlU3RU9XYnhURXNaWUZJMm9CRWNUQWV5V1RoY0xkSnVtR2RSMWVpVWRVYQozZ1RCVHo2Y1Y2eG04YVBTZVBJVTVhRWIxL0FzMDdlYmxGcVBFeFpZYmdka2toL1ovM1Q2cUZ6NUx3S0RvSUhrCno0cWZUTTFXbVhjVEc3WUczMXJIQXdpeEV4cXpuWlRaRjlPcjIweExtMjJ3TTZ4Z3hhNVhTSms3SUtkR1FnamwKL1BpVUlKdkt3UU5WY01tWjNQUzZpRHJBR2hmbG5jbTZncENtajVrdWcwVGgwdzJrUXpaZHRSd1hvL29MdGFRYwpWZjk2bk1XTVdqKzFKZmJnbzlxcXVCaU5kWVAwNmxPUlk3OGZrSjI2bzdyakphRTBlTkRlZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNHZIei9CQS9PTlZkR3l2dGVjenUycmtFNTV0dE5ZYklqWnZYSDVSOVgyQWw0Sk04Cng4azBYSlhEN1B0V0pqNU0wS1JlOHREMkt1cXNQRkpsbEt4TWp0Sy9yY2g2WVJYWnpSUjMvSlRBdDB1dEdNalMKbUNvRE4zWi9Eakp3dTR0Qy9mQjRZMG4zczFIMXp1RG1rYzAwdzZZTWo0RW5LZVJpbzR3ZjFJNnRtRm56dVcwaQpJUmRNam13LzU0bjF1TnpPYmtEOEtjZjV3WUZDTzZCZHhXclBlay8yTmVLWUZpeGJZOUNBZDhFYkRGMis3YjN6CmY4Zm94SEU1VzljV1BxaEtkQzd5RXhuUFJXZkZQd2NicE4vQXFuWW1oUCs2dXBIcjhJd3dxazlBYzJnbUoyWnoKQVcyWWpXaHNMNk8zQ0ZzWFFLalhENzhKdTBidktGNkQyenRCV3dJREFRQUJBb0lCQVFDaFZadzdyMWtpa0J2MgpldzRCcnJ5RzVVMGxVWXNicUV2ZXo5RG85R2tFYXBmQ3hTbEtaakZCT0g3bWMrN1VsU21La2ErbU13TXRrMU1LCk54RmIxZmsrOTNlb2xZTGFqZXdlTE5UM3pOQUwvbEo1OGhvMGJubUc3a2g0MFVidkxKdGRaNXhPQ1lGOEMySVIKeGpSanBseENVa05QcVdNc0Z0NUFvaGJteHQrR0UrV3ZyT2ZGdWtNNS9leXY5R1loeW9veW1DbXVvVW8zcTQwTQpnZTNvdm44bHlsWGhzVzJnNXVmUmZ6ak1VaFRCWUxXbmVNNWNmZXRmUW9rY2JMcWxmRzR0MGNSZ1FmTGxvMWQ3Cm12eHBhUUJOMzhNMTFDaHpkNVliK0JQYWg1RnROVnRzUmFNdnRMMXFFUkFoMnU3b3piRnhWVVphblRIRC9Vc2YKZmRxaldwcmhBb0dCQU90UVp2Z29HMi8vbDVGZFVqR3BOUk50SGpYY0ZUUjk5OTFGQnpRMWQxTXhOOGhiREhGWApmMFd1R0F2eFZoY2lldFhpT0RiTnlyQnh5Q2lNM3ZFRis3Z0s2MEsrYVlTUlBMMVc0ck5IYWhqbHk2U2pRRVAwCkc1VTN4MGQ0eVlMOU9VZFo1SUUzSTlSMk5pY2R0bDFKMS9qVExLc29ESXQ0T2lndUNmNTg3UXVEQW9HQkFQYmwKTm9WTmZpWEtXci92Mm9VR1FXaFFOdFF6YXNqb05GSWpVZksrT2NDNStHTnEyNFNYMjdzdjhKbE1ZNE81YWluSQpka2xyWVZMdTFSd0dBV29sYjhUWi9xdDcvd2s5NEVDVjJiTjUzQkZpSWt3NDhTS0lMSFZ6Wnd6N25IZHhnaHk0Ck5FTkg0eWw1b3pVbTkxWDNHczRxZE15ZHFlQVlReFRIY1loUll0TkpBb0dBR3VQQU1JRmN5VXFheGxpMHFNb2UKTDQ4Ymthb0pua3I2eFFVN1VvTDlsTHNlRmI0WnlPWG52RTJ0bjhlL1A3dUg3K0wrNjN4T3VpVDJhM1BWa2hOTgo5WFVCOTBtTkEwSVpmOFZxK0hPanN4Nm5TN1FBQndQaEZ3Y2R0WlFlNnVJRzVwbG1IRUh4elRpSTdhVmVqb0IrCnRvZGpKbGZZUHlQSStZaHhTZXg2cGdNQ2dZQmdYOHpPY0JkanpQOXJtTWJsMGpGSjlMWFNVMWZGb001N21ZbnQKaFUrcDZXNEo4TFpMcGJPQitBNms2R3FZQ3BKa1NQblRZdlVVbUdIYmxJU00ySnd1YlNHNThxYjFCcEE0NWNXYgpCMkJkOEw2T25sT1NOVEdWanp5VWxzclczUm42OS9SK3B0c0hYNUhUdDZnb2lGS1FVNFpRTU9NVXRLUEt3cWVRCm5LUkU4UUtCZ0VhN1BmYWw4cEFNcVBsYUczd2lOY3puSlpwZVNWS0o4OHpFdnBkd2h5TTI3em13MldRRXd2UHAKK2hmV29Bc2VsTmtHVVRiOXJPeTBrT3lWUGJ5bkFySnUyU0dRd2dYclNlSmtpTC9tVkJpakJmRDdaenFrNHh3eQpMUEhSUE1WNmh4SWt5d00xUHF4SC9xb29kUUxaZUdxWURwd3hQM0xzYnVxaE5TZUw3VzlOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    cilium.io/ingress: "true"
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ingress
  namespace: kube-system
spec:
  externalTrafficPolicy: null
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ports:
  - nodePort: 32380
    port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  sessionAffinity: ClientIP
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: e6f718ec5652c246ebc0e27031e82a992741d24282d4a318e2dd66142271813b
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.17.1@sha256:628becaeb3e4742a1c36c4897721092375891b58bae2bfcae48bbf4420aaee97
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.17.1@sha256:1de22f46bfdd638de72c2224d5223ddc3bbeacda1803cb75799beca3d4bf7a4c
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.17.1@sha256:1de22f46bfdd638de72c2224d5223ddc3bbeacda1803cb75799beca3d4bf7a4c
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9880
          name: apiserv-health
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      - args:
        - kvstoremesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=100
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --kvstore-opt=etcd.maxInflight=10
        - --clustermesh-config=/var/lib/cilium/clustermesh
        - --max-connected-clusters=255
        - --health-port=9881
        - --prometheus-serve-addr=:9964
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.17.1@sha256:1de22f46bfdd638de72c2224d5223ddc3bbeacda1803cb75799beca3d4bf7a4c
        imagePullPolicy: IfNotPresent
        name: kvstoremesh
        ports:
        - containerPort: 9881
          name: kvmesh-health
          protocol: TCP
        - containerPort: 9964
          name: kvmesh-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: kvmesh-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/clustermesh
          name: kvstoremesh-secrets
          readOnly: true
      hostAliases: null
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.17.1@sha256:1de22f46bfdd638de72c2224d5223ddc3bbeacda1803cb75799beca3d4bf7a4c
        imagePullPolicy: IfNotPresent
        name: etcd-init
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir:
          medium: ""
        name: etcd-data-dir
      - name: kvstoremesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-kvstoremesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.17.1@sha256:397e8fbb188157f744390a7b272a1dec31234e605bcbe22d8919a166d202a3dc
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.1@sha256:8969bfd9c87cbea91e40665f8ebe327268c99d844ca26d7d12165de07f702866
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
          name: cilium-netns
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.1@sha256:8969bfd9c87cbea91e40665f8ebe327268c99d844ca26d7d12165de07f702866
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.17.1@sha256:8969bfd9c87cbea91e40665f8ebe327268c99d844ca26d7d12165de07f702866
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.17.1@sha256:8969bfd9c87cbea91e40665f8ebe327268c99d844ca26d7d12165de07f702866
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.17.1@sha256:8969bfd9c87cbea91e40665f8ebe327268c99d844ca26d7d12165de07f702866
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        name: cilium-netns
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        command:
        - /usr/bin/cilium-envoy-starter
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium-envoy:v1.31.5-1739264036-958bef243c6c66fcfd73ca319f2eb49fff1eb2ae@sha256:fc708bd36973d306412b2e50c924cd8333de67e0167802c9b48506f9d772f521
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/artifacts
          name: envoy-artifacts
          readOnly: true
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - hostPath:
          path: /var/run/cilium/envoy/artifacts
          type: DirectoryOrCreate
        name: envoy-artifacts
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
spec:
  controller: cilium.io/ingress-controller
