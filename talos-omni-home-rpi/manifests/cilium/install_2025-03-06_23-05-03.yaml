apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-lb-sock-terminate-pod-connections: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  devices: eth0
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-node-selector-labels: "false"
  enable-policy: default
  enable-runtime-device-detection: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  envoy-base-id: "0"
  envoy-keep-cap-netbindservice: "false"
  external-envoy-proxy: "true"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-metrics-server-enable-tls: "false"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {
      "node": {
        "id": "host~127.0.0.1~no-id~localdomain",
        "cluster": "ingress-cluster"
      },
      "staticResources": {
        "listeners": [
          {
            "name": "envoy-prometheus-metrics-listener",
            "address": {
              "socket_address": {
                "address": "0.0.0.0",
                "port_value": 9964
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-prometheus-metrics-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "prometheus_metrics_route",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "prometheus_metrics_route",
                                "match": {
                                  "prefix": "/metrics"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/stats/prometheus"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "internal_address_config": {
                        "cidr_ranges": [
                          {
                            "address_prefix": "10.0.0.0",
                            "prefix_len": 8
                          },
                          {
                            "address_prefix": "172.16.0.0",
                            "prefix_len": 12
                          },
                          {
                            "address_prefix": "192.168.0.0",
                            "prefix_len": 16
                          },
                          {
                            "address_prefix": "127.0.0.1",
                            "prefix_len": 32
                          },
                          {
                            "address_prefix": "::1",
                            "prefix_len": 128
                          }
                        ]
                      },
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "envoy-health-listener",
            "address": {
              "socket_address": {
                "address": "127.0.0.1",
                "port_value": 9878
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-health-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "health",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "health",
                                "match": {
                                  "prefix": "/healthz"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/ready"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "internal_address_config": {
                        "cidr_ranges": [
                          {
                            "address_prefix": "10.0.0.0",
                            "prefix_len": 8
                          },
                          {
                            "address_prefix": "172.16.0.0",
                            "prefix_len": 12
                          },
                          {
                            "address_prefix": "192.168.0.0",
                            "prefix_len": 16
                          },
                          {
                            "address_prefix": "127.0.0.1",
                            "prefix_len": 32
                          },
                          {
                            "address_prefix": "::1",
                            "prefix_len": 128
                          }
                        ]
                      },
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "clusters": [
          {
            "name": "ingress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "egress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "egress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "ingress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "xds-grpc-cilium",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "xds-grpc-cilium",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/xds.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "explicitHttpConfig": {
                  "http2ProtocolOptions": {}
                }
              }
            }
          },
          {
            "name": "/envoy-admin",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "/envoy-admin",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/admin.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "dynamicResources": {
        "ldsConfig": {
          "initialFetchTimeout": "30s",
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        },
        "cdsConfig": {
          "initialFetchTimeout": "30s",
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        }
      },
      "bootstrapExtensions": [
        {
          "name": "envoy.bootstrap.internal_listener",
          "typed_config": {
            "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
          }
        }
      ],
      "overload_manager": {
        "resource_monitors": [
          {
            "name": "envoy.resource_monitors.global_downstream_max_connections",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig",
              "max_active_downstream_connections": "50000"
            }
          }
        ]
      },
      "admin": {
        "address": {
          "pipe": {
            "path": "/var/run/cilium/envoy/sockets/admin.sock"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-staging-rpi
      role: remote
    - name: remote-dev-sj
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1zai5tZXNoLm5laWxmcmVuLmNoOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-kvstoremesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQU5pV0VyZ3VzRnJCdHpsK1d3WjJxQUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd056QTNNRFV4TUZvWERUSTRNRE13TmpBMwpNRFV4TUZvd0hERWFNQmdHQTFVRUF4TVJZV1J0YVc0dGMzUmhaMmx1WnkxeWNHa3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRrMDJlbHRqNE9LZFNBRUQ2dmswR2lvaHFpUWJoWC9OT1VSZ2kKcmxqejZrRUNuMnVySERMUXNzT1c1VGNpL1FDZ0c4WGk4OEtDcTR6SndJS3NDVkE4RWFKUjFmMVZ2WlpKR09yTQo4SzRwUU85alYweVkrZG5jclAzd3ZPSGlYam56SFlKcEFpcVFEdW1uTmZFb2dLM3dZRjI2eTFsOGRUYUd3WXhiCmE0Z3ozTFNoWnZBRFlLMkszcWV3enFCd3NySVpYL1JSa1k3ZnR6QVBHNzI3TmxHYW5qRHJRcytmaTlSdlZhUGUKMzdTeEpXVXZwUXBKZlhyZW5NdzgzNW94OE4ydkY0MHM1OXgrSkN5V1hHaFhhOFUxRE9pdUxQaFdPQnd4Y3BkQQp3NnlpclFISkdXZzlYQS9ETWYvN1d2WXI5TmNVcFh1WHBmNnYwV25UR3RmbExLdC9BZ01CQUFHallEQmVNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVXpQOEtKakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQXBsNHNEZ1lEcmVxOVpIeERMTWgxUW0yZXRLS2RocVQrWC9xRjEvTCtnSW1ZCitObEd5ZS9hOGpTY3pvWlk4WmlPTkRGNVpGdzNzOXAxbHR1ZjBzaUpWSE5XWUp5ajEycUtQakhBNEUwKzZDUUYKZDZ0ZWVFVm93U1dTY3VEWGE4WnJPL3c5WTg5OTBrOGM0UWtHUDc2Z1FEblQ5ODVwSUk5OUxSdEQxc3NYbnZ4VgpLV1ZSLzNYMWhOdWR5cVpDMnVxdHFMcmdaOGppNjNtN0MySFBsZFBRMjl4R1hGV1M2TE5uUXliM0VQU3U4YzNlCk55dEtTRzRCYU9VZ2xvc2d5Rmgyc0JwNkRlMmo5ZitSd3kyYmZmc3FQYjZ0UGJuNnUzSXp2SlA0aGM2ZHRlVnAKWGhmL1BrbklCQ0UvVGVxaGVjMnpYRUJRYkladzhVZ2RLNzFRTXhiaExRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUpOTm5wYlkrRGluVWdCQStyNU5Cb3FJYW9rRzRWL3pUbEVZSXE1WTgrcEJBcDlyCnF4d3kwTExEbHVVM0l2MEFvQnZGNHZQQ2dxdU15Y0NDckFsUVBCR2lVZFg5VmIyV1NSanF6UEN1S1VEdlkxZE0KbVBuWjNLejk4THpoNGw0NTh4MkNhUUlxa0E3cHB6WHhLSUN0OEdCZHVzdFpmSFUyaHNHTVcydUlNOXkwb1didwpBMkN0aXQ2bnNNNmdjTEt5R1YvMFVaR08zN2N3RHh1OXV6WlJtcDR3NjBMUG40dlViMVdqM3QrMHNTVmxMNlVLClNYMTYzcHpNUE4rYU1mRGRyeGVOTE9mY2ZpUXNsbHhvVjJ2Rk5Rem9yaXo0VmpnY01YS1hRTU9zb3EwQnlSbG8KUFZ3UHd6SC8rMXIySy9UWEZLVjdsNlgrcjlGcDB4clg1U3lyZndJREFRQUJBb0lCQVFDM09mTlp0V0dadDVQUwpBVktBRjUyYkdyYWxHM1hyRVRjVXpjZnAxYTJVSlQxMy93NEJCTE1sSGZDdndNZGxRa2IycWR0ZG1xSEMyYzJmCkVpNGwzZkQ2VUg4VVFodUVtL211Z3IvRHhrRDl6dXBWY1hvbWVoRGQwaFVjZ0VTMFZObXVEK00vbnRqbHZRZ1IKNTZpSWpvVWRGR3kzVzlwdmhHUW1qY2hwa0d2YkhsT29VUWxOZndiREJaNmZYODROQzQyU2c3bVJJUVZjOFpvQQpuZzE2NFVVRU0zSmxjNUFIT3pYenduSWY3VXhMSHBFTERiZGhJZ1g4cWwyOGNmdHNPYzh3Z3c5T2pPY3VJcmJ5CkdiYVgyN0Jzam1rMGNIVkdFN1F0SGh2VTVPbnZXc29QNXl4bmtVVWdTNFdaTUI5OXFVZGNjWW5taTFaYk14RjMKKzdxUnhhK3hBb0dCQU4rN25LRXBGL0ZhRGJaODJhamtEbms0a2gxVFMvZjFDd0N2ZWgzUjlvdWNBNEV2N0E3bgpFTGpxdXFQdXhqRWs4cmtjU3NyVnBVZzBZYTZVd2pxN05iY2lhR29oc2FtSU41eHZ0WFVPbHBTcFh5UE16K0M1CkdsTURwSmFDVzdaQ3ZaTHNJTzAwQlZTb1QxTmhXV1JQSFRaTkV4QmRVVlBkZEk1U3RtMHRMTnlyQW9HQkFOTXgKOTlwR0U2emNKSFYvL0lBdzdWN1huMll5enhrdDdzN1RJejNWTDQvVC9xblBZamlub0dYMm80WDMvTkcvekNpQQpEbldCN1JhTkRFWEtQVjlZVFJtbVJxd3JwSXREeEFOYThlNllnYXhTakVLTktqYm5BTVMrdEVYQVFLb3JZSkt6Ck1UeTBOaHQvVFlZM29DZEtFTXlCZnF3RE5vT2VvTlhDbnVGVDlzUjlBb0dBRTluNnVOWURtTmVydGRCNEk2TXcKb1pMaWJCV3kvT3BTTXBwZlZId0h5elZwbmpIWldTMHBiNjdzSnBXT0lsZ3I3VDdVYUJEeTNHaEJicE1tZEwyZApzNFVyREplMnd0c2lUQkFoWXFTTHVkOFpZUHpRU1JsRGU3QXNEMnE3cG4xZmdzVE8yeDB0aCtoek9XdSsyY2FuClNlVW0xdUhnMEhjcTIySDlhOHlCV1ljQ2dZQjM5a2djK2ZVdkdSUzBrWEJ4dUZqOHFHbm9lUy9kMDVOMGM4WHUKMTJ0ZXZVSklYbjRpUkVUOTVlellxaFkzWmtTbk5LWUI1VDB3dEFtbWtzdnRucENjNHkvOW1BU3MvbDhXc00vLwpnUzBYSHdTQXdRS2JrUGVFeWZaSU1INEtxdnorRno3K2hqYTl3Ny9iWHpsZlY5alc4Uzlzc1o2RGdOVkcxbmU4CjhoNlhXUUtCZ0JOQ2JkcHZWQURPdjBBRkVPeVhsNUNpaHl1MUtWVlUzTkNlbGpwRU55dmp5d2FTY05BR0xzdTUKOU9SazVyVUQvR0ZINVBJakw0NXNib2FPNkw2YmFjQ2xNUmZmc3R0MW9SdEF2UXhSaUNQbVN3U25XSkNBRmRjVAp5WndNWnFSMVBzYU1MUmJmTXU0a3EzVUQ2dU5VejlRR0N1bDRSU1ZiOXZIb05IY2tiNjBLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lRTStFcVJ0aWRqcUxPQ21QcE9MTkFuVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TXpBM01EY3dOVEV3V2hjTk1qZ3dNekEyTURjdwpOVEV3V2pBY01Sb3dHQVlEVlFRREV4RnNiMk5oYkMxemRHRm5hVzVuTFhKd2FUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNY01kazN2NWpJK3dnMGF5NGl0RzJzbjNRY0lQQkpJbTRWd09BbGsKN2RJZ1hoK0MrNS8xZVQwWHNVQmR4MVRSNUI4VU1zNVVyZzhjbnRySG1tRE90MUhYK1g2SVNDZ2c4L1NxaW5ydgpVWUJGTUpWLzZYNXVNZjJyRERUQlcwYWJLRjVYSDZydmM4M2Roa2RTQnpFN1NNbzhRbFY4ek5DOUtlSHkzU1I2Cm5EZGZyV1JQazNIWHlZS3Z2cVR2Y0VTdG9DVWVWYTIyUnRHZFpzcTJJSDVJVENnaXkwb1U1UHg3NnpLRGpTK2wKM3ZBVWRCS0haVVd3UlV4Y3czTlpZd3NGRGZkenJCSnpINExxU1lxbFZZcHErMGxZaEYweWxFOS9HaEFQNEQxQgpkbVdpNENaTE9jWkp3alZreXBsdTRESjREZTJ2WTlYcVlNSWhydk1yNXdBQWtiTUNBd0VBQWFOZ01GNHdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYVZZM1pjbGxYWWFBMWJxNXcvYlpUTS93b21NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFBTjRHNGhwdkZPLzRkOG9wT003SU5idEdTRmlCM3RnZDVKQlp3Qjc2L0hWcFNVCnBLbHFpcURQMHBqa0lFNUxHRnJ4eEtBU2xQMHR1SHJScHlSRXRVdUFSOCtpbjR5amZ2UXg4bjVQT0JlYjdsT28KKzZyZUM4ZzNnRkE4K2RWSmN2dXdHUEN6L3RFM1Vielg5SjE2L3BvWkt3NUZ1ZHFxUExPdGdISVliaWlVZ0gwZQp5NUNwL0ZpcWhaYSt4K283bklpKzVoc1pOSi9aSnprV3JXc3hhTUJEbzJjaGdGYms2MjVsVmN3UnRjejlpWnBaCkZ5cmtVcFA5SUh2Q0NZMXh1TGRucTEwYnhzVWsrUDJ4NU8wdGtGSjNHMkxNZ09NR041cEZ2TVFkRGpJZFRHK2YKb2NnSkhQb2h4aGN1Y0R3WVBaWm5BRkFnUDlBQU8zZ0RXL0Y3a096agotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHd4MlRlL21NajdDRFJyTGlLMGJheWZkQndnOEVraWJoWEE0Q1dUdDBpQmVINEw3Cm4vVjVQUmV4UUYzSFZOSGtIeFF5emxTdUR4eWUyc2VhWU02M1VkZjVmb2hJS0NEejlLcUtldTlSZ0VVd2xYL3AKZm00eC9hc01OTUZiUnBzb1hsY2ZxdTl6emQyR1IxSUhNVHRJeWp4Q1ZYek0wTDBwNGZMZEpIcWNOMSt0WkUrVApjZGZKZ3ErK3BPOXdSSzJnSlI1VnJiWkcwWjFteXJZZ2ZraE1LQ0xMU2hUay9IdnJNb09OTDZYZThCUjBFb2RsClJiQkZURnpEYzFsakN3VU45M09zRW5NZmd1cEppcVZWaW1yN1NWaUVYVEtVVDM4YUVBL2dQVUYyWmFMZ0prczUKeGtuQ05XVEttVzdnTW5nTjdhOWoxZXBnd2lHdTh5dm5BQUNSc3dJREFRQUJBb0lCQUVIb09uUHI3MGpMeHUwWAo1alRIUE1EcVhpRXA5Tm9JK0pYaVptdVY0N2tqeG9hZ2xEaU95eW9UWWpseDA4S2VETzdOZlZVY2JOWE1JRDFJCndqRXp3VGQwVDhRNTA4cVZ2ckZRbHJIRjlES0l0bUdLRFFJejhwR1B4V2JpYnhxZDNXdi9aUmp3V0dQZDZjeEwKdU4zd1IxWFBSaGVRVHpEK3NaT0RHdjR0S3ZTYVFBblh4U0tpMWwxdTR2V2RHdWdDbXlONVV2T2tMQW5VaERuSQpEZVc1WkZmcHlEYVprVitRY0w5NEMyeTAvRGRkSG9FaUpPVWpsVDRMZENEWVdTY2NlUDI4TnNhU0NVK0YrUHRYCjBLRTdOdFFSQ2VGVExaVFZUL3JHaDVhTFZWb2lwenIrU1pacFlUSVk4dVdWbVNSajZyeWp6SDZjdytCZ2Frdi8KWVl0QmRXRUNnWUVBNVN5SkdzUGhCZVhPRXQ4Nng2RWVDYlFPTlpYWHA4b3RMT2tNQ3cvQnY5a3lXRlJQbythMAowVUkxR1pPME1zQUE2cVZwdHFMK2RyaVRnZ3FsQXMvbjAyM3VtQ0V0Zm4xZS93WjV6RnZYRDRTL3BmS2p2MCtLCkdlZG9kWHIrTDkxSitMMy9FRGc2dENtQzlGck4vSGw4djA2b1dPZDJxTmlRVWpOVWp0dUdYc1VDZ1lFQTNsa3YKODJPOGJVRDlhZGZyZkhUM3NrNUhmeDdSRk80N29pUld6STBRc1dJcTBmNTZ2a09UcVdUbXBpTy92RjZXdjBvWQpGd2FpbFlHMFgxTEJrTE5KQk05a2R0MWxWMk4xWTdNZEdLdlJzTXBPL3NLTmhnMTNVNjZrRmY2dFo1Zy8rTmtQCnFNU2ZGSVI0eUZkWmdmaUlYWHFwZ0RiM2NNa0JCdWhuWk5vMnRoY0NnWUVBdmM5Tkh5WHRVZjByMk9XYXdZem8KWEJFTlU4UnZnVUVxZVcvcjBaMlRVMXFKSUM5MFpzUEdMeXN1MzZnK0wycG5WL0Q0eFpQcVBscFJrZnRQQUMxQwpUUk5YOGhoSW5lTW9zd0NpRUdoZ2p6SGJxWTUxb1JZM3c0eXVMOTlXZUQ1SDdnVXZKRGZ1SnhuYXBKZ3cwMU9yCnhxZFhONHM5OUVxcC9lc1Z0ZHlNUmlFQ2dZRUFtdXZyaEJzbTY3elBsTkxVQ2hoNWlXd1BWdHhDOCtGMS9XaHkKYmYyUDl2Z2VPOGlpL3pTWWl2dDUxYUtzOG5PNWR6a0tCZWtpbVNjUlpTV0ZKdXcwWVR5YmxGSjRUT1pJb1pubwpHUXVHaERiQnliSUc1N00wUkVNM292ZWJITVl4TkpNUTNSZDZlOUk5VWVIQ3hOTkZPRlRDQzByQkozMTEwTGxYCmFTYTkzaXNDZ1lBRnNHZitDQVdWR3NPcjVFRHpSaGhuZGxGc0hxL0paQzlIMGJXQi9FdmlaTFJCYU5odUkvRGUKeHNuUjdIR21lVzJPWmNlRnRXWkoyQWxtWFM1dlVnS1ZKYXZwa2VmMThLM0ovRjJ5eVpSTHlwWUFWdTRXcEZSaQp2NmZ5em5FRVRRM0QxTW5FUGxEY2grNnIrY3gydlBxMUF4bDQ5eU9qaG1SNmhCQkNHMGM4Wmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-local-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lSQU9CYVEzelovZ05sTGtKcmdRMW43UjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd056QTNNRFV3T1ZvWERUSTRNRE13TmpBMwpNRFV3T1Zvd0hURWJNQmtHQTFVRUF4TVNjbVZ0YjNSbExYTjBZV2RwYm1jdGNuQnBNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2cE9lNDJJTHlRck5DZjB5NmN1Q1FKU1d5QW9CdGN3cUNkd3YKWGpXUGo1K1ZzaHJvR0xNczY1NFJ4WDNzOHBibnhNRGgxQkx5WXM0Q2VJN041U00zK0RNMUttbFd2Rlk4WmludgoxcUhheXdrNWxoRmh6VzBibkFSN2RoTHFKSVhJSEcxYVVDRlNibnNmWnBaKzVjOHg5OVFPSjlDOVprbmNMWGRvCjd4aGYrUHYxUnJNdFpGSVRLVi92NWVXUHpVQ1hMVGVxL0RWaGdyQitpQlJsQmc1WWZkR3EzbVNHVVk4OWpmQTgKRW1UaEpseE96dVJmdVRnV251YVJQaityeTVYbnNKNk0rVExaZVFHYVNHVEZXMkt1aGw4L0pOeHRwOVlpNlVUTwp2K1NBU0hyU29ZYzJTUFhNMzFhRjdna00vUkxGblBTZXhiRHJrSHkwQkpVZDFYbStpd0lEQVFBQm8yQXdYakFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5V1ZkaG9EVnVybkQ5dGxNei9DaVl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGUFRMUjlvZzU4cnFzbm1TUjZXb0h5cDNQZU1EcjNGV3VrZmd2c1VaazJXCnhqKzJyRzgyVDRSN0k1R3pqa3lwOWdid3A1RFNNbWFVa2hLYko2dkZZejBVRVkxWEE2cDVGM1NLMGRyYjJ1LzAKOTBqYUIzQXFqRjRja0xGK2RCMEYzVWRHSFRlQU1peTBXenZxdFdhY210eXN4LzdBdUVhdzE5MFZZek5HbDZCdQplWGpnc0xNN3FxQmZHa080dnBpNXdFNzN4QW90T1lsc2hWZ0NuWTcvOW5BYTloZWdzUkh2ajVUa0tTb0cwUkVECkRnQlZKWW11MHlVUmNyS0ZSS3RMa2g1Ry84Uzh3Q25KcTk2akN5SFlCV29UaUR0bzVDbngrZm9FRU9GOWVjYWwKTVBhTTFFY253Q1pBSit4V05kNGxiMzhISjRMRThWWUdEeGdpelpvNGRZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnBPZTQySUx5UXJOQ2YweTZjdUNRSlNXeUFvQnRjd3FDZHd2WGpXUGo1K1ZzaHJvCkdMTXM2NTRSeFgzczhwYm54TURoMUJMeVlzNENlSTdONVNNMytETTFLbWxXdkZZOFppbnYxcUhheXdrNWxoRmgKelcwYm5BUjdkaExxSklYSUhHMWFVQ0ZTYm5zZlpwWis1Yzh4OTlRT0o5Qzlaa25jTFhkbzd4aGYrUHYxUnJNdApaRklUS1YvdjVlV1B6VUNYTFRlcS9EVmhnckIraUJSbEJnNVlmZEdxM21TR1VZODlqZkE4RW1UaEpseE96dVJmCnVUZ1dudWFSUGorcnk1WG5zSjZNK1RMWmVRR2FTR1RGVzJLdWhsOC9KTnh0cDlZaTZVVE92K1NBU0hyU29ZYzIKU1BYTTMxYUY3Z2tNL1JMRm5QU2V4YkRya0h5MEJKVWQxWG0raXdJREFRQUJBb0lCQVFDdTBZL1JHZUdodkV5MgpPeFAzTDMzK2E4K2RGTURZMmI0K2FVTHljc09NaG1HMWpjVVcwMVlEbFc3TDhXWG9hdEdVeFRMamJiWDNPTzgvClZCQS9mMzBhS3k4OEJvRlFKdk1rN0pkY0ZnRTBldlBlVzNlU0QrSmh6aUxLL3pMVjZmclZTT0t0MnNOWklZeCsKZU5OVFVDdVFJWEFTeWdMVDBERXZhL2hRUzlYTitRbmZLWjlob3Y3KzJYUEZ6WStJeTlQdzRJNGlmdGlBN0tVdQo5VTZubUJIVHpiSHFLWWdxWk9IMWgxY0ZUczZBdnJneXFsRy8vYXZsWHVVR1RBSGluK050SCtnbXZ6M1VldXR5CndPYTh2SUF5UXpQcDVFR01QUGdGK3NCSk1QcGY0Ui8zZEVkUjZJN3d2TXNtSHBHR08yWDExelVNSEZUelBUNi8KaTlGRHhFc1JBb0dCQU1EWmZTMFRFSU1SR3Y3OGp6cXVwYWoxc2grQnc1bGE3bTl2VE1RQTNUNDNKUUxob04yUwo1TmlTemlWUktYb0FXT29XNCtWTXpMS2dzdnRNMVN5bkpQbUU1WnpLempRRkFvVEc0bUNpTzZDS0h2elNtVEJ2CjlnY1YvNGUvM0NQMk5TclVtQTVYVXZabE0vTWNqQ25hVm8rRklScDBxMTI0M1g4RSswNDJ6RisvQW9HQkFQejcKbCtXbGlOeHJ6RTBPT2JQYlJHeW8yN1laYllsTnkvYWEwM0Z4VzV5RElJOUJmS25jVzhTUndxemRpSXdFeU94TwpMbDBpTjRySUZYR2ZqTm9OMzRiSW5pWHJCNURydWxha1loNGwybHZibFg0R3hWdWUwQ3hOQXdyeEFRZWFiMnZrCmRMb1NGYlMwREloM2ZvcDkzZ05ISVlJSmRhQzNnM2Z6MUJoV0VSUTFBb0dBR1Y4RGx1Q0JOWjBVZmlOZi9JcHAKaFBiOS9pTW1ScEN0K2I4Y3pGU0l4dHllWStpbkx6OWFHQndJUHVTVW5sWlpYRUt5ck1JVDFCUk1ONzk5OUNmeApOMXFDa3NRanFMaFlBbnZmNEhLM2dZRnFYanllcHI2MEVXNlZkWmlLTDdqK2Vhb0tieWlSNDVTZzV3VUVjNlVqCjZqSExqeDEyUmhoQ0c2bmVIZ1lia1NVQ2dZRUE4ZXhuUmVVWERETEtIS1lONkVFM0hmSWNxZmVIR0ZhZFJpYXAKTFVNS0tKSDlBUUhQQldFRklPV0RGV3lFdCtHYmd0OEExMjl4VGZZcEM0OVlVdTRSWkFOVnVVMFkzeTJOOUcwZQpwMVhyaXd4aDJUTUFhSzFteGZhZmdrY1doUDdhcm9LNlhYWU42OUNDYTc1WjlIYUphUGtNd2gzcHJ0ZlBrVlpLCjdUcmcra0VDZ1lCVXMzQ25VK295ZllmVFo4K1ZhU25sbDhSQmFpYnFReDVGSzIrZTFna2RxYWRJTGo3aFFVT2wKVXpRck1Ycng5R1pTUjdHc1ZaelVlY1BwS0FoRTZXNkhMTGpRRXhmdExDL0dyOUJienFVcEJMb3YyN3RRV3EvcgpJMXBtTDhOVXplM2x3ZWlONG14cFV5VVNydG9YVHVsbHRsd0pLQVl0NXJzdTAxQUhzbERxU0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2ekNDQXFlZ0F3SUJBZ0lSQVBNOFo1Mnd3clVWTUNvS09TNFFxNmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd056QTNNRFV3T1ZvWERUSTRNRE13TmpBMwpNRFV3T1Zvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1MZDc3NmhCRFZpd1JUUE9HYWUKeTRtVVpZWnYrUVR1elZYd0orVEt2K2x3WXZtSTFBcHFJMkE0bDR3dkxSdlFVRnRPR1JMWjR3R0w2amQxQkZCMwp4WDlKaDRNaWs3ZVVYQ1hCYzQ4eVcyTjVVOGwxbEJ5T2JINWNNNTd3dU9NZzM1NDhIa1hNZThhZXpiNUxFVXlhCmpFUW9HMmRHMWF0dmlaYStQaXRlU2IwMFJJM3hTeEFrd0xSdHFOTlc1MEJuMTgvcW52Q2x0bDM2dzZPT0xFMTUKSGRLTmtHUUpRQmlHaWRQbVJtYVFSbi9XaFdYSmkxSFJ1djJ4bmxVS1F5bElUdjBqNmZjZDgrSGIxdktJUGV2Ywoycm1wN3MvdlZ6Mis5WnphK29uN1FiRFhnWUJUWWZrSU1xWVhmNlRkeFhIc3FKU0JKREd3TFI1WHVnQzVvTjNUCm1oc0NBd0VBQWFPQjlUQ0I4akFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTlwVmpkbHlXVmRobwpEVnVybkQ5dGxNei9DaVl3Z1pFR0ExVWRFUVNCaVRDQmhvSWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5CkxtTnBiR2wxYlM1cGI0SVFLaTV0WlhOb0xtTnBiR2wxYlM1cGI0SWxZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnkKZG1WeUxtdDFZbVV0YzNsemRHVnRMbk4yWTRJU0tpNXRaWE5vTG01bGFXeG1jbVZ1TG1Ob2h3Ui9BQUFCaHhBQQpBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjg5T1ViQ2p5UDJoNThxRng1CndHUnRmc1plbmkzYmJyb3RHU1JwV2RUbE81amtoTmtFdUxxazZPN21yNUloclcvZ01weFF6RGx0SmVJV1dDcnoKWm1MOHYwY3kxdUR6bjBlQ056YitwenA0eDRnVmQ1ekx5bXYrUDFSWlZCQjBNdXNKeEJkRVhBZW1wbVVMTk1lawpjOU1JSDhqeWVERTVoUExmb2hBN1U2SXR2K0xaMXdpRFBFOWpOK1pJZWJyUHdLTUFKUytsZHRRQklhd0FGbm1jCjZrTTBOU21IcVl3NlBWQVcwTklIOHQ3Z1prWjh6WXBmMDluT21JQmhNWG9GNks1TXlkMUpnano1ejVxZGhRSFkKcXRhaWIzTGpXWHF1NDlEbzZlZE1NN1hoTW56STFQbzh1bXFiSDJlUHJnbDNOcWIrbXNsYjFXSUdGc2g4cjZhNgpBVFM3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd3QzdnZxRUVOV0xCRk04NFpwN0xpWlJsaG0vNUJPN05WZkFuNU1xLzZYQmkrWWpVCkNtb2pZRGlYakM4dEc5QlFXMDRaRXRuakFZdnFOM1VFVUhmRmYwbUhneUtUdDVSY0pjRnpqekpiWTNsVHlYV1UKSEk1c2Zsd3pudkM0NHlEZm5qd2VSY3g3eHA3TnZrc1JUSnFNUkNnYlowYlZxMitKbHI0K0sxNUp2VFJFamZGTApFQ1RBdEcybzAxYm5RR2ZYeitxZThLVzJYZnJEbzQ0c1RYa2QwbzJRWkFsQUdJYUowK1pHWnBCR2Y5YUZaY21MClVkRzYvYkdlVlFwREtVaE8vU1BwOXgzejRkdlc4b2c5Njl6YXVhbnV6KzlYUGI3MW5OcjZpZnRCc05lQmdGTmgKK1FneXBoZC9wTjNGY2V5b2xJRWtNYkF0SGxlNkFMbWczZE9hR3dJREFRQUJBb0lCQUZLWnlQcEJQb3R5cE8yeApPUE1tOUpnSTgxQWRQcTA4bklXRkd5UDhYWVVTUXFJTHdmWDRMNjZsem5kNXQrRkdXQW1iL1R6a1p6bE1tYWVRClRwZmRiVFliY1BuQk9tUmkydnlXRitubktwM3IyL3hWZnNic0NFazN4Qm5uYURlK3c0dExhSG1seUFIVlp0ajIKOFFwTHFKRnJmdEkwVUhZdS9WK01uTVc5WGZ4NDRnb2dndjhoR0V1MitsTWt3dURuVzYwUUo0QWprcDlhMFVQQQpWZkVhUXRucVF2N2M3VTljOVR4U2NPVldhdFFYL2VEalRjWUFaNXN1OEo4OE5aNVd2YXYxQ0tYYTh1WGFhYWJGCklDUlN1QlNhTi94cmVTZDc4ZDV2WEdHT3JKdHY5TFlsZ1FVUkVGb1dNL3BUT1J6Qy9oZEF5c0szTm85cWRDeU0KQ2JEcU53RUNnWUVBNFZ4ZDJiWVk1VFFlek1NUjhVMFdBOHF0djFSbjg3dHc0c3NuRGV6aHBLVWhTVGxlbmp5cgpUL1cza3QzcG9zSjloL3loN0xTeXM3UnVJMmE0aFJETkRkUVVqTlZsbTJENXB4bkpMTnZSdUZMQmp5eS9IejlhCnJHbkhqMEljN3JuTHBDL2ZtNUVQMDdoSkJSN1FyV1FXS1VJRkJ2ekt1emlVUGhYbFdxaldaL3NDZ1lFQTNWdzgKenhlN2dYRXpveXJheUVPbjk1Wmw3blp1SzVhVkZBNzZzZGhaOCtMaE1WOFZhc2tsbXl0VjZRVnVrb29NUTR5YQpyTjN3a1plM29aUUFoNkRkTWJwRWd3ajlkQWdCQzA1MGVFd1FVL3lCYWsySE83QitoTDY3SmRONFQwSnNDSnRMCjc1ZlZZR2xFZlJsYTh4NlNZNEllbmF3RFU5VGZOUlJlb1Vnb1hHRUNnWUFDbmVqMUV6azh5QnNuYzRoc3plRlkKait6dWtOTllNREFDWWl1RTdPQTk0akQ5d2EzSWxwbkNwdTdIeE0zbXR1MXdPODNCaXVPY1ZKY0cwRFdLVGdTagppWGZubnI2OFRDYjUrc0dzUkswdHY4QkJvbHBoeVlHTENQdHBQWEpLajF1Ky8xTlFZaUhWNm9qbWgxSVRBVnVFCmhTQzcwUW1sbk9XVHh2dFB6ekFXS3dLQmdGMktVcS80aVdYRG5seC9DWUREQmtHYnJtczhaSVhLMWlocHhBcFAKTUlQZEJlaEZFOW5TTWpBRitnSEVKOXVJdG5IOUFvZTJLYWg4Z2o2bk9pb1dFaUtuWWJnMW5sVGY1UUVRSUN1TgppUURVblNOOHEzN1BzRWNNQ2kyTDFUVTVEa244eGZQekoxbmNZZkt6T2ptdVc1SHRORjdRaDM5dlh2c2hKblBrCitCbEJBb0dBUS9QcjhTd2psNUVscG1ydzZ0bHNBbFN6TzBoMHVtYk9nUU9JdnVYakV3QzhqN0xRN2tqTzJFUFAKZXJPK2RSdXBiMUpWbWV5MUM0Z3FkQlJmUk1WUXZGUlpydUo1TFBDcDBYWEZwY0h2K2IrV2RkOWc2TEZwMUhvZgpCQlVwTmFrU0JTT2tTZnNMSjdOVWFIM3Y0QjRUNmFUeXI2b1ZOcjBtd1RuVThEVjZyc2s9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1GV3hURys5U1RsQm5acnMxc1lQdkF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd056QTNNRFV3T1ZvWERUSTJNRE13TnpBMwpNRFV3T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRoWlRnUDF0R01qcWpFRlI2b2Izcjh0dmw1dGEKK21XcDNoVVpsc1VmT2pub1VVWUNmeGtmZHY5Ykh1OVJJaWZsZ3NHSXZJY3lGRDNYdG1SRGEzeWdvMVVZcWxScwo1Vk8rbnJtRkRUNWZGazRkbEJGcjVUWnV4YkhNZDYvT0Y3MXI5d1hEMHdMUE5HRk9EUCtqVmN6OGVpNUxVemRoCkpQYzhpSHBqWDB5UksxNUpTalFpUCs1QThxR3ZQQTJSM0JLQTBZaVUyNUd1eS9QcWZoTWg4L2VMM2NsWVBiYkwKUDZGaDh3Z0NsdVo2akNVd2UvRHhUOTRFOXNYbmZvWHRVMVdBSGlYdmZqYnQ2c1NDUWcwaHNSN3F5anE4VnpnZQo2bUU0bDIzSXBiUHhHN3hZSVgvNzIxVy9vMFB0WmJscFJHYmp0WnNYVytQS0Q2VU41NHN3TXJHeGZ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRUVZelllaXJpUFZDZ1Z5dHlPaUFGSHY4OGc2L3BNUG5oZ2d2Y0g5SklrMnRBSXMKUEhIdTFkSDlYTjV1QWx2RkQzbW1Ra3pqWW1xWmxXa3d3VDN1WVJmWml5d2tmemN3bmFvSkxEcEQvVmRwT1J1NAp1ZzhzMFpmOGZ5dTZkZ0R4RWViWktyS09zSllDOWd4YVlCbVk5d1dJWUNXbSswb2tzUGRzYlBjM3p2aE9KbjZxCm9meUUwcm0xZkNsVmUvVWpNMWZ6SVdVN2VnbmFUMmJBbTlzQWVBYUFPb3pUTXByUlRiZWJhMFZtYXJhNXVvbm8KUDBUb2dReDRLaTJoQXFPaldoQTdPcXdTRXdvalFweEwzT0QrUndTT21ab1ljdXFsTkNFdDdMbHVqdlcxcjE0cApmbGVqUTh0dTVlVldaUXhycjdRS3M5V2s1aFdkZ2g5c0I4TlFFQWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdGhaVGdQMXRHTWpxakVGUjZvYjNyOHR2bDV0YSttV3AzaFVabHNVZk9qbm9VVVlDCmZ4a2ZkdjliSHU5UklpZmxnc0dJdkljeUZEM1h0bVJEYTN5Z28xVVlxbFJzNVZPK25ybUZEVDVmRms0ZGxCRnIKNVRadXhiSE1kNi9PRjcxcjl3WEQwd0xQTkdGT0RQK2pWY3o4ZWk1TFV6ZGhKUGM4aUhwalgweVJLMTVKU2pRaQpQKzVBOHFHdlBBMlIzQktBMFlpVTI1R3V5L1BxZmhNaDgvZUwzY2xZUGJiTFA2Rmg4d2dDbHVaNmpDVXdlL0R4ClQ5NEU5c1huZm9YdFUxV0FIaVh2ZmpidDZzU0NRZzBoc1I3cXlqcThWemdlNm1FNGwyM0lwYlB4Rzd4WUlYLzcKMjFXL28wUHRaYmxwUkdianRac1hXK1BLRDZVTjU0c3dNckd4ZndJREFRQUJBb0lCQUVGOS9rTGk1QjZLQlhLMAorOVd5L2R1SS9IWTNOcDNoZXh1WjB6NWJZRVA5R0FaRGZCcGkydUplTGxRT0Y4eUZOUk8yc0l1K3hOQnEvZTlvCldLZU1oK3EzYk11MjJnUVIvdm53R0Y4UEUveGQxRjJ4ZG5GWEJyaXNuckpkMVc3TWZzeTJraHlQWWgrZzhBWFUKM05hN2lBUWFLcFdmMFowT0lBT21vWjloVnNXVjVNYXR0MmF0OXlBajhTa1RodDk0TkhWQWQzdFh0VVM5cTlCZwpwOWI0TmREVmVJRG01aVNrcVE2c01BWHNhaDlWeGdrSkNmTkkweEFZc1ZHc1RqeWZ3Y2NyNmE4VUhkeVo0cTVoCko0M1pibHpOYkpUWmNvR1JuVGcxNjFHNWNGV1RlbnhwRDJGbDRPaVp1anA2dEdhdDJGTFIyVUh0dHFlb1pYSWIKWWxkWG1BRUNnWUVBM0R2VDNMa1hrTWFSK1doNDNGY0c2QnBEcjJXcmFUZ2EwZnFNV3NQR0c2emtiVTk2eHRRbwp4dXo1ZGI0L0dRVzRyVlNnbHJnaUo1WTg3UTNKSDhsUkhNdXdndWRkRDYycDhnNThyWE5aQVVQUGx6TlU3NDAwClJYRThDMXNmUFlWdVNMNTJxWkRSb0NGajRjWkNDVXM0V0JXL3RRb0crQjg0cVVEZ3BHUkZPbjhDZ1lFQTA2aVEKM0NJMnJJc3FKdVN3ZC9sa0xKNHhnM1Y1VUc3WTladXN2bFNOa2FFbml0QUJkL3FVZWZqV1Rzb0NZOStuVVNwZApaYlhPL3pVNkI2b1AvbnpLRUVZYVhKMGhaK1dIV1NpSUxlQ0poc0l5T010Z0ZnRkFtVFNyYkg2SFRKa3NrTzRqCi95azU4WkFZWnMzWi83eFc2Y3hSUFZxRXdoRnkrL2s5UGlXaUNRRUNnWUJUa0hQa0pXc1dxUEhNZytLUUlJbGoKV2t2aWFwNXVyelltQkg1ckZpdStab3pLR1VWSjJraWFxbUpCVmUyVkxnR1Q2eTkvNE9BOHl4blZETTBLdlpXRQphcGxRSWovQ2FpKzR3OXgwNS9hV3IwYytaT0RPZ0hLY0FzbzR1TnVTdVdWT1BzN0Jxa3lRQ1B0Z09Kem43OTJ5Ck5wWm1PQ2JLMFBYcjZzMFNNMlc5T3dLQmdDR3h4d1hVU0lIbFVadUpjbkpXK0ZTR0JublgvSzBLU0cycEQ3SHAKQWZSNkJESjc5SS9tQ3piem55SkIxR21UMUMzK29ZbXNqTHhoKzgvMmliOUluRjVFMnJOOXJEQy9BSEg0R3QyNgp6Z251NWxIV1JvQ2FTRzliVENMa2JhT0xDdVl6a3ZWdTJiT1Q3ZDZIekxtQ2dRK05JQzIxT0Vjd3dlNU0raXZuCmo4a0JBb0dBS0tYYkd1YXM5Zk1uVGpOVXVRTWZWeEEreTU4aUlPR0YxbWdHdEU2Q2RvdU4xdFRkOWRwemQyMVoKbzI1bGVTOEFZRnJIVGdQeG5wWUx6ZWJxbk9JZ210K0UwT2ZWKzliQ0xxUk1VVVpCazZOMTR2V3d6c1hKOFkreQo5MFlnajByaVlXdWJJSWhIMlZ0ODkvQUlEOUptbzNIVWhnRUNCamgxUHlZMHppdnAxSVk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQUpXL2MvMS9mUjQ1MHlZR09pNmpHNlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURNd056QTNNRFV3T1ZvWERUSTJNRE13TnpBMwpNRFV3T1Zvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzhuM3Q5aG1JV21ndTgKZk9oOU4vcXNGcWhURkNSUDFOdTdkQlpncG9oMFdYQXF6azZlRDNBOEloa2s3NmphN2tKdWJ5ZVVQaHdwZjRrRQpNTkthbTQ4OTJrb1pwNVBTOVRNeGY0eW5iM25MLzVCdHovR3ZFOXhyTlM4dkFzbWMvaTcrSWNvLzR1SUFMd0lQCkp3SzEwYlptSk9JUEQyNUtLVTEyTmdVTzlmbHN2L0R0cWhxdFRCVW1aMk8zZzJNeWJrWFpyU1Z1b3RURDJWS3EKZEw4aUp6b1NMamJrR202UjVDRWRNUFhqdlBCQ2l0WTloNzk4cDE1QjhzT3dwZ2d2eXVOTklQZzVpQ1BxSGhOSQoxRlg2Qm5hRWZ4VzZNWkFHTzBuR29aV1p0R0o4a0Y4czJINyt4UWdFblBqcjJ3RUdyaXQyRFRhUDRpaU5BVGRYCmRpOElrK3FUQWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUGFWWTNaYwpsbFhZYUExYnE1dy9iWlRNL3dvbU1DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOHg3czVDV2tqZDVadjM4SjYKbVNhTWpHcEN6V0liZ0k2UE1nbXk5L1NJSlRlVWFpYi9YOFF4MmRPZzJySElSR0xaTVRzbkEyM3lISFZpMVVNZwo0T3FyaHNmUnNtd1hKdWV5SUNnejQxOEk0bTJ1YmlOZXBza2VXTkRNZWlLYWFlZDM3SGlsRFdPNWVIVXRJdjVPClBtMGtRc0d5Ny9vQ3liWDNhUVhCa1MwSjNoc2ZUbEh1d2d4K2g4aHBhNjZBVlVUUzFnK1dJbU5aRjkxZFVGWGcKNm8yTUtMK0NkNndQVG13OEtLbVA0RVVCcHIxcFNEbStmWkRXN2RIUzRpQ2xtT1hjcTRZUGcxcjZzWGp2Mzg2TgpHa24zMXltby9TSjdJWmV3WDBJSUF6d3lhTXNUS0JyZk4rS0tCVS81MXMxSmFOUWQwYXZJZFI1RUhpOXJSRSthCk80cVEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdko5N2ZZWmlGcG9Mdkh6b2ZUZjZyQmFvVXhRa1Q5VGJ1M1FXWUthSWRGbHdLczVPCm5nOXdQQ0laSk8rbzJ1NUNibThubEQ0Y0tYK0pCRERTbXB1UFBkcEtHYWVUMHZVek1YK01wMjk1eS8rUWJjL3gKcnhQY2F6VXZMd0xKblA0dS9pSEtQK0xpQUM4Q0R5Y0N0ZEcyWmlUaUR3OXVTaWxOZGpZRkR2WDViTC93N2FvYQpyVXdWSm1kanQ0TmpNbTVGMmEwbGJxTFV3OWxTcW5TL0lpYzZFaTQyNUJwdWtlUWhIVEQxNDd6d1FvcldQWWUvCmZLZGVRZkxEc0tZSUw4cmpUU0Q0T1lnajZoNFRTTlJWK2daMmhIOFZ1akdRQmp0SnhxR1ZtYlJpZkpCZkxOaCsKL3NVSUJKejQ2OXNCQnE0cmRnMDJqK0lvalFFM1YzWXZDSlBxa3dJREFRQUJBb0lCQUhjbmFDTkxtUHNlSlB2VgpEQ2pPREJSWjI4dGZsZkM0VG5hRVJ2NlhOT3dLODhpV3V5TXVMWUJQS2dNalFrL0s0enhRQzNpaUk3Z3pVS0xOCkZMMkdOMTZqWHR3RitHUHpjWHQ3VDZjVnpLTUp0bnNvT1V5WUIwM1NNeFJIZG9VdUxSRnMxdzYwaklBQk1oUFEKV08zeXBINnlIZnZWaTU1ZHFRbGI1cVlreklQZFJkSkN3VXk3RlVlbk5aUWlOaE0rSW05MUZXSEJMWDllcURNdwoyOE1HK05KQk9TNHF3OWsvSzdEdmg5OFdiNW5jRURMV1Y2ZFhLQlNMNG5VRHlSTnBHMnhMVytGTWYrekRRQkxYCmp3SkplTW01V2ViSk9BTWpIVVg2Y0l1VGluYnpDZWJuZ2UvUTZpS3Q3NTZpSkZyRVRCdFR0STdVNVNmcVBZTkwKR0R4aWE0RUNnWUVBeUlpZTFsL2pHZVlJeFRiS29UOFo4dDNCbmZVa243b0k3ZlJ5SnkybnlzeVZ6dWZmaUU0ZQpRLytTK3QrcGpHL2tqcG9hMnczRzF0Yk9kbUdCTXdjUUQyWlptejBtbEh4Sk1sRUxWTWpocWRQaUUxZVBCWDhDCnNKYkRidm95SytiUDAzUTRpa1dsUTlBL2F6VEo2YnBzTTZsR0xQY3BKdzc2RkZSY01mbE9LRnNDZ1lFQThNdDkKYXhiRkI3TmJPUkpQSU9XQWFqL0xQdWxOQ2o2ZTdXNUdMSldNOXhya0s3eDllTVFUWm1QeENJZUdOdlAzL1Q2UgpZbjVSa1h5NlpWaG54b1Y0VExoSkt2RytOUmR3azNaZ3FmZW9nL09IOW5abkw2MUs1alB0RE5BUHdVZU94bTJyCjByNE5waHI4MUFmOGl3WW9HbFRST280SFNqc1p3THUyN2pqb25Da0NnWUF6NDVZbUpuMmZML1RKQXhwL2l0SnUKRTQrTURlakNJK00zbjI4Q1VFQUFxOXQveEdRRTR5SFZ1b1lQd0Z3ZzZMc2RZeWJiMDc3RnpLTno0bHNLRnlQQwp1RnNyWGpGamJwMktGWXAzRDl2RWsvMEZ3RHhUMGIraWJnQjM4T21Xam96c1RFQnRGd1JpZmJwTFJVZVI0UmtxCmJQeXBtZkxlRm5RRFdxallqWWY1elFLQmdCS2U2ZGY2THNwbHFFeEZpakQxRG5VbzhjS3ZyL0YyM2p0bUo2OFMKOFkrNldLSzVOTXE5L3ZJUUVIZWtZMUNrbFN6VVJkSGtDdExCWG5pdjJYYVVvN1RyRzExaXpGNjJyVkg1K1llcgpTekRKQ0Y2YTBXZnljclJTbDZaQ0FMWGxucmpoaWtRRnhuQnQ3ZGRIdHRQWmFnaC9QcDdVbE9POHBrVXRQdncxCkVtZmhBb0dCQUpML0VveGhhRG5LYkhxc0E1YjZnenJJcmpnY1lrQkY2V21jT1BYSFJ2RTFEMUMvclExYk5rMWUKc3htb0VxWVNjMW9zcGNKelJPOGtJN3BEMEptN1FHUEQwK0FJMFd2NEkyRjBzZ084Z1AzU3F4QjJuaVpPdFFYNQpFSzhsOCtBSkdQL3NlbGRjR2ovV3poZFJ1YkdmcHNram5PTXVSdFlXcm5STEFPbnpEcFViCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  loadBalancerIP: 172.16.20.75
  ports:
  - port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5754eccb35cbe3a04a67b67231ada5c589ab6ce63f79d50f023667b021f783a1
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.16.5@sha256:f7884848483bbcd7b1e0ccfd34ba4546f258b460cb4b7e2f06a1bcc96ef88039
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9880
          name: apiserv-health
          protocol: TCP
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      - args:
        - kvstoremesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=100
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --kvstore-opt=etcd.maxInflight=10
        - --clustermesh-config=/var/lib/cilium/clustermesh
        - --max-connected-clusters=255
        - --health-port=9881
        - --prometheus-serve-addr=:9964
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: kvstoremesh
        ports:
        - containerPort: 9881
          name: kvmesh-health
          protocol: TCP
        - containerPort: 9964
          name: kvmesh-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: kvmesh-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/clustermesh
          name: kvstoremesh-secrets
          readOnly: true
      hostAliases: null
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: etcd-init
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir:
          medium: ""
        name: etcd-data-dir
      - name: kvstoremesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-kvstoremesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 3e0af64193bb9db5bc0608ed7c20e51afe791a97fb06c67c01928964063e6795
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.16.5@sha256:6cfae1d1afa566ba941f03d4d7e141feddd05260e5cd0a1509aba1890a45ef00
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
        command:
        - /usr/bin/cilium-envoy-starter
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium-envoy:v1.30.8-1733837904-eaae5aca0fb988583e5617170a65ac5aa51c0aa8@sha256:709c08ade3d17d52da4ca2af33f431360ec26268d288d9a6cd1d98acc9a1dced
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/artifacts
          name: envoy-artifacts
          readOnly: true
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - hostPath:
          path: /var/run/cilium/envoy/artifacts
          type: DirectoryOrCreate
        name: envoy-artifacts
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
