apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-lb-sock-terminate-pod-connections: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  devices: eth0
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-node-selector-labels: "false"
  enable-policy: default
  enable-runtime-device-detection: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  envoy-base-id: "0"
  envoy-keep-cap-netbindservice: "false"
  external-envoy-proxy: "true"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-metrics-server-enable-tls: "false"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {
      "node": {
        "id": "host~127.0.0.1~no-id~localdomain",
        "cluster": "ingress-cluster"
      },
      "staticResources": {
        "listeners": [
          {
            "name": "envoy-prometheus-metrics-listener",
            "address": {
              "socket_address": {
                "address": "0.0.0.0",
                "port_value": 9964
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-prometheus-metrics-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "prometheus_metrics_route",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "prometheus_metrics_route",
                                "match": {
                                  "prefix": "/metrics"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/stats/prometheus"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "internal_address_config": {
                        "cidr_ranges": [
                          {
                            "address_prefix": "10.0.0.0",
                            "prefix_len": 8
                          },
                          {
                            "address_prefix": "172.16.0.0",
                            "prefix_len": 12
                          },
                          {
                            "address_prefix": "192.168.0.0",
                            "prefix_len": 16
                          },
                          {
                            "address_prefix": "127.0.0.1",
                            "prefix_len": 32
                          },
                          {
                            "address_prefix": "::1",
                            "prefix_len": 128
                          }
                        ]
                      },
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "envoy-health-listener",
            "address": {
              "socket_address": {
                "address": "127.0.0.1",
                "port_value": 9878
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-health-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "health",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "health",
                                "match": {
                                  "prefix": "/healthz"
                                },
                                "route": {
                                  "cluster": "/envoy-admin",
                                  "prefix_rewrite": "/ready"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "internal_address_config": {
                        "cidr_ranges": [
                          {
                            "address_prefix": "10.0.0.0",
                            "prefix_len": 8
                          },
                          {
                            "address_prefix": "172.16.0.0",
                            "prefix_len": 12
                          },
                          {
                            "address_prefix": "192.168.0.0",
                            "prefix_len": 16
                          },
                          {
                            "address_prefix": "127.0.0.1",
                            "prefix_len": 32
                          },
                          {
                            "address_prefix": "::1",
                            "prefix_len": 128
                          }
                        ]
                      },
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "clusters": [
          {
            "name": "ingress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "egress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "egress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "ingress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "xds-grpc-cilium",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "xds-grpc-cilium",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/xds.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "explicitHttpConfig": {
                  "http2ProtocolOptions": {}
                }
              }
            }
          },
          {
            "name": "/envoy-admin",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "/envoy-admin",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/admin.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "dynamicResources": {
        "ldsConfig": {
          "initialFetchTimeout": "30s",
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        },
        "cdsConfig": {
          "initialFetchTimeout": "30s",
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        }
      },
      "bootstrapExtensions": [
        {
          "name": "envoy.bootstrap.internal_listener",
          "typed_config": {
            "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
          }
        }
      ],
      "overload_manager": {
        "resource_monitors": [
          {
            "name": "envoy.resource_monitors.global_downstream_max_connections",
            "typed_config": {
              "@type": "type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig",
              "max_active_downstream_connections": "50000"
            }
          }
        ]
      },
      "admin": {
        "address": {
          "pipe": {
            "path": "/var/run/cilium/envoy/sockets/admin.sock"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-staging-rpi
      role: remote
    - name: remote-dev-sj
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlcm1lc2gtYXBpc2VydmVyLmt1YmUtc3lzdGVtLnN2YzoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  dev-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1zai5tZXNoLm5laWxmcmVuLmNoOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-kvstoremesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQUwwalRtMDJVSEhiTFJvVmd1bHhPT1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE1URTVNREExT1ZvWERUSTRNREV4TVRFNQpNREExT1Zvd0hERWFNQmdHQTFVRUF4TVJZV1J0YVc0dGMzUmhaMmx1WnkxeWNHa3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3M4Uk1rSkYxb3NUdzJPVmJsV3BIcCtRbDU3RFJ3NVdsejdUek4KVU5haUJJSndvcG5PRjZSZktwQlNVWExTS0wraGViSnFFMTVxNEpwcFFjNjlGZENNYTM4Mk9oQ244U0RxcklLYgorVURsYk9MS3VnNjdOY0dIaktQSVVnd1BoUm9VNFIwOGJXejRYNTkzT294T3NBSHY1OE0yTGMraUZpdXBqVXUwCllQUzdVVW5uTU51ZW5YRSthRi9MTmQzcXNOZUF5dDJNdUNXL0RNTlJ5NkJZakJFZG5wT00yREkweCtrVEQ0bjkKaFlBeXl5Zzh1ck9qWUMveXA1RzIrZ1B0ay94bFM2ZmNFNVlZYlpVWThNK3cxeTc5THFQeSthTDZPYXZLOUgyUgpnZ1Fwc2hDYlZMMFdVbkh2amhyOFZON2dIOEp3S2ZXaEkxbXdwL2UrRXVqV2hLblZBZ01CQUFHallEQmVNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVXpQOEtKakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQXBSdnZ4RjY4TjJMR1NQc1Y5QkdkSzZiRnBIZzFMQTN1Rkk0blN0KzVuNDl6ClBjTHFJZlI0dUJCYXBZa01YMzRSN0pXUWQxVWUrT3QyUVVEV2ZzejdKcU5YUzZ4WjdnVkpsdURuUDY3NnZOdUYKNjkyNlRXNk9zTGFXUUNPNzhaNytFc0ViR2RMMWNLSXJ1dGluWTNISy8vUXczTzMyNXhiOVdOaHUxaGFqNXFCTwpyRFhIQmMwMnF3MkFXK2JQaVlycU03Q0kwQ0FOV0xiWERHTXo0N2dwQ3dkV24zejZiNjVNbXdqbmxyVFJNOGZhCm1ZN3VndFNLYzJ1bGJqZmpSeWg0SlYyTFU4OUNpYXIyczFWTmlXOGFsSUtxbXJLZHpHUkFsQS9OS0RxTStDK0QKYWVSQkQ0T24xNUVCb0xyVnV2YXJjMUNLUVFpSCtNREZlbjBZVU1hM1VnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBclBFVEpDUmRhTEU4TmpsVzVWcVI2ZmtKZWV3MGNPVnBjKzA4elZEV29nU0NjS0taCnpoZWtYeXFRVWxGeTBpaS9vWG15YWhOZWF1Q2FhVUhPdlJYUWpHdC9Oam9RcC9FZzZxeUNtL2xBNVd6aXlyb08KdXpYQmg0eWp5RklNRDRVYUZPRWRQRzFzK0YrZmR6cU1UckFCNytmRE5pM1BvaFlycVkxTHRHRDB1MUZKNXpEYgpucDF4UG1oZnl6WGQ2ckRYZ01yZGpMZ2x2d3pEVWN1Z1dJd1JIWjZUak5neU5NZnBFdytKL1lXQU1zc29QTHF6Cm8yQXY4cWVSdHZvRDdaUDhaVXVuM0JPV0dHMlZHUERQc05jdS9TNmo4dm1pK2ptcnl2UjlrWUlFS2JJUW0xUzkKRmxKeDc0NGEvRlRlNEIvQ2NDbjFvU05ac0tmM3ZoTG8xb1NwMVFJREFRQUJBb0lCQUJ1eEpuMTlEUy84WVVYVgpmS0tSRkJoQTlsRjlqeEFjeS92eUd2Qk5aM0RlQS8wQkxGdWgwWUlqa0tSOXdrTUFuMTY5MitHOFpEdjg1dnkvCnV0andLMHF3MDlmZENGbTc5S2RmSkRMUmdLQzhCTHl0ZWpwajZ5OUhSOXFGdU1TcmJYZTJiRFlHMTVJVnpiVUwKdlBmRW15ck5FNmNUUXRJVGRyNVpqNnU4Y3JPamx4ZkdWMDdUTFdwTi9ESTJVVm5yS2EwNTA2QzFXRG9lWnVyWApIVEMrZ0k0TFdJZWlXYlJUOG1yeEZMYm5UN2tMQmhjMHZZVGNZaHd3SUtwMXdlQkpiRmZudTYwRDR3d20rdFN1CmxIaUhIRGl5eWt4NlA1aTFVNzFNK2k4MFBsT2w4UFY0VUsyRDZJVGJMTi9OeFVjdk5GV1JZbXVaVW1PbmlVQ0oKenNSelRrRUNnWUVBM1RZeEc0MTFJd2p5akRnVmxsSFlyMUlGMFpqNld4UjByRDI0Vjd5VmVaTzFxditWK0pOcwpFVjMwYXBLTFM3NlcxcURlM21JbzQvSThXcDNUQ0lhWHpZWlBrSXJxUTFTUklqUy9tZlN6UzFGaHQrRTA5dEtrCmVHVG9LckRxMkVlWXVnNmRsdkdNMjdWbGlrZmFyK2FVblUrSGRmSE15VTI2V2NyTEVEM2MzSTBDZ1lFQXlDT1MKUFZTcnNNYmVVbXhmM1FqTjY4VitWRmZWbEFqd0xlRzVONGxJeFdORlRXQlp3Z2V0OEFnb2pGMm9PUWdSYUF2bwptU2ZNaFduTWg2OUVvMVhzL256cVY0R1NVVUJydUd6UmFFMkxRYkdVNzVtaWE1VVg1YzY3eU13OEY2TlpTV1FLCjNtREUycWtkSjY5OEtGRHFEWXNOV1VOcjRxdkY3Y1RDRk5oc0JHa0NnWUVBM0k2T3NmajloTHdFRVZoTjliMlAKUFdhYmxKcGhhL1JlUyttUjVqQ0tIRmp3OWhpMUw4M1ZIdys5aFpDdFFBMDhHYXoxNldhWGZJYm1ORGROMVI5VgpOYjhuajJkaUlWV3RDeHpxdUpicE9UeGdJTlZ6V0hFM09TN3E2TDNTdVdmUldCa0FlU0pIbmp3ampKY043UG9LCnpUb2hSckNhelU4cGNTT29DWDZVdW5VQ2dZRUFoRGN6b2Y2d21jMFhERDU2S2d4cDlTcjRKUUlObjRrMEdpdDMKYjUvckNqTmxraE5uMkkyNE04MC85RkxmRWlZcFVhSWtYQ0YxdEdGTGRBdXVmWFVEWnEvaEpFUCtCRjFaakhHZQorWmZZdW1KMWNMLy9FN0ZnSXpvcXhpRmVSWU50TmRXNGRHWmJSZFRZNU9IQ1ZPUDNhMUVFVlliNzI3Zjh2dkh3CkFWTmtNSmtDZ1lBVkNCbHU0NFZjOWVKVEZOYUFKVlBkbW1kL3V5Z0piQUt6bzBZM1VuQXorQ3VqUUdneFRuNncKMTk0ZTdUQzdoRmtkdHJudnh4eGtKVHJRd1J1aG1ZaDRoYWdCSmMwMzhrcWN5REYxWE9PeU43b3A2dHorUmc1MQpueGU5cHF4RVQrQ2s3L1hKbTJLbkc5eGlTenRHUFFRcUhsWDdBWVp6TWVZZUcxeHp1MVQyUGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQUpwaWN4M0tRZHVmM0dkcThXMXJBWEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE1URTVNREExT1ZvWERUSTRNREV4TVRFNQpNREExT1Zvd0hERWFNQmdHQTFVRUF4TVJiRzlqWVd3dGMzUmhaMmx1WnkxeWNHa3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3JlS2VDMWNCdkZ5R1BnRlBaVnRHR3RwTmJzWlp4ZlBkQkN3dFYKSmhWcnhPVTdta05TQUlKL3Y3OHVOWW5FOC9FM2hPOU5HRFk4ZnVFcmV1bHh5ZVlLYU1COUJSNTNpR3A4UHhzQwpwMnpjNEExb0Y3MFU4WmUyYndxeUVzUUg3NWJXTS9QbTM1ZXdTQXI0NEJaakFLT1BHeUtOVisxdWw2MlZJZVpECmI2KzliYm14RHR3WWM1UmZ5L3VmMTREdTBRekE5SnBWMVp6ZGRwT3I2ZTNYc0dtNmxYTWNUUnZDME15RVdSWnUKOTNDZU9FY3dyVjd2SFREdTRTMWhzTWxOL0lUbW1IMW9RcWtieE1JTTJxS1J3RFJsN0xTZ0VINjZJdHEwV3RWMwp6WUdzaUVPM09nY0krMlFoQjlNRVFmMU5jdlU3Q095Y1J6OXJoaWZ2QnBpYjdENkhBZ01CQUFHallEQmVNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVXpQOEtKakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQVdXMGZWYm9CWUUvYUlDbkx3cjJNVkZjSXdNYjEvY1U4V2I2eVd5cDIvN092CjNuRnhVTkdwNTJycStMWkFWSUtCbHZyS0p2cU5oQ2RDN1JyMG44a2RrcTNzUis4M0ViTi9ZOU9Nai9YY2JLY0MKSGhLSGp6QUFHSSszL01QbGhWcy9nMUNMZHJsTzJJVk9ZcHZ5TnJwUys4VktDeW5pUmR2T0VFcVg4aVpwQmE2cQpOYi8zamEzV3RQaCtsVHhzVGZsazgzS3JMaHBuZFlTT2FqQkVMcXRtMUtXNU5zbkdkYlFvVkVCZHNUbi9IUHAzCjQ0OU95V2treThrbkwzcDNGc2ZxYjRqa1lxWXNUYlhqcGdzcjN3cHFHc0JpUUVYZzVIdHh2ekk5aU44cFdiNzkKRmd6Si9jeGFTaVZKdjMybUhTaUNsNGtqS0ZlZll5K0NPeGNYVytDbmFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcTNpbmd0WEFieGNoajRCVDJWYlJocmFUVzdHV2NYejNRUXNMVlNZVmE4VGxPNXBEClVnQ0NmNysvTGpXSnhQUHhONFR2VFJnMlBIN2hLM3JwY2NubUNtakFmUVVlZDRocWZEOGJBcWRzM09BTmFCZTkKRlBHWHRtOEtzaExFQisrVzFqUHo1dCtYc0VnSytPQVdZd0NqanhzaWpWZnRicGV0bFNIbVEyK3Z2VzI1c1E3YwpHSE9VWDh2N245ZUE3dEVNd1BTYVZkV2MzWGFUcStudDE3QnB1cFZ6SEUwYnd0RE1oRmtXYnZkd25qaEhNSzFlCjd4MHc3dUV0WWJESlRmeUU1cGg5YUVLcEc4VENETnFpa2NBMFpleTBvQkIrdWlMYXRGclZkODJCckloRHR6b0gKQ1B0a0lRZlRCRUg5VFhMMU93anNuRWMvYTRZbjd3YVltK3craHdJREFRQUJBb0lCQUV5NGlHS3UxeElkakdPVApySENqT3M2R3BEb3pwRGVWRFdBcDIrRTJVQUZQTUszUllPdXcxTExxRFZWVW1SYnBldlUzWW9iaEhXdEY3ZU94CmMvLzRzUmZaTkw3N2FsMWJTU0hjYm01cWtQZm11N2ptWGpDZnhCelpaRFMyMXNVaU95QU9VTVB0S1FhenhVMEQKbnFDZmFZOGZPZjk1NXY5RG1HUVFyZUZnZUlaTmRYbDhzMUZLazNralZQMGRVTENCN3ZLMHFzd29TY1dMS0ZRLwo3TG5PclJIbVRDWW5DWUJoWU5LZm9PWUdId2xTemJnYnJxRXV6WThLdHR3NjVBamY3d2VYT3dPWnNXNG4vNzVCCjhZUE4ycEc1dDc0aUxuZ2FYbllsVndBdTE0YXVaQ2UvM0dBcS9OQ3pXN3QzL1EvVUJ6Y1ozZnNqU3dsTnZOWXgKdE9Hbk1HRUNnWUVBMHFwc0RlaE12TlhvWTg2UFQwZEdiZzBlY2dTalB2RW9sVjZFTURMZmVzbUZVM2lxWjRMegpSWGdGT3JBcCtuK1J2a2JvcmdvbE9FUXE4YzFJb2FPM20zMVJUNVU4Q3pWZ3lyL3AzVzVFS1JGSUM4b0xaL3NICkMvTVhsMXlLNFl0MGlMMlY5RFJwZHZNRFJRVTk0ak04MlVvOGFWb2V0VkJldEdTNHM3bTRBTEVDZ1lFQTBGOEQKQWIvbDJMZy90dTIyenliSDV5cmpEbm9VaVRFd0R1Q3hrcVAxQWh2RXhZTUxKZlZudnFBakhMN3N0UEIrbkUzVgpBcU5KVk92NlFIRm91Rml6cW5HQ0xHVGVia1M4VVdtMzdjTmNOY3g1TkZrb3VzZE96aTdXeU1IZklOWU8wMG0zCkxLbkhoKzJLNjNCRy9BUGxVNnlOa3k2N0h0azVlRFB1SVZhUHdMY0NnWUJwK3dhRk1KcDZYWHFkeTJyWlRWZ24KUVQ1UnlmZCtVTUJEOU5xM2pNQlUrMUN4bjRES3RseEFWSkw4NVdjWStGaVB5d2gvbGVjSG1YT3BWY2IyV25DaQpMcmRiUEE2SzdQMld3bG1hNWtBd0VOdVg0cnMrUWxGWE42SmtxVS9OQytWQ2JXNGsvc0VYOEVWeTBhSkNTOWlPCjBBUDRWRGdpcXg0Wnpwb0ZBS2VLNFFLQmdRQ093cG5IeUJjTXZXZUJ5Q240a1VSaW9DS0NWNmZjT3VRSFBYREwKM0NOUDk0Q0FKZ0VzVjQ5bHJrZUFPVnJwdU4rMTdTbGtya1RldHZKMDFuNTkxdC81aGQwKzF6a0I2WHZ3ZDNMNQpwbUIxeDRxL0Q5cjA1UHFjRHNFL09IekwvWHlZekNlQXBTMjhka1k0ZW10WDNMOXc3WWJ0OFJWbzFFRW9sc091CithUnh6d0tCZ0VzQnFiV283UW12eEVRYVZLY2R0QVRiblZmOXIyMnFMdTBwVVZmdmpMMWxMSm1LZ3loWEZ6VWsKTTZtSXBKYU82WUNFK29UTCt1NVRNNm1xbXpGTkc5Rno2dHVjWFlKV2diTmpmYjhpTHZCckdaZGhJNklJckxJcwplVk56Und6MVNEVFQ3TzV6bFgrR2NMUllHbVR3ZWkvd3BiODRrYTdzSUpFVlJCQ0ZRNlZpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-local-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lRTEhURmovd0lUNVFVNlNDcHNxeC94akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TVRFeE1Ua3dNRFU1V2hjTk1qZ3dNVEV4TVRrdwpNRFU1V2pBZE1Sc3dHUVlEVlFRREV4SnlaVzF2ZEdVdGMzUmhaMmx1WnkxeWNHa3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHNHdmJ5emY0dW5UNGpOU040Mzk2Y2VWd00vWE1aeHgveDhmdEcKRFZNMjBhTWpjQWZFYUhKVTlPVkJEb3hrM1hSbFdya3lackVIYUdseThyUkZ2ME5SKzNub3J0S0hMOVJBL29kYwpUUE1VQkQvZ2phZkFkb0VSaW95aUFSeUlOSGI1WTl4MDJ3UDNCS0laNFB1WS8vTUI3YThWUWdvdEJnMlh1TXAzClg0WDV5TXh2blIrQkNpT250dUI4Q1RiREdOOEdtM2RsbGlUUi8wR0NrVFdmcFUwaTZndGw5cW9SamdKNlMrOSsKdXRDM1Vqd2t5dENoNW00N2pWc2RodjNnaXEwS1FEd0pWczgrSjlSNG9UVFIzaTl4NnRTcE9tNGxmQ3pqTTFtRgp1MUtCYmZUNHZvNmRHcUcvVHdmN0NhRG5QRE5MYXBpT2hGc2VVQmZLUnJRc1NnZmhBZ01CQUFHallEQmVNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVXpQOEtKakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQXFucTF5Nmo4d09FcTNZSGJoUDMwbktBZmNyZnZHTnhmQTdiWHE0NUd1STZSCmJxT0FBMVZGalh5dlVremNDWDJLbDhZU0FEbThGMk5nS0pTSzVMQjI1T05MWEVoTUl1ZmRQRUV5V1l6VG82TVUKTXpOQURuUjF3K25BS1pjdlB4Q1FsU0ZsNjRsOWQvRytzaHVacFRxMXphTXJ5aFNjTlFRSTdjZ091VUdqYlZOWApxamlaZy9uNjI0UHdyQ1kwL3pyRFA1WHQrcjNZcHUweWRQVWUybU5OTEtDUSs5T25pdVFaZ3N1RmpoNzFQa2h2CnN6MEZFeGJ2MG9tVTJUR3M3SkR3c2o2bktyR3hoUFhMV1NDeE5wc1NDU2FnWnF3VVZFY1l3WjFXMkl6VUIxMVUKNm43UmdOY0tXbEpyZXJkMmRtT3JySXJmeUZUWjdaNk1GbDhrSGRLbmN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN0JyMjhzMytMcDArSXpVamVOL2VuSGxjRFAxekdjY2Y4Zkg3UmcxVE50R2pJM0FICnhHaHlWUFRsUVE2TVpOMTBaVnE1TW1heEIyaHBjdkswUmI5RFVmdDU2SzdTaHkvVVFQNkhYRXp6RkFRLzRJMm4Kd0hhQkVZcU1vZ0VjaURSMitXUGNkTnNEOXdTaUdlRDdtUC96QWUydkZVSUtMUVlObDdqS2QxK0YrY2pNYjUwZgpnUW9qcDdiZ2ZBazJ3eGpmQnB0M1paWWswZjlCZ3BFMW42Vk5JdW9MWmZhcUVZNENla3Z2ZnJyUXQxSThKTXJRCm9lWnVPNDFiSFliOTRJcXRDa0E4Q1ZiUFBpZlVlS0UwMGQ0dmNlclVxVHB1Slh3czR6TlpoYnRTZ1czMCtMNk8KblJxaHYwOEgrd21nNXp3elMycVlqb1JiSGxBWHlrYTBMRW9INFFJREFRQUJBb0lCQVFEVjJENWZBQS8rYkZFQgpWbm5BV3hPbktZd2ovOUttUUdKQW91anhNOVJ3ekVNMEw1MzVXSmhsTmtJR1FJVU1Qai9VSk8ya0pycWtlUDg1CkszWDN6aG5OUVRYVGQ3UWEyVWtuYk9Gd3lnbEgwZW1CR3d3YkY3b2pCeGdGQzNpcUxNcXRhck1iNjlxVmVzN1AKSGFVRG1KNmkyb0kvZ01ieXJJN1hJbm5PME9mcHFTVll1cVhsaHNpQmJLYVdOa1dNTk5rZTBBSVd1bGxDMFVGeQpXZHhCVXl2UmlsNktVWDZxZDYza0h0UE0xVmJkVE9oeExvVlMzeXdnaHowWlR3RzcrMjAzNUZyTFA1NUxNWE9ZCkRzaXhyTmxHeWxoNVIzYi9NYk5wZmdubjNZSGwvcXBsdTB5cjRYS0dQQVNZUFFsWFlWSTZtMGpkUmw2K0xwTE4KUUtRZ28vbDVBb0dCQU8zYS9xYWY4SHZjc1dBRlBVU1I0RTgvUWRDMGpPN2JLR2V1bzV4K1JNbTA3MUJ5d1NzVworU2VVNFZUWlFIZ1dOa2FqQU03UnlkeDJvaDdQR0c2OGhoY2orL0JUWnlRZXRLdS9iZnBSZm41aEdEZ2RuNlQ4CmFVNVMxTEhOcmtNclhkOUZFUmE3WXdBdXVwNDd4ajdUWUZmUXFXcVVBMEUxYWEyNDZ6TjM2am0zQW9HQkFQNGQKeXR0aUdpZlV1cDB6YjNqRWFtTGJuOHAxZHl1YndrL24zNkZ5OFlPT1VPck5VemMydWZwc2R2dHgxTlNSZHB0WgovckxvaDFNU0lTNk9CUUM2TVpiQm9JQXcwdURKdXIxaExyMXRpWkxYMDRETVhibEpWSjYwQ2dGK3NYQ0R3QmJKCmQ1M2p4MEFZdHpiQ2l1UXhnSkx5YVZJOC9uTGhkN3dTaUcxOVlxc25Bb0dCQU1sNmlkN20rRFJUZTBTVTY1TWIKNWwvNmUydW9wUURuVDlDVDFDK0puZ2NtWnRsRWUzQmVvMnJ0NS9tUmxkU2pMQktsbk5lVVNXT2djaStheVYxMApBRG0xMTRGNWhKTEtGOHlyK1NMaXlUMlFUWTJyT2tIdE5kNk10M0p0Z2NHUUNKSkoxUEhtaFRQd1lWQUwzaC8xCnVWUnBnaml2YkJwZWZrZ1RyZGdKS2JUOUFvR0FDZWtuakQ3YlBrcHhyTWZneFJrRC9TOExvRjNNZEFyekhTS3gKK2gzOWhWLzdqK3pLSGhFb1Y3ZjdPL3RJamJIT3FtaHNJcFluRVBwWUNQVEpCU285M045WVh5ZUlVZlFNTUc2bAo0QVZ4cENSK3Z6czVQSXk3bkNUeGJ2VjkvaUZsVUg0ekNCbG1ILzNXeDIvMjhzZHJlRSswQTkwVkgyM2p1WllQCmRCVzd6MmtDZ1lFQTQrSnhkOGRaTnVHL3ZXMkt4b0tQbnByRmVXQ2g3Z2RuMmljNE1rbWtSZXhOemtsWGpLVWUKMUk1eDJhTEtSRTRrOVUrd0xobHFjQnRrekF6aWpUSnd6Sm5LVXpVUUlzSllMSWdqWjhNODQ5VnZvbGNIclFFdQpLOVp2QUhGaytFOVlyZG85dm9lQ0dYOEdZMFFUbFhXRXJBaXptTUlrQXpSRDBlaUlvUFk0V3ZNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lRTWp2bmIvOTdFTVI3YmxKSDhQY3BPREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TVRFeE1Ua3dNRFU1V2hjTk1qZ3dNVEV4TVRrdwpNRFU1V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMjZ2dWJCNGlzMmlwMS80cEhqb2EKOGZYS093WDVPWmRXUUt5Qmh3NzMxZzlsUU1DaGM5bU5aN2FwVFpFQjBLbnU1Smk1MTh3Q1lBOU1jRHRrWmdVdwpndjBsTjdZbXgyUGdGY3Zvc1BXVmFQSXFGQXBmeUhxa0N4bEVqNVpYeVRKVzV0cSt4NHczSzRMZHNYdERYUEpnClVheXRETGNXc1JxUCt4WFEweHhsektuS1lsRCtoUVR5QytLQ29JTkFQNHJSY3Vua3drZzd6VDB4K1FsUjVLWksKY0NyYW1ad0JlUitJdUFEcGxGR0M0T21qNmp3NzgzS2xsYzlRNStyZGFLNGFMRWVXL3RFRjQxc1Y0VFU2U204Sgp3TmxHbXh5KzNYNnZXenE1N1RYREVrUjgzODR0N3pzWWRHZHVTNkRCTVFLNncxSDBEWlF2bmM1aDVuWEdiaTUyCjB3SURBUUFCbzRIMU1JSHlNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUMmxXTjJYSlpWMkdnTgpXNnVjUDIyVXpQOEtKakNCa1FZRFZSMFJCSUdKTUlHR2doOWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1ClkybHNhWFZ0TG1sdmdoQXFMbTFsYzJndVkybHNhWFZ0TG1sdmdpVmpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjIKWlhJdWEzVmlaUzF6ZVhOMFpXMHVjM1pqZ2hJcUxtMWxjMmd1Ym1WcGJHWnlaVzR1WTJpSEJIOEFBQUdIRUFBQQpBQUFBQUFBQUFBQUFBQUFBQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGeUdRdllmVnREL28rOXNMK3RhCm1KMXBsaFhXQ0dYd3RHcG5RQmhwZjYxWi9lZ3JBWTNxdTU3YWJvNmtNUjBITDNYWitFb0R2U0RDYnFoZDBNVUYKdEpHdE93S21hUmZ1WTdnbmlPZ2x5TGRtMnQxUUN3YTR1Zm5UL2hGQXdSQ292bU5ISEpST21IKzBtOXVHRGFqawpyaUcrNmRZZUdJYkJZdDFCNW91dURUdy92MW9ROTlOb2poM1dqZVlrQitZMFFBOGh5cUxWWmp6cjFqRm96QXVpCkxkVldPUEkvVGZSYS93YTRMdlozTGJpMjBkZzRSeHVyYy92SzlMUjM0dGJSKy9nRk9pWnduZDVnR05TZjVodUQKYno2TzZybUMzUC85RExPbzV0NGVqREwyMUxjRVZzTDhDQ1FQRWEvK2RFbjZwdSsveFRtcnRnWWZvTHRUZEYrRApnWFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMjZ2dWJCNGlzMmlwMS80cEhqb2E4ZlhLT3dYNU9aZFdRS3lCaHc3MzFnOWxRTUNoCmM5bU5aN2FwVFpFQjBLbnU1Smk1MTh3Q1lBOU1jRHRrWmdVd2d2MGxON1lteDJQZ0Zjdm9zUFdWYVBJcUZBcGYKeUhxa0N4bEVqNVpYeVRKVzV0cSt4NHczSzRMZHNYdERYUEpnVWF5dERMY1dzUnFQK3hYUTB4eGx6S25LWWxEKwpoUVR5QytLQ29JTkFQNHJSY3Vua3drZzd6VDB4K1FsUjVLWktjQ3JhbVp3QmVSK0l1QURwbEZHQzRPbWo2anc3CjgzS2xsYzlRNStyZGFLNGFMRWVXL3RFRjQxc1Y0VFU2U204SndObEdteHkrM1g2dld6cTU3VFhERWtSODM4NHQKN3pzWWRHZHVTNkRCTVFLNncxSDBEWlF2bmM1aDVuWEdiaTUyMHdJREFRQUJBb0lCQUh2Z0I3Sm1pQkQ5KzVFMgozVDhUYXpCNDk1S3pPcWkwWThwU3ZUUkpSNDhwM1dKWGZuUlRBVCswTE9MMTI3MHNwdSs0QkV6aDJaRUw3NEgyCnJCWXY1UHhvL256ZE5oOElma3dzVWNyQW9vR3MxZmU1SmV4cTVHangxY3pXN2lnaVFBa3MzNXF0d2tyQ0lIdysKVTIxdHJNMUIvOUFFeTBJU0JaR0U2dDZ4eStKTjdaekdPRHVLUlc4YmZJaS9kSHFFRUpodUhYMi9mb0xzb0JnSgo0Q0w3M0dsN2dUT0REMUp5TFplNTRrMUk3R2RaT1VEb2RRYVI2Z3Q4ZTJWWS9LLzN6TjdtZmZXekdHcjZid29EClFsWmJ2YW9OTG0vVEwxcGVkUG01QkJDZkV1djZpUUVjYTd6QjdoRVN0SkhRS3I2Q3loMUlxRVZERnRtQ1JxdDcKT3V6RVJSRUNnWUVBNVZxWXIzcU5MNGVyWE1WUkRlYmxIcUZzNklkbm5xd1ZqZmtvc1lIbk9URVBFZHo5QW9wRgpORC9OVEdSQWJtS0MwbGMxZTh5WXQxb2g4dGpaZFRCOGZ4MEtpcUxqNUJXV1BmdFZ1bXQyWDdGQ1hucXdCdStGCjZORDAxOGRrSVVOcit6NFRHUVg0dlh0ZVNya0QrZCtsNFhvTFNiWjlES2tpNThiWjVBalphanNDZ1lFQTlURmQKdGZ2M1YwY0Y2NTZjNWV2VnJJWnpTNFJiMllYWjYzNit2dGcyd3oxU2Exam4wZmsyVGxVNVd6VUxyNlJpZ1lMeApwc2oyckZyWVRUVHIxY0dJQ3FKZzdsS0tOUW9hbGROT2cvN0QvZEQ2U05yVkFMVVlnelZ3UGtkb0l6Sk15K1F0Cm9rOW1VSUdSWGdGSlUxVzYyM1gycDdIVXlFY083dWdzVHhEdXhFa0NnWUE1RFBZYUFGUUtWS2NOcG85bzg5eGUKYUMwZEVrRjJPTHdMMnNTQ2t4dWZJRkx0VUprbS9wb0VTektZSS8vYTlXb3hSRHdybFZNUG1MNEZHR2ZQUE1aYgpJREExR0J1ejZxSzZ2RUF3NVBaSEMyTEUrYU83dGUwTFlwN2s1ZFpFWis3K1NneWFGdUF1MGZjOGd4VTRIS2U0CmxKRW1QdHlRUDZwTkdTdXVDMzE1YlFLQmdGMVpVUnN5OWFVVjFpd3hjL3laUC8xeUpyME9oRVdaanpENFRUaXQKYXBRRWFiZVMzcGR6Y1BoN3U5MThvWmxhVldLSGJ1Y1h4Y295di8wTTgraXF5TmQ3b0xtN1ZRRUNlc0tsODFPUAprQ0MzQ2tMb2hZWENiTFd2aDY4K1VtaHNBdzd4TFdxSkhpUHlZRnpRMHBEV3A5QmI1ZTlNWmYxbUNFcHV2RWZSCjQ0VjVBb0dCQUtNUE90anR4eTZIQTdxRURvcXNNMFJ3K1lxZ09XbTNRc09XMWFYaFZJM2xBUFFTbC9CbmhPMzYKUlgzL1RkVVkrMU5SOUk1QlpyU0p2WmlWZmJVUzdVOTNkb0NzNXFmaFdQVmZSczJBcVFvS2ZYM01PNHJlaXd4ZQpheGk4MUdyRk9nTWdLZ3ZJRVFLN2E1YVJiNTEwSVJSNzBtdWdnaHc1a1I0WmJ1Q1Q2YktGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpacW4wZnh1eWdyd2N5RDkzcjdoOVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE1URTVNREExT1ZvWERUSTJNREV4TVRFNQpNREExT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlDUUVLM3dVVUE0THB1RXUxTDJHOC82dFZpZFgKTnV4L3ZhWVJPWW5oUkVnc3JBR1RPc0pVRTUzZUxNaHF6UGl0eDIrRndBcXBNbmVRYnFXT1lRS1NOQ254SzBoUwovZGJVa1pwMGorQWx3OC92VTBmc0dhWWs2MEtkYjBZdVdHTTlWRGJHZ0N1MnBkNWVDempjRGZaRzljWnljSm5pClJ0SGhNalkrdUdBM21BcWN5aExvRnRBVUp5SXBiU3Bsd2htalFVdG9zS2RVMGVPWnF1amwzTG5yUElGZ2EyZlAKcG1UL05LUExZSVVxT2NuL1JlN3UyZnlSZS9scU5MeVVkT3NFVlRBNTFhbC9NbEl6V3RZTk44ZmNuaHNlaE1FbQo2UkJ1U2V3S0ZVS2dYRk1TKzJFZEhkNGwvaGRvelVxYWFNOVVLYlFCbmw5aEtRSmZMMTUvN0pvL253SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQk0rYnh0dHQ5QmxhemQ4cTZDelVWalJyOHVXUzdlZTE3c1FHWnFONjZpdlNnSTAKK2VRSnViMGFEeVFKTGVrNC9scXJWWDQrV1RHUjlnV0JrWFB5RytvSk5KSDZLN21tcWliY0JmbmlMTExnczczcApPUXFYSDFIZjkwck91bXFOOGtoUGMwZ0RSZWhhRUJyM0pLYnl6a3hjVCtmNGFMdnZiU3pPcDNyMVI1eWRSTWI2CkZlZENnSFV4YjEyUVN4OHEwRDNpV2lMV09XYWNNeE1KQnhxOHBHNElmVEI0WmFSSThwRS9DUCsrVWNQeDZoNkQKOThZU1dZcTVEb05VOURod1g1VGZZcWVXbTV1NDRYWXBYM3JVUWVBbnZkUzZ0VDl6eFhoUEw4elVpa3Q0eWRHNwp2VVkxUnJxYUtUMGV3aFNBeUN1aFBMeXVEVzVta3RwTDI2bWc1R1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUNRRUszd1VVQTRMcHVFdTFMMkc4LzZ0VmlkWE51eC92YVlST1luaFJFZ3NyQUdUCk9zSlVFNTNlTE1ocXpQaXR4MitGd0FxcE1uZVFicVdPWVFLU05DbnhLMGhTL2RiVWtacDBqK0FsdzgvdlUwZnMKR2FZazYwS2RiMFl1V0dNOVZEYkdnQ3UycGQ1ZUN6amNEZlpHOWNaeWNKbmlSdEhoTWpZK3VHQTNtQXFjeWhMbwpGdEFVSnlJcGJTcGx3aG1qUVV0b3NLZFUwZU9acXVqbDNMbnJQSUZnYTJmUHBtVC9OS1BMWUlVcU9jbi9SZTd1CjJmeVJlL2xxTkx5VWRPc0VWVEE1MWFsL01sSXpXdFlOTjhmY25oc2VoTUVtNlJCdVNld0tGVUtnWEZNUysyRWQKSGQ0bC9oZG96VXFhYU05VUtiUUJubDloS1FKZkwxNS83Sm8vbndJREFRQUJBb0lCQUFoek5OWGRMRUpoQlc3cgpUUDNnYnFVNG1IcnR1RW55WEVaV2o1MmRTNnlGVzVWN2o0cklqNkl3WlNRQTVqbDNPbWNVTjFKdllNdG5ydXB0CkJRRGxpZVMzN0ozR05QTFFzakxma1pKTmhXcXFDZEc3VktXVWxUUjFvSTRGS1luRHp1QVNXL2tuWDFQTGVxOEEKbkpIZVZ3cWpjVXQ5dzhiM3I0bGVMdkc3NWp6K0NvdlVjcXZlR3ZJOGFMZVFmTWlGOEZ0Zm1oK3RiWWtoeEx0TAp4ZmdhK3JvK3hreXlpcmZlVHdZb1Q2dUxVMllRWEFYOS9hTGJBbHNUaWJpVE5NbFUvK29QcUc5VE9RaTkxeGE5ClhTT0R0OGsrblZCdXJWbjVrNENrK2tEdHduMHArQXpndjVFZ3RRZ1BDb0ZNMXVtSU5IblRERU1SRk5JVTJmR1UKM2xjb0Mwa0NnWUVBMGczMXJwbTVrai9QNnpDRkNIZVdUbjMwWDZ6dldVTU1haUhncEpaTjhvN2dIdGYwcWtTSAoxQzN1SFRiK2JWRHJCcFR4QXU1K3RPNjdBdTEyUXFKM1BpMjBWNUZoNXU0V3ZrODdobEVRRkVPeWl3Z2RYL2pPClNiTWM5QWIvby9HK3hyVmoxNEkyN0tnZUI4WVM0azhaaTJIMGhvS0k2SWNybmxkSW05MEZMdzBDZ1lFQTgrcnQKNXFlcTFTT2NXdXVVbGhqRGRUVlR3RVRORHFoWkFKOUlXSm5nN2t1YkdYaTUraU5Sa1IvQVZnRkg3RDVKMHFJdwpBanN1N0YxVUtnVTVEbE54aCtJaVgwTHNiaXgzYk5tWis2dmptOXJoV3EwSEtaaU9uS2lITlZYMmJ5V2NQQmpFCkpZUHhhTkhacjNQbFE5eTZyK1BUUlo5R2hhbU1YWitxazNsN0hsc0NnWUVBaXFka1VRaHdFalhGRFQ1TjBqVCsKSm5uRjRaSEp2R1lodjd6MUNDK2U3RW1iYjBDbDQrNndxa0pYTnptaDRJN1ZWTmJqOEVkMXBBRWh1T0QrZXlXNwpDSFFxNHRLNGlUTUlHRDg4ejRDYTJJV0hTWGJselAvelMzckwxZGo0emtNNDV2bTlHZmgrUU9FSVVhRlJ2Y2p3CjE2eWxPRlRhQW9PWEswSDZUOGdwTDlFQ2dZQXplKzMxRm9UWGNpbkpneG9jeUdOUk5RMVZjdkE1WE0xVWRVcG0KOFN2cUFHbGZhZjBQVUM4aVM2cGtQT2I2ZFhkTmoxQkUyRXNpTnR6UjljSkNSTmljenQxa2NCTEplbmRHc1hOdwpES3NCTmFVRlo2b3dYSFFWbXZqWENDcjQ4TjVXVFAveHp6VEFaRExuZHJYNHFmbDVzTVBpV1NrZ2cxWU9XT28vCk1KQU5Ld0tCZ1FDT0xTcnJoN3ZhOE04Y3gwc0lpMEFYVkhVVDJRZ2ZhNGlLVFhHS01uM3RDanE4SXRDZjRDcXkKVWtsUWRBRWVVMHVXbStLNEN3NjV0L3pYdzd6R3d2ZGQ3bUVUVlNzcXA3bjNxYlVlNXZLbTdtcXpMa2tzaVRTKwpyQ1FrMktvTk1SREgzZSsyNXFzTFNFRXdGaXQ0L0FRZFMyL01td3d1eGI3YW8yZ2MyWVFWUXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQVB5S3l1Z1VEbzFSNGR4a0ZGZWRaNzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURFeE1URTVNREExT1ZvWERUSTJNREV4TVRFNQpNREExT1Zvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREVtbHF3clBtaUFqaUYKdk9sUjBGeTNMOXRsQlA5TW1oeXZ1eWRxQzlscVNEUTFvcTN5cGhoTWUrV3hTNitZK3QycVcvZHBJMDhtdWJleQo2b3RpU1I2NStkOG5tS25vZVFpZlZ0OUZiUU82TGZaOENxSlVBa3UrUWc5K0RjMUdma0NOUXVjQlRhZFVHMjk4Ci91RHJWK011OWNqUFJqeTdTMUhHVldUSzd5U21jTlp5VktHanIvcm1tTGEzRjBFVHM1Ky82cVp1Y0RhSlBrdzgKQnhuTFk3dk52cGpINzBqN292a1ZHQ0Q3ejZOTmlweHlGM1kyZWtEVkRKN0FxUmtjRUpSbDNvempKM2NJNjIraAo4Q2pLRzdxdC9FN2o2S3FHTTZWeGtqTSsyZjVZTVhxbDB3WEhTZDFvRW1rUWZuVG8wSjV0M2ROYUMrMTNMZlA0CnExcUZFNURYQWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUGFWWTNaYwpsbFhZYUExYnE1dy9iWlRNL3dvbU1DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCTFVGV0VmU3ZQaDk3VXgzSmQKMUFkWVdGS2VPUFdkNVNORzB1aVJmdnF4S0RUZWZzNk84b08weVNOM1RYaFNKRTNMdHBDNHA5V0JGV3owcUJ0aQo4OHpVRkUwbDR0M1ZhekNKNTlBcHh2VmdWU3dDYlZNU3d0TGRqKzYvbmlOTnpSZmdhUXRNOVFxa3h3MHUzR0J5CmJtcFVNU0gzaDVndUFvOTd0L29xVDBxZjMvZEFBNUVUNTBzYWlVSkVRaW5XOW5RL1duNC9VZmo5cW8rcXRoT0gKV1crcFlidmdib29leDMveDZQQ0dYaFRVNEw2SEpncmxqd0RDVlBCVVNqczBpZVMvdThIaXR2L1BoZStUOUw0NApDclg2WktTa3VqWGxFME5aQXc2NnFPRDVYZzMxdDVLQ0pZdW9wa2pZWkxKV1l0OTU0TzhTUWdESXVZZVZZOU9uCjlKV3YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeEpwYXNLejVvZ0k0aGJ6cFVkQmN0eS9iWlFUL1RKb2NyN3NuYWd2WmFrZzBOYUt0CjhxWVlUSHZsc1V1dm1QcmRxbHYzYVNOUEpybTNzdXFMWWtrZXVmbmZKNWlwNkhrSW4xYmZSVzBEdWkzMmZBcWkKVkFKTHZrSVBmZzNOUm41QWpVTG5BVTJuVkJ0dmZQN2c2MWZqTHZYSXowWTh1MHRSeGxWa3l1OGtwbkRXY2xTaApvNi82NXBpMnR4ZEJFN09mditxbWJuQTJpVDVNUEFjWnkyTzd6YjZZeCs5SSs2TDVGUmdnKzgralRZcWNjaGQyCk5ucEExUXlld0trWkhCQ1VaZDZNNHlkM0NPdHZvZkFveWh1NnJmeE80K2lxaGpPbGNaSXpQdG4rV0RGNnBkTUYKeDBuZGFCSnBFSDUwNk5DZWJkM1RXZ3Z0ZHkzeitLdGFoUk9RMXdJREFRQUJBb0lCQUZhL1dLYStIQU90QVMyWgpka1dnTDFpdzZCaEJ4VGdTZy9mU0Y0a0dJMjl1M29LUC9qcWpxUE1PZEFIdnlGSXkxdDNWYUd4ZXBRME1RdzdSCnlLQ2NiTTlZZm10bFJBc01aSTZSOFVBYjR0b2liN0M1ckhodTd1YkxGVFRrZUIvVGt6NEJPQlp1SWhmTlp6cjYKNTFsUVZUQ2lTSEdVcHpWby9YTUt1TWVHRDJEVWdNUTJ3MEdWSUZkR2xIY2wxWFIrL1V3Q0dJV0hIMTY5djdaNApURmtvQUZIR1JTalZsd2hIam5rOGlnZ1FrR0xISWRxUTNCVk82dU9TcVBud2hqT21LUy9CZXdzOWZsdFlCUkVXCk9IK3hjL3NubXpzeCtGbnNzMlZrL3ZqZjdneCtQUy9HK0x1OUt1NUFoRDFkUE54NjQwbFpCZ3BxckxmMmZEcC8KYlVxcE15RUNnWUVBMWJDS3BTdXV3MDlNWkpibGpwZnA5QlpBNXlNanREZG5NVW1wWnp4VWNjbmI1VHB1Z3A5Ygo0NW9PYUQyYjg5Y0dpUi9aUzNoMnAyeFpSdGRNeWVtbFZrVHNZRkplNkhIY2ZGS2Mxc0xtZExvQjdEWEErckxXCkoyUzVNcEFQdnpZS3NzWlZPUUwzOUxEcGthQ2ZUMUppemc1Q0JNaGpsdmx3ZG8zNkdaUUo0bkVDZ1lFQTY0ZTYKRXNacnFsYkw0b2M0eUhaaU1NakFSZk5RRStPM3VmcU9DNEFJZ09vRlhIVHQ5WW54MTE3T1RxdTJNemZPV3RIMQpLUFlZNmxSSDVrTGl3ZWxleDN1SU5OUHJVM1E0QS9oYUQ2aVdwa0kweHFQeUlYSHJyU1diRjBiTjhGL0JwZFZZCk5MR2tJMDhyVEY0U3RFcFhIZndtOGVOajZaT3RDaHVLbk02OHU4Y0NnWUJ5a1VsMFR0eFBDTGY3Z2srblNObDkKTFdVMHgwbEFPU2dSYTkzd1pJOGR4czBudEZGRnBTejk5VDNlTTVIbWhSV1M5VWxxUmpiUGdxN0c1VzNkSDNDdQp0UnRLZFQ4L1ByU296eDRab3JzdVFBQUI1YndHYlZXV0gxR1B3MTg5OURwK0tRbk9IRUpXcFhkRXhhcEVPL2FQClpXT043dVkrTHBSV2E3NTRjajl1Y1FLQmdHYTY3NDBLNEtFT2RLVmNoNGJnSTluVlpnL2NuWHZmWWg2TFMzTjIKcDc3YTAvWE14cEhIVmlXekkxY3JEREJ3MGQvSkhoNThvTWRzZFdQWW5xRW5rZ0IrUUIyU3BWemtIeDZVTDJ3UApBNDZHNkJBUUtDY3dValJXWjd3U1ZQYllQVldBcFpWdU9nSndvSmtSbXlUcUcrOW5NUEZtVmdqbU1aNXIvdHlBClM4KzNBb0dBT3E0eE5tamRPUGhNbXRxWkQvNWxvbW9uQmRMZXRlN0k2UzhOQW9oSHl2UnJmTk1DT1VGUUhaVTcKMHgveUtqZ3NEVFdCMGl5QTJuNUFCb0lTaDUwV0lNUHVkd0dIODlrNVZBUWRsOW1SZ1JyRUhBRTFNcnAxTXBzYQpLeDZGZ3RZSlEwTkdlOVUyRzVNVFhaejVmMkFLSEorLzN2ek84eGdlZitZWnFMeGlBcVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  loadBalancerIP: 172.16.20.75
  ports:
  - port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  sessionAffinity: ClientIP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5754eccb35cbe3a04a67b67231ada5c589ab6ce63f79d50f023667b021f783a1
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.16.5@sha256:f7884848483bbcd7b1e0ccfd34ba4546f258b460cb4b7e2f06a1bcc96ef88039
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9880
          name: apiserv-health
          protocol: TCP
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      - args:
        - kvstoremesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=100
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --kvstore-opt=etcd.maxInflight=10
        - --clustermesh-config=/var/lib/cilium/clustermesh
        - --max-connected-clusters=255
        - --health-port=9881
        - --prometheus-serve-addr=:9964
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: kvstoremesh
        ports:
        - containerPort: 9881
          name: kvmesh-health
          protocol: TCP
        - containerPort: 9964
          name: kvmesh-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: kvmesh-health
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/clustermesh
          name: kvstoremesh-secrets
          readOnly: true
      hostAliases: null
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        image: quay.io/cilium/clustermesh-apiserver:v1.16.5@sha256:37a7fdbef806b78ef63df9f1a9828fdddbf548d1f0e43b8eb10a6bdc8fa03958
        imagePullPolicy: IfNotPresent
        name: etcd-init
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir:
          medium: ""
        name: etcd-data-dir
      - name: kvstoremesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-kvstoremesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 3e0af64193bb9db5bc0608ed7c20e51afe791a97fb06c67c01928964063e6795
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.16.5@sha256:6cfae1d1afa566ba941f03d4d7e141feddd05260e5cd0a1509aba1890a45ef00
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.16.5@sha256:758ca0793f5995bb938a2fa219dcce63dc0b3fa7fc4ce5cc851125281fb7361d
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
        command:
        - /usr/bin/cilium-envoy-starter
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium-envoy:v1.30.8-1733837904-eaae5aca0fb988583e5617170a65ac5aa51c0aa8@sha256:709c08ade3d17d52da4ca2af33f431360ec26268d288d9a6cd1d98acc9a1dced
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/artifacts
          name: envoy-artifacts
          readOnly: true
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - hostPath:
          path: /var/run/cilium/envoy/artifacts
          type: DirectoryOrCreate
        name: envoy-artifacts
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
